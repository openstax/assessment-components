{"version":3,"file":"index.module.js","sources":["../src/utils.ts","../src/components/Content.tsx","../src/components/Feedback.tsx","../src/components/Answer.tsx","../src/constants.ts","../src/theme.ts","../src/components/AnswersTable.tsx","../src/components/Card.tsx","../src/components/Button.tsx","../src/components/CompletionStatus.tsx","../src/components/Question.tsx","../src/components/StepCardFooter.tsx","../src/components/FreeResponseInput.tsx","../src/components/ExerciseIcons.tsx","../src/components/ExerciseQuestion.tsx","../src/helpers/mathjax.ts","../src/components/Exercise.tsx","../src/assets/flag.tsx","../src/components/ProgressBar.tsx","../src/components/Loader.tsx"],"sourcesContent":["import { Answer, ChosenAnswer, ID } from '../src/types';\n\nexport const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\nconst MAX_CORRECTNESS = '1.0';\n\nexport const isAnswerCorrect = function(answer: Answer, correctAnswerId?: ID | null) {\n  // if answer does not have an id, check the isCorrect property.\n  if (!(answer.id || correctAnswerId)) {\n    return answer.isCorrect;\n  }\n  let isCorrect = answer.id === correctAnswerId;\n  if (answer.correctness != null) { isCorrect = (answer.correctness === MAX_CORRECTNESS); }\n\n  return isCorrect;\n};\n\nexport const isAnswerIncorrect = function(answer: Answer, incorrectAnswerId?: ID) {\n  // Allow multiple attempts to show incorrectness without the correct_answer_id\n  return answer.id === incorrectAnswerId;\n};\n\nexport const isAnswerChecked = (answer: Answer, chosenAnswer?: ChosenAnswer) =>\n  Boolean((chosenAnswer || []).find( a => a == answer.id));\n\nexport function countWords(text: string) {\n  const trimmedText = text.trim();\n  //https://css-tricks.com/build-word-counter-app/\n  const words = trimmedText.match(/\\b[-?(\\w+)?]+\\b/gi);\n  if(!words) return 0;\n  return words.length;\n}\n\nexport const numberfyId = (id: ID) => typeof id === 'string' ? parseInt(id, 10) : id;\n","import React from \"react\";\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\ntype ComponentType = keyof JSX.IntrinsicElements | React.JSXElementConstructor<any>;\n\nexport interface ContentProps<T extends ComponentType | undefined> {\n  className?: string;\n  component?: T extends undefined ? undefined :\n    T extends ComponentType ? React.ReactComponentElement<T>:\n    never;\n  html: string;\n  block?: boolean;\n}\n\nexport const Content = (<T extends ComponentType | undefined>(\n  {html, component, block = false, ...props}: ContentProps<T>\n) => {\n  if (component !== undefined) {\n    return React.cloneElement(component, {html, ...props});\n  }\n  if (block) {\n    return <div dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  } else {\n    return <span dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  }\n});\n","import classnames from 'classnames';\nimport { Content } from './Content';\n\ninterface FeedbackProps {\n  position?: 'top' | 'bottom' | 'left' | 'right';\n  children: string;\n  className?: string;\n  contentRenderer?: JSX.Element;\n}\n\nconst SimpleFeedback = (props: Pick<FeedbackProps, 'children' | 'className' | 'contentRenderer'>) => (\n  <aside>\n    <Content\n      component={props.contentRenderer}\n      className={classnames('question-feedback-content', 'has-html', props.className)}\n      html={props.children}\n      block={true} />\n  </aside>\n);\n\nconst Feedback = (props: FeedbackProps) => {\n  const position = props.position || 'bottom';\n  const wrapperClasses = classnames('question-feedback', position);\n\n  return (\n    <aside className={wrapperClasses}>\n      <div className=\"arrow\" aria-label=\"Answer Feedback\" />\n      <SimpleFeedback {...props}>\n        {props.children}\n      </SimpleFeedback>\n    </aside>\n  );\n};\n\nexport { Feedback, SimpleFeedback };\n","import cn from 'classnames';\nimport { ReactNode } from 'react';\nimport { ALPHABET, isAnswerChecked, isAnswerCorrect, isAnswerIncorrect } from '../utils';\nimport { Answer as AnswerType, ChosenAnswer, ID } from '../types';\nimport { Content } from './Content';\nimport { SimpleFeedback } from './Feedback';\n\nexport interface AnswerProps {\n  answer: AnswerType;\n  iter: number;\n  qid: ID;\n  type: 'teacher-review' | 'teacher-preview' | 'student' | 'student-mpp';\n  hasCorrectAnswer?: boolean;\n  onChangeAnswer?: (answer: AnswerType) => void;\n  disabled: boolean;\n  chosenAnswer: ChosenAnswer;\n  correctAnswerId?: ID | null;\n  incorrectAnswerId?: ID;\n  onKeyPress?: () => void;\n  answered_count?: number;\n  correctIncorrectIcon?: ReactNode,\n  radioBox?: ReactNode;\n  contentRenderer?: JSX.Element;\n  show_all_feedback?: boolean;\n  tableFeedbackEnabled?: boolean;\n}\n\nexport const Answer = (props: AnswerProps) => {\n  const {\n    type,\n    iter,\n    answer,\n    disabled,\n    onKeyPress,\n    qid,\n    chosenAnswer,\n    correctAnswerId,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    answered_count,\n    contentRenderer,\n    show_all_feedback,\n    tableFeedbackEnabled,\n  } = props;\n\n  let body, feedback, selectedCount;\n\n  const isChecked = isAnswerChecked(answer, chosenAnswer);\n  const isCorrect = isAnswerCorrect(answer, correctAnswerId);\n  const isIncorrect = isAnswerIncorrect(answer, incorrectAnswerId);\n\n  const correctIncorrectIcon = (\n    <div className=\"correct-incorrect\">\n      {isCorrect && props.correctIncorrectIcon}\n    </div>\n  );\n\n  const classes = cn('answers-answer', {\n    'disabled': disabled,\n    'answer-checked': isChecked,\n    'answer-correct': isCorrect && type !== 'student-mpp',\n    'answer-incorrect': incorrectAnswerId && isAnswerIncorrect(answer, incorrectAnswerId),\n  });\n\n  let ariaLabel = `${isChecked ? 'Selected ' : ''}Choice ${ALPHABET[iter]}`;\n  // somewhat misleading - this means that there is a correct answer,\n  // not necessarily that this answer is correct\n  if (hasCorrectAnswer) {\n    ariaLabel += `(${isCorrect ? 'Correct' : 'Incorrect'} Answer)`;\n  }\n  ariaLabel += ':';\n\n  let onChangeAnswer: AnswerProps['onChangeAnswer'], radioBox;\n\n  const onChange = () => onChangeAnswer && onChangeAnswer(answer);\n\n  if (!hasCorrectAnswer\n    && (type !== 'teacher-review')\n    && (type !== 'teacher-preview')\n    && (type !== 'student-mpp')) {\n    ({ onChangeAnswer } = props);\n  }\n\n  if (onChangeAnswer) {\n    radioBox = (\n      <input\n        type=\"radio\"\n        className=\"answer-input-box\"\n        checked={isChecked}\n        id={`${qid}-option-${iter}`}\n        name={`${qid}-options`}\n        onChange={onChange}\n        disabled={disabled}\n      />\n    );\n  }\n\n  if (show_all_feedback && answer.feedback_html && !tableFeedbackEnabled) {\n    feedback = (\n      <SimpleFeedback key=\"question-mc-feedback\" contentRenderer={contentRenderer}>\n        {answer.feedback_html}\n      </SimpleFeedback>\n    );\n  }\n\n  if (type === 'teacher-review') {\n    let percent = 0;\n    if (answer.selected_count && answered_count) {\n      percent = Math.round((answer.selected_count / answered_count) * 100);\n    }\n    selectedCount = (\n      <span\n        className=\"selected-count\"\n        data-percent={`${percent}`}\n      >\n        {answer.selected_count}\n      </span>\n    );\n\n    body = (\n      <div className=\"review-wrapper\">\n        <div className={cn('review-count', { 'green': isCorrect, 'red': !isCorrect })}>\n          {selectedCount}\n          <span className={cn('letter', { 'green': isCorrect, 'red': !isCorrect })}>\n            {ALPHABET[iter]}\n          </span>\n        </div>\n\n        <div className=\"answer-answer\">\n          <Content className=\"answer-content\" component={contentRenderer} html={answer.content_html} />\n          {feedback}\n        </div>\n      </div>\n    );\n  } else {\n    body = (\n      <>\n        {type === 'teacher-preview' && correctIncorrectIcon}\n        {selectedCount}\n        {radioBox}\n        <label\n          onKeyPress={onKeyPress}\n          htmlFor={`${qid}-option-${iter}`}\n          className=\"answer-label\">\n          <span className=\"answer-letter-wrapper\">\n            <button\n              onClick={onChange}\n              aria-label={ariaLabel}\n              className=\"answer-letter\"\n              disabled={disabled || isIncorrect}\n              data-test-id={`answer-choice-${ALPHABET[iter]}`}\n            >\n              {ALPHABET[iter]}\n            </button>\n          </span>\n          <div className=\"answer-answer\">\n            <Content className=\"answer-content\" component={contentRenderer} html={answer.content_html} />\n            {feedback}\n          </div>\n        </label>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"openstax-answer\">\n      <section role=\"region\" className={classes}>\n        {body}\n      </section>\n    </div>\n  );\n}\nAnswer.displayName = 'OSAnswer';\n","import { AnswerDisplayType } from './types';\n\nexport const defaultAnswerType: AnswerDisplayType = 'student';\n","import { css } from 'styled-components';\n\nconst palette = {\n  red: \"#ca2026\",\n  danger: \"#c2002f\",\n  darkRed: \"#c22032\",\n  lightRed: \"#e298a0\",\n  green: \"#77af42\",\n  lightGreen: \"#8bc753\",\n  darkGreen: \"#63a524\",\n  paleYellow: \"#ffffbb\",\n  teal: \"#0dc0de\",\n  blue: \"#007da4\",\n  mediumBlue: \"#026AA1\",\n  lightBlue: \"#34bdd8\",\n  neutralLightBlue: \"#0dc0dc\",\n  tangerine: \"#ffbd3e\",\n  gray: \"#5e5e5e\",\n  darkGray: \"#757575\",\n  pale: \"#d5d5d5\",\n  light: \"#e4e4e4\",\n  white: \"#ffffff\",\n  neutralLightest: \"#f9f9f9\", // nearly white\n  neutralCool: \"#f6f7f8\", // cool bright gray\n  neutralBright: \"#f5f5f5\", // bright gray\n  neutralLighter: \"#f1f1f1\", // light gray\n  neutralLight: \"#e5e5e5\", // light gray\n  neutralMedium: \"#a0a0a0\", // light gray\n  neutral: \"#818181\", // gray\n  neutralThin: \"#6f6f6f\", // medium gray\n  neutralDark: \"#5f6163\", // dark gray\n  neutralFeedback: \"#555\", // another dark gray\n  neutralDarker: \"#424242\", // very dark gray\n  black: \"#000000\",\n  orange: \"#D4450C\"\n};\n\nexport const colors = {\n  palette: palette,\n  answer: {\n    color: palette.lightBlue,\n    correct: {\n      color: palette.green,\n      background: \"#77af42\",\n    },\n    incorrect: {\n      color: palette.red,\n      background: palette.red,\n    },\n    checked: palette.lightBlue,\n    hover: palette.neutralDark,\n    label: {\n      color: palette.neutral,\n      colorHover: palette.neutralDark,\n      colorSelected: palette.lightBlue,\n    },\n  },\n  popover: {\n    arrowOuterColor: \"rgba(0, 0, 0, 0.25)\",\n    borderColor: \"rgba(0, 0, 0, 0.2)\",\n  },\n  card: {\n    header: {\n     background: \"#daf3f8\"\n    },\n    body: {\n      background: \"#fdfdfd\"\n    }\n  },\n  button: {\n    background: palette.orange,\n    backgroundHover: \"#E74B0D\",\n    backgroundActive: \"#C5400B\"\n  },\n  freeResponse: {\n    color: palette.neutralDark,\n    background: palette.neutralLighter,\n  },\n};\n\nexport const layouts = {\n  answer: {\n    verticalSpacing: \"1rem\",\n    horizontalSpacing: \"1rem\",\n    horizontalBuffer: \"2.5rem\",\n    bubbleSize: \"3.6rem\",\n    labelSpacing: \"6.5rem\",\n    feedback: {\n      popover: {\n        horizontalSpacing: \"1.1rem\",\n        verticalSpacing: \"0.9rem\",\n        maxWidth: \"370px\",\n      },\n    },\n  },\n  popover: {\n    arrow: {\n      width: \"16px\",\n      height: \"8px\",\n      edgeDistance: \"9px\",\n    },\n    horizontalSpacing: \"0.8rem\",\n    verticalSpacing: \"1rem\",\n    horizontalBuffer: \"4rem\",\n    borderWidth: \"1px\",\n    maxWidth: \"325px\",\n  }\n};\n\nexport const BREAKPOINTS = {\n  mobile: 600,\n  tablet: 999,\n  desktop: 1000,\n  large: 1600,\n};\n\nexport const breakpoints = {\n  mobile(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n  },\n  tablet(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.tablet}px) { ${css(...args)} }`;\n  },\n  desktop(...args: Parameters<typeof css>) {\n    return css`@media(min-width: ${BREAKPOINTS.desktop}px) { ${css(...args)} }`;\n  },\n  only: {\n    mobile(...args: Parameters<typeof css>) {\n      return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n    },\n  },\n  margins: {\n    mobile: '8px',\n    tablet: '24px',\n  },\n};\n\nexport const transitions = {\n  answer: \"0.1s ease-in-out\",\n}\n\nexport const mixins = {\n  answer: () => css`\n    .answer-label {\n      display: flex;\n    }\n    color: ${colors.answer.label.color};\n    .answer-letter {\n      width: ${layouts.answer.bubbleSize};\n      height: ${layouts.answer.bubbleSize};\n      min-width: ${layouts.answer.bubbleSize};\n      min-height: ${layouts.answer.bubbleSize};\n      border-radius: calc(${layouts.answer.bubbleSize} / 2);\n      border-width: 2px;\n      border-style: solid;\n      border-color: #c6c6c6;\n      color: ${colors.answer.label.colorHover};\n      transition: color ${transitions.answer}, border-color ${transitions.answer}, background-color ${transitions.answer};\n      background-color: ${colors.palette.white};\n      font-family: \"Neue Helvetica W01\", Helvetica, Arial, sans-serif;\n    }\n  `,\n  answerColor: (values: { color: string, background: string }) => css`\n    color: ${values.color};\n    .answer-letter {\n       border-color: ${values.color};\n       background-color: ${values.background};\n       color: ${colors.palette.white};\n    }\n  `,\n  answerChecked: () => mixins.answerColor({ color: colors.answer.checked, background: colors.answer.checked }),\n  answerCorrect: () => mixins.answerColor(colors.answer.correct),\n  answerIncorrect: () => mixins.answerColor(colors.answer.incorrect),\n  answerHover: () => css`\n    color: ${colors.answer.label.colorHover};\n    .answer-letter {\n      border-color: ${colors.answer.label.colorSelected};\n    }\n  `,\n  answerCorrectText: () => css`\n    content: 'correct answer';\n    color: ${colors.answer.label.color};\n    margin-left: calc(-1.34 * ${layouts.answer.bubbleSize});\n    display: flex;\n    align-items: center;\n    height: ${layouts.answer.bubbleSize};\n    width: 4.8rem;\n    text-align: center;\n    font-size: 1.2rem;\n    line-height: 1.2rem;\n  `,\n  answerCorrectAnswer: () => css`\n    color: ${colors.answer.correct.color};\n    .answer-letter {\n      border-color: ${colors.answer.correct.color};\n      color: ${colors.answer.correct.color};\n    }\n    &::before {\n     ${mixins.answerCorrectText()}\n      @media screen and (max-width: ${BREAKPOINTS.tablet}px) {\n        display: none;\n      }\n    }\n    @media screen and (max-width:  ${BREAKPOINTS.tablet}px) {\n      .answer-letter-wrapper {\n        display: flex;\n        flex-direction: column;\n        &::after {\n          ${mixins.answerCorrectText()}\n          width: ${layouts.answer.bubbleSize} !important;\n          margin-left: -0.1rem;\n        }\n      }\n    }\n  `,\n  resetText: () => css`\n    font-family:  \"Neue Helvetica W01\", Helvetica, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.6;\n    text-align: left;\n    text-align: start;\n    text-decoration: none;\n    text-shadow: none;\n    text-transform: none;\n    letter-spacing: normal;\n    word-break: normal;\n    word-spacing: normal;\n    white-space: normal;\n    line-break: auto;\n  `,\n  stepCardPadding: () => css`\n    padding: 48px 140px;\n\n    ${breakpoints.tablet`\n      padding: ${breakpoints.margins.tablet} ${breakpoints.margins.tablet};\n    `}\n\n    ${breakpoints.mobile`\n      padding: calc(${breakpoints.margins.mobile} * 2) ${breakpoints.margins.mobile};\n    `}\n  `,\n  popover: () => css`\n    ${mixins.resetText()}\n\n    z-index: 1;\n    position: relative;\n    border: ${layouts.popover.borderWidth} solid ${colors.popover.borderColor};\n    background-color: ${colors.palette.white};\n    background-clip: padding-box;\n    max-width: ${layouts.popover.maxWidth};\n    margin: calc(${layouts.popover.arrow.height} - 14px) 0 ${layouts.answer.horizontalSpacing} 8px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n    color: ${colors.palette.neutralThin};\n    font-size: 1.4rem;\n\n    .arrow {\n      position: absolute;\n      display: block;\n      width: ${layouts.popover.arrow.width};\n      height: ${layouts.popover.arrow.height};\n      margin-left: ${layouts.popover.arrow.edgeDistance};\n      top: calc(${layouts.popover.arrow.height} * -1);\n\n      &::before,\n      &::after {\n        position: absolute;\n        display: block;\n        content: \"\";\n        border-color: transparent;\n        border-style: solid;\n        border-width: 0 calc(${layouts.popover.arrow.width} / 2) ${layouts.popover.arrow.height} calc(${layouts.popover.arrow.width} / 2);\n      }\n      &::before {\n        top: 0;\n        border-bottom-color: ${colors.popover.borderColor};\n      }\n      &::after {\n        top: ${layouts.popover.borderWidth};\n        border-bottom-color: ${colors.palette.white};\n      }\n    }\n\n    &.right {\n      right: calc(-${layouts.popover.arrow.edgeDistance} - ${layouts.popover.borderWidth});\n      .arrow { right: ${layouts.popover.arrow.edgeDistance}; }\n    }\n\n\n    > .content {\n      padding: ${layouts.popover.verticalSpacing} ${layouts.popover.horizontalSpacing};\n    }\n  `,\n};\n\nconst theme = {\n  colors: colors,\n  layouts: layouts,\n  transitions: transitions,\n  breakpoints: breakpoints,\n};\n\nexport default theme;\n","import { defaultAnswerType } from \"../constants\";\nimport { Answer as AnswerType, AnswerDisplayType, ID, ExerciseQuestionData } from \"src/types\";\nimport { Answer } from \"./Answer\";\nimport { Feedback } from \"./Feedback\";\n\nexport interface AnswersTableProps {\n  question: ExerciseQuestionData;\n  type?: AnswerDisplayType;\n  answer_id?: ID;\n  correct_answer_id?: ID | null;\n  incorrectAnswerId?: ID;\n  answerIdOrder?: ID[],\n  feedback_html: string;\n  correct_answer_feedback_html?: string;\n  answered_count?: number;\n  show_all_feedback?: boolean;\n  tableFeedbackEnabled?: boolean;\n  onChangeAnswer: () => void;\n  hideAnswers: boolean;\n  hasCorrectAnswer?: boolean;\n  onChangeAttempt?: () => void;\n  choicesEnabled?: boolean;\n  onKeyPress?: () => void;\n  contentRenderer?: JSX.Element;\n  instructions?: JSX.Element;\n}\n\nexport const AnswersTable = (props: AnswersTableProps) => {\n  let idCounter = 0;\n\n  const {\n    question, hideAnswers, type = defaultAnswerType, answered_count, choicesEnabled, correct_answer_id,\n    incorrectAnswerId, answer_id, feedback_html, correct_answer_feedback_html,\n    show_all_feedback = false, tableFeedbackEnabled, hasCorrectAnswer, onChangeAnswer, onKeyPress, answerIdOrder, instructions\n  } = props;\n  if (hideAnswers) { return null; }\n\n  const { id } = question;\n\n  const feedback: { index: number, html: string }[] = [];\n\n  const chosenAnswer = [answer_id];\n\n  const sortedAnswersByIdOrder = (idOrder: ID[]) => {\n    const { answers } = question;\n    return answers.slice().sort((a, b) => idOrder.indexOf(a.id) - idOrder.indexOf(b.id));\n  }\n\n  const questionAnswerProps = {\n    qid: id || `auto-${idCounter++}`,\n    correctAnswerId: correct_answer_id,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    chosenAnswer,\n    onChangeAnswer: onChangeAnswer,\n    type,\n    answered_count,\n    disabled: !choicesEnabled,\n    show_all_feedback,\n    tableFeedbackEnabled,\n    onKeyPress\n  };\n\n  const answers = answerIdOrder ? sortedAnswersByIdOrder(answerIdOrder) : question.answers;\n\n  const answersHtml = answers.map((answer, i) => {\n    const additionalProps: { answer: AnswerType, iter: number, key: string }\n      = {\n        answer: {\n          ...answer,\n          question_id: typeof question.id === 'string' ? parseInt(question.id, 10) : question.id\n         },\n      iter: i,\n      key: `${questionAnswerProps.qid}-option-${i}`\n    };\n    const answerProps = Object.assign({}, additionalProps, questionAnswerProps);\n\n    if (show_all_feedback && answer.feedback_html && tableFeedbackEnabled) {\n      feedback.push({ index: i, html: answer.feedback_html })\n    } else if (answer.id === incorrectAnswerId && feedback_html) {\n      feedback.push({ index: i, html: feedback_html })\n    } else if (answer.id === correct_answer_id && correct_answer_feedback_html) {\n      feedback.push({ index: i, html: correct_answer_feedback_html })\n    }\n\n    return (\n      <Answer {...answerProps} />\n    );\n  });\n\n  feedback.forEach((item, i) => {\n    const spliceIndex = item.index + i + 1;\n    answersHtml.splice(spliceIndex, 0, (\n      <Feedback key={spliceIndex} contentRenderer={props.contentRenderer}>\n        {item.html}\n      </Feedback>\n    ));\n  });\n\n  return (\n    <div className=\"answers-table\">\n      {instructions}\n      {answersHtml}\n    </div>\n  );\n}\n","import { ReactNode } from \"react\";\nimport { breakpoints, colors, mixins } from \"../theme\";\nimport { AvailablePoints, StepBase, StepWithData } from \"../types\";\nimport styled from \"styled-components\";\nimport cn from \"classnames\";\n\nexport const InnerStepCard = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  min-height: 400px;\n  border-radius: 0.25rem;\n  margin: 0 auto 5rem auto;\n  border: 1px solid ${colors.palette.light};\n  border-radius: 0.25rem;\n  background-color: white;\n\n  ${breakpoints.desktop`\n    max-width: 1000px;\n  `}\n`;\n\nexport const OuterStepCard = styled.div`\n  padding: 2rem;\n\n  ${breakpoints.mobile`\n    padding: 0;\n  `}\n`;\n\nconst StepCardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 24px;\n  background: ${colors.card.header.background};\n  font-size: 1.8rem;\n  line-height: 3rem;\n  letter-spacing: -0.72px;\n\n  div {\n    display: flex;\n    align-items: baseline;\n  }\n\n  div.question-info {\n    font-weight: bold;\n\n    .question-id {\n      font-weight: normal;\n    }\n    .ox-icon-lock {\n        margin-right: 1rem;\n    }\n  }\n\n  .num-questions, .points {\n      display: none;\n  }\n\n  .exercise-id, .separator {\n      font-weight: normal;\n  }\n\n  .separator {\n      margin: 0 0.4rem;\n  }\n\n  .exercise-id {\n      height: 28px; // Fix baseline issue\n  }\n\n  button {\n    color: ${colors.palette.gray};\n  }\n\n  .openstax-exercise-badges {\n      margin: 0;\n      line-height: 2rem;\n      svg {\n          display: block;\n          &:not(.interactive) {\n              margin: 0 0 0 6px !important;\n          }\n      }\n  }\n\n  ${breakpoints.desktop`\n      button.ox-icon-angle-left, button.ox-icon-angle-right {\n          display: none;\n      }\n      .separator {\n          display: inherit;\n      }\n  `}\n\n    /*\n    1. Show the arrows to move to previous and next question.\n    2. Show the number of questions.\n    3. Override box-shadow of icons when turned into a button.\n    */\n    ${breakpoints.tablet`\n        font-size: 1.6rem;\n        line-height: 2.5rem;\n\n        svg.ox-icon {\n            display: inherit;\n            margin: 0;\n        }\n        button.ox-icon-angle-left {\n            margin-right: ${breakpoints.margins.tablet};\n        }\n        button.ox-icon-angle-right {\n            margin-left: ${breakpoints.margins.tablet};\n        }\n        .openstax-exercise-badges svg {\n            display: none;\n        }\n        .num-questions, points {\n            display: inherit;\n        }\n\n        .exercise-id {\n            display: none;\n        }\n\n        button[class^='ox-icon-angle']:hover {\n            box-shadow: none;\n        }\n  `}\n\n  ${breakpoints.mobile`\n      font-size: 1.4rem;\n      line-height: 2rem;\n      padding: 10px 8px;\n\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n  `}\n`;\nStepCardHeader.displayName = 'StepCardHeader';\n\nconst StepCardQuestion = styled.div<{ unpadded?: boolean }>`\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n\n    background: ${colors.card.body.background};\n\n    &.exercise-stimulus {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n  }\n\n    & + div .step-card-body {\n        padding-top: 0;\n    }\n\n    &.exercise-context, &.exercise-stimulus, &.exercise-stem {\n        padding-bottom: 0;\n    }\n\n    ${breakpoints.only.mobile`\n        && .question-feedback {\n            margin-left: 0;\n\n           .arrow { margin-left: 12px; }\n        }\n    `}\n\n    .reading-step & {\n        padding: 0;\n    }\n\n    ${breakpoints.desktop`\n        .video-step &, .interactive-step & {\n            .openstax-exercise-badges {\n              margin-right: 3.8rem;\n            }\n        }\n    `}\n\n    ${breakpoints.mobile`\n        .openstax-exercise-badges svg {\n            margin-right: ${breakpoints.margins.mobile};\n        }\n    `}\n\n    &&& {\n        .openstax-has-html .splash .frame-wrapper { margin-top: 0; }\n    }\n`;\n\ninterface SharedProps {\n  questionNumber: number;\n  numberOfQuestions: number;\n  showTotalQuestions: boolean;\n  leftHeaderChildren?: ReactNode;\n  rightHeaderChildren?: ReactNode;\n  headerTitleChildren?: ReactNode;\n}\n\nexport interface StepCardProps extends SharedProps {\n  unpadded: boolean;\n  className?: string;\n  children?: ReactNode;\n  stepType: StepWithData['type'];\n  availablePoints?: AvailablePoints;\n  questionId?: string;\n  multipartBadge?: ReactNode;\n  isHomework: boolean;\n}\n\nconst StepCard = ({\n  questionNumber,\n  numberOfQuestions,\n  showTotalQuestions,\n  stepType,\n  isHomework,\n  availablePoints,\n  unpadded, // currently does nothing; may need to restore if this causes tutor stepcard regression\n  className,\n  children,\n  questionId,\n  multipartBadge,\n  leftHeaderChildren,\n  rightHeaderChildren,\n  headerTitleChildren,\n  ...otherProps }: StepCardProps) => {\n\n  const formattedQuestionNumber = numberOfQuestions > 1\n    ? `Questions ${questionNumber} - ${questionNumber + numberOfQuestions - 1}`\n    : `Question ${questionNumber}`;\n\n  return (\n    <OuterStepCard {...otherProps}>\n      {multipartBadge}\n      <InnerStepCard className={className}>\n        {questionNumber && isHomework && stepType === 'exercise' &&\n          <StepCardHeader>\n            <div>\n              {leftHeaderChildren}\n              <div className=\"question-info\">\n                {headerTitleChildren}\n                <span>{formattedQuestionNumber}</span>\n                {showTotalQuestions ? <span className=\"num-questions\">&nbsp;/ {numberOfQuestions}</span> : null}\n                <span className=\"separator\">|</span>\n                <span className=\"question-id\">ID: {questionId}</span>\n              </div>\n            </div>\n            <div>\n              {availablePoints && <div className=\"points\">{availablePoints} Points</div>}\n              {rightHeaderChildren}\n            </div>\n          </StepCardHeader>\n        }\n        <StepCardQuestion unpadded={unpadded}>{children}</StepCardQuestion>\n      </InnerStepCard>\n    </OuterStepCard>\n  )\n};\nStepCard.displayName = 'OSStepCard';\n\nexport interface TaskStepCardProps extends SharedProps {\n  className?: string;\n  children?: ReactNode;\n  step: StepBase | StepWithData;\n  questionNumber: number;\n  numberOfQuestions: number;\n}\n\nconst TaskStepCard = ({\n  step,\n  questionNumber,\n  numberOfQuestions,\n  children,\n  className,\n  ...otherProps\n}: TaskStepCardProps) =>\n(<StepCard {...otherProps}\n  unpadded={true}\n  questionNumber={questionNumber}\n  numberOfQuestions={numberOfQuestions}\n  stepType={'type' in step ? step.type : 'exercise'}\n  isHomework={'task' in step ? (step.task === undefined || step.task.type === 'homework') : true}\n  data-task-step-id={step.id}\n  availablePoints={step.available_points}\n  className={cn(`${('type' in step ? step.type : 'exercise')}-step`, className)}\n  questionId={step.uid}\n>\n  {children}\n</StepCard>);\n\nTaskStepCard.displayName = 'OSTaskStepCard';\n\nexport { StepCard, TaskStepCard };\n","import { colors } from \"../theme\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  background-color: ${colors.button.background};\n  color: ${colors.palette.white};\n  font-size: 1.6rem;\n  font-weight: 700;\n  line-height: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 4rem;\n  padding: 0 3rem;\n  border: 0;\n  border-radius: 5px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:not([disabled]) {\n    cursor: pointer;\n    &:hover {\n      background: ${colors.button.backgroundHover}\n    }\n    &:active {\n      background: ${colors.button.backgroundActive}\n    }\n  }\n  &:disabled {\n    opacity: 0.4;\n  }\n`;\n\ninterface ButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting?: never;\n  waitingText?: never;\n}\ninterface WaitingButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting: boolean;\n  waitingText: string;\n}\n\nconst Button = (props: ButtonProps | WaitingButtonProps) => {\n  const { disabled, isWaiting, waitingText, children, ...otherProps } = props;\n\n  return (\n    <StyledButton {...otherProps} disabled={isWaiting || disabled}>{(isWaiting && waitingText) || children}</StyledButton>\n  );\n}\n\nexport default Button;\n","import styled from \"styled-components\";\nimport { InnerStepCard } from \"./Card\";\nimport Button from \"./Button\";\n\nexport interface CompletionStatusProps {\n  numberOfQuestions: number;\n  numberCompleted: number;\n  handleClick: () => void;\n}\n\nconst CompletionStatusCard = styled(InnerStepCard)`\n  padding: 88px 72px;\n  font-size: 1.8rem;\n  line-height: 3rem;\n  display: block;\n\n  button {\n    min-width: 160px;\n    height: 48px;\n  }\n\n  p {\n    margin: 16px 0 20px 0;\n  }\n`;\n\nconst CompletionHeader = styled.h2`\n  font-size: 2.4rem;\n  margin: 0;\n`;\n\nexport const CompletionStatus = ({\n  numberOfQuestions, numberCompleted, handleClick\n}: CompletionStatusProps) => {\n  \n  const allCompleted = numberOfQuestions === numberCompleted;\n  const someCompleted = numberCompleted > 0;\n  const buttonText = allCompleted ? 'Next' : (\n      someCompleted ? 'Continue' : 'Start'\n  );\n\n  return (\n    <CompletionStatusCard>\n      <CompletionHeader>{allCompleted ? 'You are done.' : (someCompleted ? 'Quiz is partially complete.' : 'No questions have been answered.')}</CompletionHeader>\n      <p>{allCompleted ? 'Great job answering all the questions.' : (someCompleted ? `You've completed ${numberCompleted} of ${numberOfQuestions} questions.` : 'Begin working on the quiz.')}</p>\n      <Button data-test-id={`${buttonText.split(' ')[0].toLowerCase()}-btn`} onClick={()=> handleClick()}>\n        {buttonText}\n      </Button>\n    </CompletionStatusCard>\n  )\n};\n","import styled from 'styled-components';\nimport { mixins, colors, layouts, transitions } from '../theme';\nimport { AnswersTable } from './AnswersTable';\nimport classnames from 'classnames';\nimport { ID, ExerciseQuestionData, Task } from 'src/types';\nimport React, { ReactNode } from 'react';\nimport { Content } from './Content';\n\nconst StyledQuestion = styled.div`\n&.step-card-body {\n  ${mixins.stepCardPadding()};\n}\n\n&.openstax-question {\n  border-top: 1px solid ${colors.palette.pale};\n  font-size: 1.8rem;\n\n  .detailed-solution {\n    margin-bottom: 1rem;\n    .header {\n      display: inline;\n      margin-right: 0.5rem;\n      color: #5e6062;\n      font-weight: bold;\n      flex-basis: 0;\n    }\n    .solution {\n      display: inline;\n      color: #6f6f6f;\n    }\n  }\n\n  img {\n    display: block;\n    margin: auto;\n    max-width: 100%;\n  }\n\n  .question-stem {\n    margin-bottom: 0;\n  }\n\n  .answers-table {\n    margin-bottom: 20px;\n    font-size: 1.6rem;\n    line-height: 2rem;\n  }\n\n  .instructions {\n    font-size: 1.4rem;\n    font-style: italic;\n    margin-top: 10px;\n    color: ${colors.palette.neutral};\n    margin: 0;\n\n    i {\n      margin-left: 5px;\n    }\n\n    .text-info {\n      color: ${colors.palette.neutralLightBlue};\n      padding-left: 5px;\n      cursor: pointer;\n      font-style: normal;\n    }\n  }\n\n  .multiple-choice-prompt {\n    font-weight: 600;\n  }\n\n  .free-response {\n    padding: ${layouts.answer.horizontalSpacing} ${layouts.answer.horizontalBuffer};\n    margin: ${layouts.answer.verticalSpacing} 0 ${layouts.answer.horizontalSpacing} ${layouts.answer.verticalSpacing};\n    border-left: ${layouts.answer.horizontalSpacing} solid ${colors.palette.neutralLighter};\n    font-style: italic;\n  }\n\n  &:not(.openstax-question-preview) {\n    .answers-answer {\n      width: initial;\n      &:not(.disabled){\n        .answer-label:focus{\n          background-color: ${colors.palette.neutralLightest};\n        }\n      }\n      ${mixins.answer()};\n    }\n\n    .answer-answer {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      margin-left: ${layouts.answer.horizontalSpacing};\n      * {\n        margin: 0;\n      }\n    }\n\n    .answers-answer.answer-correct .answer-answer {\n      align-items: flex-start;\n      margin-top: calc((${layouts.answer.bubbleSize} / 2) - 1rem);\n    }\n\n    .answer-letter {\n      text-align: center;\n      padding: 0;\n      font-size: 1.6rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .answer-label {\n      font-weight: normal;\n      width: 100%;\n      padding: ${layouts.answer.verticalSpacing} 0 0 0;\n      margin: 0;\n\n      transition: color ${transitions.answer};\n    }\n\n    // a selectable answer\n    .answer-input-box:not([disabled]) ~ .answer-label {\n      cursor: pointer;\n\n      &:hover {\n        ${mixins.answerHover()}\n      }\n    }\n\n    // a selected answer\n    &:not(.has-correct-answer) {\n      .answer-input-box {\n        display: none;\n\n        &:checked {\n          + .answer-label,\n          + .answer-label:hover {\n            ${mixins.answerChecked()};\n          }\n        }\n      }\n\n      .answer-checked{\n        .answer-label {\n          ${mixins.answerChecked()};\n        }\n      }\n    }\n\n    // answer that has been checked\n    &.has-correct-answer {\n      .answer-checked {\n        &:not(.answer-correct) {\n          .answer-label {\n            ${mixins.answerIncorrect()};\n          }\n        }\n\n        &.answer-correct {\n          .answer-label {\n            ${mixins.answerCorrect()};\n          }\n        }\n      }\n\n      .answer-correct:not(.answer-checked) {\n        .answer-label {\n          ${mixins.answerCorrectAnswer()}\n        }\n      }\n    }\n\n    &.has-incorrect-answer {\n      .answer-incorrect, .answer-checked.answer-incorrect {\n        .answer-label {\n          ${mixins.answerIncorrect()}\n        }\n      }\n    }\n\n    .question-feedback {\n      ${mixins.popover()}\n      max-width: ${layouts.answer.feedback.popover.maxWidth};\n      .question-feedback-content {\n        padding: ${layouts.answer.feedback.popover.verticalSpacing} ${layouts.answer.feedback.popover.horizontalSpacing};\n      }\n    }\n  }\n\n  .openstax-answer {\n    border-top: 1px solid #d5d5d5;\n    margin: 10px 0;\n    padding: 6px 8px;\n  }\n}\n`;\n\nexport interface QuestionProps {\n  question: ExerciseQuestionData,\n  answer_id?: ID;\n  task?: Task | null,\n  correct_answer_id: ID | null;\n  incorrectAnswerId: ID;\n  hideAnswers: boolean;\n  hidePreambles?: boolean,\n  exercise_uid?: string;\n  displayFormats: boolean,\n  className: string;\n  questionNumber: number;\n  displaySolution: boolean;\n  context?: string;\n  correct_answer_feedback_html?: string;\n  contentRenderer?: JSX.Element;\n  feedback_html: string;\n  onChange: () => void;\n  show_all_feedback?: boolean;\n  tableFeedbackEnabled?: boolean;\n  children?: ReactNode;\n  answerIdOrder?: ID[];\n  choicesEnabled?: boolean;\n}\n\nexport const Question = React.forwardRef((props: QuestionProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n  let exerciseUid, solution;\n\n  const {\n    question, correct_answer_id, incorrectAnswerId, exercise_uid, className, questionNumber, context, task, hidePreambles\n  } = props;\n\n  const { stem_html, collaborator_solutions = [], formats, stimulus_html } = question;\n\n  const hasCorrectAnswer = !!correct_answer_id;\n  const hasIncorrectAnswer = !!incorrectAnswerId;\n\n  const taskIsDeleted = (task != null ? task.is_deleted : undefined)\n  const taskIsHomework = ((task != null ? task.type : undefined) === 'homework');\n\n  const classes = classnames('openstax-question', className, {\n    'has-correct-answer': hasCorrectAnswer && !(taskIsDeleted && taskIsHomework),\n    'has-incorrect-answer': hasIncorrectAnswer,\n  });\n\n  const hasSolution = () => {\n    const { displaySolution } = props;\n    const { collaborator_solutions = [] } = question;\n\n    return (\n      displaySolution &&\n      collaborator_solutions &&\n      collaborator_solutions.find(s => s['content_html'] !== undefined)\n    );\n  };\n\n  if (exercise_uid != null) {\n    exerciseUid = (\n      <div className=\"exercise-uid\">\n        {exercise_uid}\n      </div>\n    );\n  }\n\n  if (hasSolution()) {\n    solution =\n      <div className=\"detailed-solution\">\n        <div className=\"header\">\n          Detailed solution:\n        </div>\n        <Content\n          className=\"solution\"\n          block={true}\n          html={collaborator_solutions.map(s => s['content_html']).join('')} />\n      </div>;\n  }\n\n  return (\n    <StyledQuestion ref={ref} className={classes} data-question-number={questionNumber} data-test-id=\"question\">\n      <QuestionHtml type=\"context\" html={context} hidden={hidePreambles} />\n      <QuestionHtml type=\"stimulus\" html={stimulus_html} hidden={hidePreambles} />\n      <QuestionHtml type=\"stem\" html={stem_html} hidden={hidePreambles} questionNumber={questionNumber} />\n      {props.children}\n\n      <AnswersTable\n        {...props}\n        onChangeAnswer={props.onChange}\n        hasCorrectAnswer={hasCorrectAnswer} />\n\n      {solution}\n      {props.displayFormats ? <FormatsListing formats={formats} /> : undefined}\n      {exerciseUid}\n    </StyledQuestion>\n  );\n});\n\ninterface QuestionHtmlProps {\n  html?: string;\n  type: string;\n  hidden: QuestionProps['hidePreambles'];\n  questionNumber?: QuestionProps['questionNumber'];\n}\n\nexport const QuestionHtml = (props: QuestionHtmlProps) => {\n  const { html = '', type, hidden, questionNumber } = props;\n  if (hidden === true || !(html.length > 0)) { return null; }\n\n  return (\n    <Content\n      html={html}\n      data-question-number={questionNumber}\n      className={`question-${type}`}\n      block={true}\n    />\n  );\n};\n\nconst FormatsListing = ({ formats = [] }: { formats: ExerciseQuestionData['formats'] }) => {\n  return (\n    <div className=\"formats-listing\">\n      <div className=\"header\">Formats:</div>\n      {formats.map((format, i) => <span key={i}>{format}</span>)}\n    </div>\n  );\n};\n","import { colors, breakpoints, mixins } from \"../theme\";\nimport styled from \"styled-components\";\n\nexport const StepCardFooter = styled.div`\n    ${mixins.stepCardPadding()}\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    font-size: 1.4rem;\n    line-height: 2rem;\n    background: ${colors.card.body.background};\n\n    > * {\n        flex-grow: 1;\n    }\n\n    button {\n        width: 160px;\n        height: 48px;\n    }\n\n    .step-card-footer-inner {\n        border-top: 1px solid ${colors.palette.pale};\n        padding-top: 32px;\n        display: flex;\n        justify-content: space-between;\n    }\n\n    .points {\n        margin-bottom: 1.6rem; // Replace with https://caniuse.com/?search=gap soon\n\n        .attempts-left {\n            color: #F36B32;\n        }\n    }\n\n    .controls {\n        display: flex;\n        flex-flow: column wrap-reverse;\n        margin-left: 1.6rem; // Replace with https://caniuse.com/?search=gap soon\n\n        button + button {\n            margin: 0.8rem 0 0 0;\n        }\n    }\n\n    ${breakpoints.desktop`\n        padding: 0 140px 32px 140px;\n        flex-wrap: nowrap;\n\n        .points {\n            max-width: 400px;\n        }\n\n        .controls {\n            flex-flow: row;\n            justify-content: flex-end;\n\n            button + button {\n                margin: 0 0 0 0.8rem;\n            }\n        }\n    `}\n`;\n","import { MouseEventHandler, ReactNode } from 'react';\nimport { countWords } from '../utils';\nimport styled, { css } from 'styled-components';\nimport { colors, mixins } from '../theme';\nimport { AvailablePoints, ExerciseQuestionData } from 'src/types';\nimport { QuestionHtml } from './Question';\nimport Button from './Button';\nimport { StepCardFooter } from './StepCardFooter';\n\nexport interface FreeResponseProps {\n  readOnly: boolean;\n  wordLimit: number;\n  infoRowChildren?: ReactNode;\n  pointsChildren?: ReactNode;\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  cancelHandler: MouseEventHandler<HTMLButtonElement>;\n  saveHandler: MouseEventHandler<HTMLButtonElement>;\n  defaultValue: string;\n  isSubmitDisabled: boolean;\n  questionNumber: number,\n  question: ExerciseQuestionData,\n  availablePoints: AvailablePoints,\n  textHasChanged: boolean;\n  submitBtnLabel: string;\n}\n\nconst TextAreaErrorStyle = css`\n  background-color: #f5e9ea;\n`;\n\nconst StyledFreeResponse = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n  }\n`;\n\nconst SyledQuestionStem = styled.div`\n  font-size: 2rem;\n  line-height: 1.68em;\n  position: relative;\n`;\n\nconst InfoRow = styled.div<{ hasChildren: boolean }>`\n  margin: 8px 0;\n  display: flex;\n  justify-content: ${props => props.hasChildren ? 'space-between' : 'flex-end'};\n  line-height: 1.6rem;\n\n  .word-limit-error-info {\n    color: ${colors.palette.danger};\n  }\n\n  div > span {\n    font-size: 12px;\n    line-height: 16px;\n\n    + span {\n      margin-left: 1rem;\n    }\n  }\n\n  .last-submitted + * {\n    margin-top: 0.8rem;\n  }\n\n  color: ${colors.palette.neutralThin};\n`;\n\nexport const FreeResponseTextArea = styled.textarea<{ isOverWordLimit: boolean } & FreeResponseProps>`\n  display: block;\n  font-family: inherit;\n  font-size: 1.8rem;\n  line-height: 3rem;\n  width: 100%;\n  min-height: 10.5em;\n  line-height: 1.5em;\n  margin: 2.5rem 0 0 0;\n  padding: 0.5em;\n  border: 1px solid ${colors.palette.neutral};\n  color: ${colors.palette.neutralDark};\n  ${props => props.isOverWordLimit && TextAreaErrorStyle};\n  ${props => props.isOverWordLimit && css`\n    border: 2px solid ${colors.palette.danger};\n  `}\n  background-color: ${props => props.readOnly && colors.palette.neutralCool};\n`;\nFreeResponseTextArea.displayName = 'OSFreeResponseTextArea';\n\nconst RevertButton = (props: {\n  disabled: boolean\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button {...props}>\n    Cancel\n  </Button>\n);\n\n\nexport const FreeResponseInput = (props: FreeResponseProps) => {\n  const {\n    availablePoints,\n    cancelHandler,\n    defaultValue,\n    infoRowChildren,\n    isSubmitDisabled,\n    pointsChildren,\n    question,\n    questionNumber,\n    saveHandler,\n    submitBtnLabel,\n    textHasChanged,\n    wordLimit,\n  } = props;\n\n  const isOverWordLimit = countWords(defaultValue) > wordLimit;\n\n  const questionProps = {};\n  if (questionNumber) { questionProps['data-question-number'] = questionNumber; }\n\n  return (\n    <StyledFreeResponse data-test-id=\"student-free-response\">\n      <div className=\"step-card-body\">\n        <SyledQuestionStem {...questionProps}>\n          {question.stem_html &&\n            <QuestionHtml type=\"stem\" html={question.stem_html} hidden={false} />}\n        </SyledQuestionStem>\n        <FreeResponseTextArea\n          {...props}\n          isOverWordLimit={isOverWordLimit}\n          data-test-id=\"free-response-box\"\n          placeholder=\"Enter your response...\"\n          aria-label=\"question response text box\"\n        />\n        <InfoRow hasChildren={!!infoRowChildren}>\n          {infoRowChildren}\n          <div>\n            <span>{countWords(defaultValue)} words</span>\n            {isOverWordLimit && <span className=\"word-limit-error-info\">Maximum {wordLimit} words</span>}\n          </div>\n        </InfoRow>\n      </div>\n      <StepCardFooter>\n        <div className=\"points\">\n          <strong>Points: {availablePoints}</strong>\n          {pointsChildren}\n        </div>\n        <div className=\"controls\">\n          <RevertButton disabled={!textHasChanged} onClick={cancelHandler} />\n          <Button\n            data-test-id=\"submit-answer-btn\"\n            disabled={isSubmitDisabled || isOverWordLimit}\n            onClick={saveHandler}\n          >\n            {submitBtnLabel}\n          </Button>\n        </div>\n      </StepCardFooter>\n    </StyledFreeResponse>\n  );\n}\n\nFreeResponseInput.displayName = 'OSFreeResponse';\n","import styled from 'styled-components';\nimport { colors, mixins } from '../../src/theme';\nimport { ExerciseData } from '../../src/types';\nimport { faBookOpen } from '@fortawesome/free-solid-svg-icons/faBookOpen';\nimport { faTriangleExclamation } from '@fortawesome/free-solid-svg-icons/faTriangleExclamation';\nimport { faCircleInfo } from '@fortawesome/free-solid-svg-icons/faCircleInfo';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype ExplanationType = 'multiple-choice' | 'two-step';\n\nconst TypeExplanations: { [key in ExplanationType]: string } = {\n  'multiple-choice': 'Select the best answer from the given list of distractors. Your instructor may or may not allow multiple attempts.',\n  'two-step': 'In a two-step question, OpenStax asks for your own answer first, then gives multiple-choice options to help you assess your learnings. \\\nRecalling the answer to a question from memory helps you to retain things longer.',\n}\n\nconst ItemWrapper = styled.div`\n  padding: 0.6rem 0.9rem;\n  .popover { display: none; }\n  &:hover {\n    svg path { fill: ${colors.palette.mediumBlue};}\n    .popover { display: flex; }\n  }\n`;\n\nconst InnerWrapper = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nconst Popover = styled.div`\n  ${mixins.popover}\n  top: 3rem;\n  width: 20rem;\n  position: absolute;\n  font-size: 1.2rem;\n  line-height: 1.8rem;\n`;\n\ninterface PopoverItemProps {\n  text: string;\n  children: JSX.Element;\n  wrapperProps?: {\n    as: keyof JSX.IntrinsicElements;\n    href?: string;\n    target?: string;\n  }\n}\n\nconst PopoverItem = (props: PopoverItemProps) => (\n  <ItemWrapper {...props.wrapperProps}>\n    <InnerWrapper>\n      {props.children}\n      <Popover className=\"popover right\">\n        <div className=\"arrow\"></div>\n        <div className=\"content\">{props.text}</div>\n      </Popover>\n    </InnerWrapper>\n  </ItemWrapper>\n);\n\nconst PopoverItemsWrapper = styled.div`\n  max-width: 200px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  color: ${colors.palette.darkGray};\n  height: 1em;\n`;\n\nexport const ExerciseIcons = ({ exercise, topicUrl, errataUrl }:\n  { exercise: ExerciseData, topicUrl?: string, errataUrl?: string }) => {\n  const items = [];\n  const isMultipleChoice = exercise.questions.every((q) => q.answers.length > 0);\n  let typeExplanation;\n\n  if (isMultipleChoice && exercise.questions.find((q) => q.formats.includes('free-response'))) {\n    typeExplanation = TypeExplanations['two-step'];\n  } else if (isMultipleChoice) {\n    typeExplanation = TypeExplanations['multiple-choice'];\n  }\n\n  if (topicUrl) {\n    items.push(\n      <PopoverItem key='topic' text='View topic in textbook' wrapperProps={{ as: 'a', href: topicUrl, target: '_blank' }}>\n        <StyledFontAwesomeIcon icon={faBookOpen}></StyledFontAwesomeIcon>\n      </PopoverItem>\n    );\n  }\n\n  items.push(\n    <PopoverItem key='errata' text='Suggest a correction' wrapperProps={{ as: 'a', href: errataUrl, target: '_blank' }}>\n      <StyledFontAwesomeIcon icon={faTriangleExclamation}></StyledFontAwesomeIcon>\n    </PopoverItem>\n  )\n\n  if (typeExplanation) {\n    items.push(\n      <PopoverItem key='type' text={typeExplanation}>\n        <StyledFontAwesomeIcon icon={faCircleInfo} height='16px' width='16px'></StyledFontAwesomeIcon>\n      </PopoverItem>\n    )\n  }\n\n  return (\n    <PopoverItemsWrapper>\n      {items}\n    </PopoverItemsWrapper>\n  );\n};\n","import React from \"react\";\nimport { numberfyId } from \"../../src/utils\";\nimport { AvailablePoints, ID, ExerciseQuestionData, Task } from \"../types\";\nimport Button from \"./Button\";\nimport { Content } from \"./Content\";\nimport { ExerciseBaseProps } from \"./Exercise\";\nimport { Question } from './Question';\nimport { StepCardFooter } from \"./StepCardFooter\";\n\nexport interface ExerciseQuestionProps {\n  task?: Task;\n  question: ExerciseQuestionData;\n  answer_id_order?: ID[];\n  questionNumber: number;\n  choicesEnabled: boolean;\n  hasMultipleAttempts: boolean;\n  onAnswerChange: () => void;\n  onAnswerSave: ExerciseBaseProps['onAnswerSave'];\n  onNextStep: ExerciseBaseProps['onNextStep'];\n  feedback_html: string;\n  correct_answer_feedback_html: string;\n  is_completed: boolean;\n  correct_answer_id: ID;\n  incorrectAnswerId: ID;\n  answer_id?: ID;\n  attempts_remaining: number;\n  published_comments?: string;\n  detailedSolution?: string;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  canUpdateCurrentStep: boolean;\n  attempt_number: number;\n  apiIsPending: boolean;\n  displaySolution: boolean;\n  available_points: AvailablePoints;\n  exercise_uid: string;\n  free_response?: string;\n  show_all_feedback?: boolean;\n  tableFeedbackEnabled?: boolean;\n}\n\nconst AttemptsRemaining = ({ count }: { count: number }) => {\n  return (\n    <div>{count} attempt{count === 1 ? '' : 's'} left</div>\n  );\n}\n\nconst PublishedComments = ({ published_comments }: { published_comments?: string }) => {\n  if (!published_comments) { return null; }\n\n  return (\n    <div>\n      <strong>Feedback:</strong> {published_comments}\n    </div>\n  );\n}\n\nexport const SaveButton = (props: {\n  disabled: boolean, isWaiting: boolean, attempt_number: number\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button\n    {...props}\n    waitingText=\"Saving…\"\n    isWaiting={props.isWaiting}\n    data-test-id=\"submit-answer-btn\"\n  >\n    {props.attempt_number == 0 ? 'Submit' : 'Re-submit'}\n  </Button>\n);\n\nexport const NextButton = (props: {\n  canUpdateCurrentStep: boolean,\n} & React.ComponentPropsWithoutRef<'button'>) => {\n  return (\n    <Button {...props} data-test-id=\"continue-btn\">\n      {props.canUpdateCurrentStep ? 'Continue' : 'Next'}\n    </Button>\n  );\n}\n\nconst FreeResponseReview = ({ free_response }: Pick<ExerciseQuestionProps, \"free_response\">) => {\n  if (!free_response) { return null; }\n  return (\n    <>\n      <div className=\"free-response\">{free_response}</div>\n    </>\n  );\n}\n\nexport const ExerciseQuestion = React.forwardRef((props: ExerciseQuestionProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n  const {\n    question, task, answer_id_order, onAnswerChange, feedback_html, correct_answer_feedback_html,\n    is_completed, correct_answer_id, incorrectAnswerId, choicesEnabled, questionNumber,\n    answer_id, hasMultipleAttempts, attempts_remaining, published_comments, detailedSolution,\n    canAnswer, needsSaved, attempt_number, apiIsPending, onAnswerSave, onNextStep, canUpdateCurrentStep,\n    displaySolution, available_points, free_response, show_all_feedback, tableFeedbackEnabled\n  } = props;\n\n  return (\n    <div data-test-id=\"student-exercise-question\">\n      <Question\n        ref={ref}\n        task={task}\n        question={question}\n        answerIdOrder={answer_id_order}\n        choicesEnabled={choicesEnabled}\n        answer_id={answer_id}\n        questionNumber={questionNumber}\n        onChange={onAnswerChange}\n        feedback_html={feedback_html}\n        correct_answer_feedback_html={correct_answer_feedback_html}\n        correct_answer_id={is_completed ? correct_answer_id : null}\n        incorrectAnswerId={incorrectAnswerId}\n        className=\"step-card-body\"\n        hideAnswers={false}\n        displayFormats={false}\n        displaySolution={displaySolution}\n        show_all_feedback={show_all_feedback}\n        tableFeedbackEnabled={tableFeedbackEnabled}\n      >\n        <FreeResponseReview free_response={free_response} />\n      </Question>\n      <StepCardFooter className=\"step-card-footer\">\n        <div className=\"step-card-footer-inner\">\n          <div className=\"points\">\n            <strong>Points: {available_points}</strong>\n            <span className=\"attempts-left\">\n              {hasMultipleAttempts &&\n                attempts_remaining > 0 &&\n                <AttemptsRemaining count={attempts_remaining} />}\n            </span>\n            <PublishedComments published_comments={published_comments} />\n            {detailedSolution && (<div><strong>Detailed solution:</strong> <Content html={detailedSolution} /></div>)}\n          </div>\n          <div className=\"controls\">\n            {canAnswer && needsSaved ?\n              <SaveButton\n                disabled={apiIsPending || !answer_id}\n                isWaiting={apiIsPending}\n                attempt_number={attempt_number}\n                onClick={() => onAnswerSave(numberfyId(question.id))}\n              /> :\n              <NextButton onClick={() => onNextStep(questionNumber - 1)} canUpdateCurrentStep={canUpdateCurrentStep} />}\n          </div>\n        </div>\n      </StepCardFooter>\n    </div>\n  );\n})\n","import { debounce, once } from 'lodash';\nimport { isEmpty, memoize } from 'lodash/fp.js';\nimport WeakMap from 'weak-map';\n\ndeclare global {\n  interface Window {\n    MathJax?: any;\n    __debugMathJax?: boolean;\n  }\n}\n\nconst MATH_MARKER_BLOCK  = '\\u200c\\u200c\\u200c'; // zero-width non-joiner\nconst MATH_MARKER_INLINE = '\\u200b\\u200b\\u200b'; // zero-width space\n\nconst MATH_RENDERED_CLASS = 'math-rendered';\nconst MATH_MARKED_CLASS = 'math-marked';\nconst MATH_DATA_SELECTOR = `[data-math]:not(.${MATH_RENDERED_CLASS})`;\nconst MATH_ML_SELECTOR   = `math:not(.${MATH_RENDERED_CLASS})`;\nconst COMBINED_MATH_SELECTOR = `${MATH_DATA_SELECTOR}, ${MATH_ML_SELECTOR}`;\nconst MATHJAX_CONFIG = {\n  extensions: [],\n  showProcessingMessages: false,\n  skipStartupTypeset: true,\n  styles: {\n    '#MathJax_MSIE_Frame': {\n      left: '', right: 0, visibility: 'hidden',\n    },\n    '#MathJax_Message': {\n      left: '', right: 0, visibility: 'hidden',\n    },\n  },\n  tex2jax: {\n    displayMath: [[MATH_MARKER_BLOCK, MATH_MARKER_BLOCK]],\n    inlineMath:  [[MATH_MARKER_INLINE, MATH_MARKER_INLINE]],\n  },\n};\n\nconst findProcessedMath = (root: Element): Element[] => Array.from(root.querySelectorAll('.MathJax math'));\nconst findUnprocessedMath = (root: Element): Element[] => {\n  const processedMath = findProcessedMath(root);\n  return Array.from(root.querySelectorAll('math')).filter((node) => processedMath.indexOf(node) === -1);;\n};\n\nconst findLatexNodes = (root: Element): Element[] => {\n  const latexNodes: Element[] = [];\n  for (const node of Array.from(root.querySelectorAll(MATH_DATA_SELECTOR))) {\n    const formula = node.getAttribute('data-math');\n\n    // Set textContent once so that resolveOrWait calls don't\n    // undo a MathJax pass before rendered class is applied\n    if (!node.classList.contains(MATH_MARKED_CLASS)) {\n      node.textContent = (node.tagName.toLowerCase() === 'div')\n        ? `${MATH_MARKER_BLOCK}${formula}${MATH_MARKER_BLOCK}`\n        : `${MATH_MARKER_INLINE}${formula}${MATH_MARKER_INLINE}`;\n      node.classList.add(MATH_MARKED_CLASS);\n    }\n    latexNodes.push(node);\n  }\n\n  return latexNodes;\n};\n\nconst typesetLatexNodes = (latexNodes: Element[], windowImpl: Window) => () => {\n  if (isEmpty(latexNodes)) {\n    return;\n  }\n\n  windowImpl.MathJax.Hub.Queue(\n    () => windowImpl.MathJax.Hub.Typeset(latexNodes),\n    markLatexNodesRendered(latexNodes)\n  );\n};\n\nconst typesetMathMLNodes = (root: Element, windowImpl: Window) => () => {\n  const mathMLNodes = findUnprocessedMath(root);\n\n  if (isEmpty(mathMLNodes)) {\n    return;\n  }\n\n  // style the entire document because mathjax is unable to style individual math elements\n  windowImpl.MathJax.Hub.Queue(\n    () => windowImpl.MathJax.Hub.Typeset(root)\n  );\n};\n\nconst markLatexNodesRendered = (latexNodes: Element[]) => () => {\n  // Queue a call to mark the found nodes as rendered so are ignored if typesetting is called repeatedly\n  // uses className += instead of classList because IE\n  const result = [];\n  for (const node of latexNodes) {\n    result.push(node.className += ` ${MATH_RENDERED_CLASS}`);\n  }\n};\n\n// Search document for math and [data-math] elements and then typeset them\nfunction typesetDocument(root: Element, windowImpl: Window) {\n  const latexNodes = findLatexNodes(root);\n\n  windowImpl.MathJax.Hub.Queue(\n    typesetLatexNodes(latexNodes, windowImpl),\n    typesetMathMLNodes(root, windowImpl)\n  );\n}\n\nconst resolveOrWait = (root: Element, resolve: () => void, remainingTries = 5) => {\n  if (\n    remainingTries > 0\n    && (findLatexNodes(root).length || findUnprocessedMath(root).length)\n  ) {\n    setTimeout(() => {\n      resolveOrWait(root, resolve, remainingTries - 1);\n    }, 200);\n  } else {\n    resolve();\n  }\n};\n\nconst typesetDocumentPromise = (root: Element, windowImpl: Window): Promise<void> => new Promise((resolve) => {\n  typesetDocument(root, windowImpl);\n  windowImpl.MathJax.Hub.Queue(() => {\n    resolveOrWait(root, resolve);\n  });\n});\n\n// memoize'd getter for typeset document function so that each node's\n// typeset has its own debounce\nconst getTypesetDocument = memoize((root, windowImpl) => {\n  // Install a debounce around typesetting function so that it will only run once\n  // every Xms even if called multiple times in that period\n  return debounce(typesetDocumentPromise, 100, {\n    leading: true,\n    trailing: false,\n  }).bind(null, root, windowImpl);\n});\ngetTypesetDocument.cache = new WeakMap();\n\n// typesetMath is the main exported function.\n// It's called by components like HTML after they're rendered\nconst typesetMath = async (root: Element, windowImpl = window) => {\n  await startMathJax();\n\n  // check if MathJax is setup\n  if (!(windowImpl && windowImpl.MathJax && windowImpl.MathJax.Hub)) {\n    console.warn('Warning: Expected MathJax to be initialized.');\n    return Promise.resolve();\n  }\n\n  // schedule a Mathjax pass if there is at least one [data-math] or <math> element present\n  if (root.querySelector(COMBINED_MATH_SELECTOR)) {\n    return getTypesetDocument(root, windowImpl)();\n  }\n\n  return Promise.resolve();\n};\n\nconst startMathJax: (windowImpl?: Window) => Promise<void> = once((windowImpl: Window = window) => new Promise((resolve) => {\n  const configuredCallback = () => {\n    // there doesn't seem to be a config option for this\n    windowImpl.MathJax.HTML.Cookie.prefix = 'mathjax';\n    // proceed with mathjax initi\n    windowImpl.MathJax.Hub.Configured();\n    windowImpl.MathJax.Hub.Register.StartupHook('End', () => {\n      resolve();\n    });\n  };\n\n  if (!document.getElementById('MathJax-Script')) {\n    const script = document.createElement('script');\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_HTMLorMML-full&delayStartupUntil=configured';\n    script.id = 'MathJax-Script';\n    script.async = true;\n    document.head.appendChild(script);\n  }\n\n  if (windowImpl.MathJax && windowImpl.MathJax.Hub) {\n    windowImpl.MathJax.Hub.Config(MATHJAX_CONFIG);\n    // Does not seem to work when passed to Config\n    windowImpl.MathJax.Hub.processSectionDelay = 0;\n    configuredCallback();\n  } else {\n    // If the MathJax.js file has not loaded yet:\n    // Call MathJax.Configured once MathJax loads and\n    // loads this config JSON since the CDN URL\n    // says to `delayStartupUntil=configured`\n    (MATHJAX_CONFIG as any).AuthorInit = configuredCallback;\n    windowImpl.MathJax = MATHJAX_CONFIG;\n  }\n}));\n\nexport {\n  typesetMath,\n  startMathJax,\n};\n","import React from 'react';\nimport scrollToElement from 'scroll-to-element';\nimport styled from 'styled-components';\nimport { Answer, ExerciseData, ID, QuestionState, StepBase, StepWithData } from '../../src/types';\nimport { TaskStepCard } from './Card';\nimport { Content } from './Content';\nimport { ExerciseIcons } from './ExerciseIcons';\nimport { ExerciseQuestion } from './ExerciseQuestion';\nimport { typesetMath } from '../helpers/mathjax';\n\nconst StyledTaskStepCard = styled(TaskStepCard)`\n  font-size: 1.8rem;\n  line-height: 2.8rem;\n`;\n\nconst Preamble = ({ exercise }: { exercise: ExerciseData }) => {\n  return (\n    <>\n      {exercise.context &&\n        <Content className=\"step-card-body exercise-context\"\n          block html={exercise.context} />}\n\n      {exercise.stimulus_html &&\n        <Content className=\"step-card-body exercise-stimulus\"\n          block html={exercise.stimulus_html} />}\n    </>\n  );\n};\n\nexport interface ExerciseBaseProps {\n  /** An object containing a Step ID and Exercise UID */\n  step: StepBase;\n  /** An exercise object from the Exercises API */\n  exercise: ExerciseData;\n  numberOfQuestions: number;\n  /** The current question index. For multipart questions this is the first question number.  */\n  questionNumber: number;\n  /** A boolean that enables showing the amount of attempts remaining. */\n  hasMultipleAttempts: boolean;\n  /** A callback with the question_id when the Submit/Re-submit button is clicked. */\n  onAnswerSave: (question_id: number) => void;\n  /** A callback with the current question index when the Next/Continue button is clicked. */\n  onNextStep: (currentIndex: number) => void;\n  /** A boolean that enables always showing every answer feedback_html field. */\n  show_all_feedback?: boolean;\n  /** The question number to scroll into view when the component renders. */\n  scrollToQuestion?: number;\n  /** A boolean that enables showing exercise icons in the card header:\n   * - An info icon describing the exercise type (multiple-choice, two-step, etc.)\n   * - A topic icon linking to the relevant textbook location\n   * - An errata icon linking to the errata/feedback form\n   */\n  showExerciseIcons?: boolean;\n  /** A URL for textbook content relevant to the exercise. */\n  topicUrl?: string;\n  /** A URL for the errata form. */\n  errataUrl?: string;\n}\n\nexport interface ExerciseWithStepDataProps extends ExerciseBaseProps {\n  /** A Tutor Step object */\n  step: StepWithData;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  apiIsPending: boolean;\n  onAnswerChange: (answer: Answer) => void;\n  canUpdateCurrentStep: boolean;\n  answer_id_order?: ID[];\n}\n\nexport interface ExerciseWithQuestionStatesProps extends ExerciseBaseProps {\n  questionStates: { [key: ID]: QuestionState };\n  /** A callback with the IDs of the answer and question */\n  onAnswerChange: (answer: Omit<Answer, 'id'> & { id: number, question_id: number }) => void;\n}\n\nexport const Exercise = ({\n  numberOfQuestions, questionNumber, step, exercise, show_all_feedback, scrollToQuestion, ...props\n}: ExerciseWithStepDataProps | ExerciseWithQuestionStatesProps) => {\n  const legacyStepRender = 'feedback_html' in step;\n  const questionsRef = React.useRef<Array<HTMLDivElement>>([]);\n  const container = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    const el = scrollToQuestion && questionsRef.current[scrollToQuestion];\n    if (el) {\n      scrollToElement(el);\n    }\n  }, [scrollToQuestion, exercise]);\n\n  React.useEffect(() => {\n    if (container.current) {\n      typesetMath(container.current);\n    }\n  }, [exercise]);\n\n  return (<StyledTaskStepCard\n    step={step}\n    questionNumber={questionNumber}\n    numberOfQuestions={legacyStepRender ? numberOfQuestions : exercise.questions.length}\n    rightHeaderChildren={props.showExerciseIcons ?\n      <ExerciseIcons exercise={exercise} topicUrl={props.topicUrl} errataUrl={props.errataUrl} /> : null}\n    showTotalQuestions={legacyStepRender}\n  >\n    <div ref={container}>\n      <Preamble exercise={exercise} />\n\n      {exercise.questions.map((q, i) => {\n        const state = { ...(legacyStepRender ? step : props['questionStates'][q.id]) };\n        return (\n          <ExerciseQuestion\n            {...props}\n            {...state}\n            ref={(el: HTMLDivElement) => questionsRef.current[questionNumber + i] = el}\n            exercise_uid={exercise.uid}\n            key={q.id}\n            question={q}\n            questionNumber={questionNumber + i}\n            choicesEnabled={state.canAnswer}\n            displaySolution={true}\n            detailedSolution={state.solution?.content_html}\n            show_all_feedback={show_all_feedback}\n            tableFeedbackEnabled={show_all_feedback && !legacyStepRender}\n            canUpdateCurrentStep={\n              // misleading prop name, we want to show a continue button for completed questions\n              // that aren't the last question, which requires this prop to be true\n              'canUpdateCurrentStep' in props ?\n                props.canUpdateCurrentStep : !(i + 1 === exercise.questions.length)\n            }\n          />\n        )\n      }\n      )}\n    </div>\n  </StyledTaskStepCard>)\n};\n","const SvgComponent = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M14.556 2.09149C15.2296 1.78355 16 2.26721 16 2.99824V10.5951C16 10.9241 15.8362 11.2328 15.5605 11.4188C14.4229 12.1864 13.2007 12.6956 11.6715 12.6956C9.53267 12.6956 8.12768 11.6087 6.42651 11.6087C4.81213 11.6087 3.69241 11.923 2.79365 12.3V15.25C2.79365 15.6642 2.45254 16 2.03175 16H1.52381C1.10302 16 0.761905 15.6642 0.761905 15.25V3.18577C0.301492 2.86952 0 2.34455 0 1.74999C0 0.75924 0.836349 -0.0391985 1.852 0.00148899C2.75575 0.0376765 3.49578 0.75049 3.55203 1.63912C3.56854 1.8998 3.52632 2.1488 3.43819 2.37543C4.09648 2.13699 4.80613 1.99999 5.59835 1.99999C7.73718 1.99999 9.14216 3.08696 10.8433 3.08696C12.1289 3.08696 13.4659 2.5899 14.556 2.09149ZM2.79365 4.20718V6.40999C3.71429 6.07656 4.41841 5.85281 5.13016 5.75656V3.51999C4.38413 3.5878 3.84635 3.82593 2.79365 4.20718ZM9.80317 4.49437C8.96454 4.34837 8.21949 4.05752 7.46667 3.82749V5.93437C8.23413 6.14393 8.9767 6.44824 9.80317 6.63156V4.49437ZM5.13016 5.75656V7.94531C6.1713 7.85224 6.84159 7.92546 7.46667 8.06406V5.93437C6.66517 5.71452 5.98791 5.6399 5.13016 5.75656ZM7.46667 10.2012C8.30279 10.3466 9.04546 10.6365 9.80317 10.8681V8.76156C9.03248 8.55074 8.29397 8.24749 7.46667 8.06406V10.2012ZM2.79365 10.6906C3.54349 10.4284 4.31079 10.2581 5.13016 10.1731V7.94531C4.30127 8.01874 3.62667 8.19656 2.79365 8.48781V10.6906ZM14.4762 3.76562C13.8 4.04218 12.9971 4.31687 12.1397 4.4678V6.71499C13.0067 6.57874 13.7279 6.27437 14.4762 5.96843V3.76562ZM14.4762 10.3269V8.12406C13.7717 8.56781 12.9276 8.83062 12.1397 8.93718V11.1741C12.9356 11.0997 13.679 10.8291 14.4762 10.3269ZM9.80317 6.63156V8.76156C10.6179 8.9845 11.283 9.05349 12.1397 8.93718V6.71499C11.3143 6.84584 10.5542 6.79862 9.80317 6.63156Z\" fill=\"currentColor\"/>\n  </svg>\n);\nexport default SvgComponent;\n","import styled, { css } from 'styled-components';\nimport { colors, breakpoints } from '../theme';\nimport FlagIcon from '../assets/flag';\n\nconst ProgressBarWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  padding: 2rem;\n  ${breakpoints.mobile`\n    padding: 0;\n  `}\n`;\n\nconst StyledItemWrapper = styled.span`\n  display: flex;\n  align-items: center;\n  margin: 0 1rem 1rem 0;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst handleVariant = (variant: ProgressBarItemVariant, isActive: boolean) => {\n  switch (variant) {\n    case 'isStatus':\n      return css`\n        color: ${isActive ? colors.palette.white : colors.palette.darkGray};\n        background-color: ${isActive ? colors.palette.darkGray : colors.palette.neutralLight};\n        border: none;\n        box-shadow: ${isActive ? '0px 0px 2px rgba(0, 0, 0, 0.4), 0px 0px 6px rgba(0, 0, 0, 0.2)' : 'none'};\n      `;\n    case 'isCorrect':\n      return css`\n        color: ${colors.palette.white};\n        background-color: rgba(99, 165, 36, 0.6);\n        border-color: ${colors.palette.darkGreen};\n        box-shadow: ${isActive ? '0 0 6px rgba(0, 0, 0, 0.4)' : 'none'};\n      `;\n    case 'isIncorrect':\n      return css`\n        color: ${colors.palette.white};\n        background-color: ${colors.palette.lightRed};\n        border-color: ${colors.palette.darkRed};\n        box-shadow: ${isActive ? '0 0 6px rgba(0, 0, 0, 0.4)' : 'none'};\n      `;\n    default:\n      return css`\n        color: ${colors.palette.darkGray};\n        background-color: ${isActive ? colors.palette.white : colors.palette.neutralLight};\n        border-color: ${isActive ? colors.palette.darkGray : colors.palette.neutralLight};\n        box-shadow: ${isActive ? '0 0 6px rgba(0, 0, 0, 0.4)' : 'none'};\n      `;\n  }\n};\n\nexport const StyledItem = styled.button<{ variant: ProgressBarItemVariant, isActive: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${props => props.isActive ? '3.0rem' : '2.4rem'};\n  height: ${props => props.isActive ? '3.0rem' : '2.4rem'};\n  border-radius: 50%;\n  border-width: 1px;\n  border-style: solid;\n  margin: ${props => props.isActive ? '0' : '0 0.3rem'};\n  font-size: 1.4rem;\n  font-weight: bold;\n  cursor: pointer;\n  ${props => handleVariant(props.variant, props.isActive)}\n`;\n\nexport interface ProgressBarProps<S extends {variant: ProgressBarItemVariant}> {\n  steps: S[];\n  activeIndex: number | null;\n  goToStep: (index: number, step: S) => void;\n}\n\nexport interface ProgressBarItemProps<S> {\n  index: number;\n  isActive: boolean;\n  step: S;\n  goToStep: (index: number, step: S) => void;\n}\n\nexport type ProgressBarItemVariant = 'isCorrect' | 'isIncorrect' | 'isStatus' | null;\n\nexport const ProgressBarItem = <S extends {variant: ProgressBarItemVariant}>({index, isActive, step, goToStep}: ProgressBarItemProps<S>) =>\n  <StyledItemWrapper>\n    <StyledItem variant={step.variant} isActive={isActive} onClick={() => goToStep(index, step)}>\n      {step.variant === 'isStatus' ? <FlagIcon /> : index + 1}\n    </StyledItem>\n  </StyledItemWrapper>;\n\nexport const ProgressBar = <S extends {variant: ProgressBarItemVariant}>({ steps, activeIndex, goToStep }: ProgressBarProps<S>) => <ProgressBarWrapper>\n  {steps.map((step, index) => <ProgressBarItem\n    key={index}\n    index={index}\n    isActive={index === activeIndex}\n    step={step}\n    goToStep={goToStep}\n  />)}\n</ProgressBarWrapper>;\n\n","import { BulletList } from \"react-content-loader\";\nimport { colors } from \"../../src/theme\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  max-width: 1000px;\n  @media(min-width: 960px) {\n    // Around the height of a multiple choice with 4 options\n    min-height: 53.8rem;\n  }\n  padding: 2rem;\n  margin: 2rem;\n  border: 1px solid ${colors.palette.light};\n  border-radius: 0.25rem;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  > svg {\n    max-width: 600px;\n    flex-grow: 1;\n  }\n`;\n\nexport const Loader = () => <Wrapper><BulletList uniqueKey=\"OSLoader\" /></Wrapper>;\n"],"names":["ALPHABET","isAnswerIncorrect","answer","incorrectAnswerId","id","countWords","text","words","trim","match","length","Content","_ref","html","component","_ref$block","block","props","_objectWithoutPropertiesLoose","_excluded","undefined","React","cloneElement","_extends","_jsx","dangerouslySetInnerHTML","__html","SimpleFeedback","children","contentRenderer","className","classnames","Feedback","wrapperClasses","position","_jsxs","Answer","body","feedback","selectedCount","onChangeAnswer","radioBox","type","iter","disabled","onKeyPress","qid","correctAnswerId","hasCorrectAnswer","answered_count","show_all_feedback","tableFeedbackEnabled","isChecked","chosenAnswer","Boolean","find","a","isAnswerChecked","isCorrect","correctness","isAnswerCorrect","isIncorrect","correctIncorrectIcon","classes","cn","ariaLabel","onChange","checked","name","feedback_html","percent","selected_count","Math","round","green","red","content_html","_Fragment","htmlFor","onClick","role","displayName","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","AnswersTable","idCounter","question","_props$type","correct_answer_id","correct_answer_feedback_html","_props$show_all_feedb","answerIdOrder","instructions","hideAnswers","idOrder","questionAnswerProps","answer_id","choicesEnabled","answersHtml","answers","slice","sort","b","indexOf","map","i","additionalProps","question_id","parseInt","key","answerProps","Object","assign","push","index","forEach","item","spliceIndex","splice","palette","danger","darkRed","lightRed","lightGreen","darkGreen","paleYellow","teal","blue","mediumBlue","lightBlue","neutralLightBlue","tangerine","gray","darkGray","pale","light","white","neutralLightest","neutralCool","neutralBright","neutralLighter","neutralLight","neutralMedium","neutral","neutralThin","neutralDark","neutralFeedback","neutralDarker","black","orange","colors","color","correct","background","incorrect","hover","label","colorHover","colorSelected","popover","arrowOuterColor","borderColor","card","header","button","backgroundHover","backgroundActive","freeResponse","breakpoints","css","_taggedTemplateLiteralLoose","apply","call","arguments","tablet","mixins","answerColor","values","answerChecked","answerCorrect","answerIncorrect","answerHover","answerCorrectText","answerCorrectAnswer","resetText","stepCardPadding","InnerStepCard","styled","div","OuterStepCard","StepCardHeader","StepCardQuestion","StepCard","questionNumber","numberOfQuestions","showTotalQuestions","stepType","isHomework","availablePoints","unpadded","questionId","multipartBadge","leftHeaderChildren","rightHeaderChildren","headerTitleChildren","otherProps","TaskStepCard","_ref2","step","_excluded2","task","available_points","uid","StyledButton","Button","isWaiting","waitingText","CompletionStatusCard","CompletionHeader","h2","CompletionStatus","numberCompleted","handleClick","allCompleted","someCompleted","buttonText","split","toLowerCase","StyledQuestion","Question","forwardRef","ref","exerciseUid","solution","exercise_uid","context","hidePreambles","stem_html","_question$collaborato","collaborator_solutions","formats","stimulus_html","is_deleted","_question$collaborato2","displaySolution","s","hasSolution","join","QuestionHtml","hidden","displayFormats","FormatsListing","_props$html","_ref$formats","format","StepCardFooter","TextAreaErrorStyle","StyledFreeResponse","SyledQuestionStem","InfoRow","hasChildren","FreeResponseTextArea","textarea","isOverWordLimit","readOnly","RevertButton","FreeResponseInput","cancelHandler","defaultValue","infoRowChildren","isSubmitDisabled","pointsChildren","saveHandler","submitBtnLabel","textHasChanged","wordLimit","questionProps","placeholder","ItemWrapper","InnerWrapper","Popover","PopoverItem","wrapperProps","PopoverItemsWrapper","StyledFontAwesomeIcon","FontAwesomeIcon","ExerciseIcons","typeExplanation","exercise","topicUrl","errataUrl","items","isMultipleChoice","questions","every","q","includes","as","href","target","icon","faBookOpen","faTriangleExclamation","faCircleInfo","height","width","AttemptsRemaining","count","PublishedComments","published_comments","SaveButton","attempt_number","NextButton","canUpdateCurrentStep","FreeResponseReview","_ref3","free_response","ExerciseQuestion","hasMultipleAttempts","attempts_remaining","detailedSolution","canAnswer","needsSaved","apiIsPending","onAnswerSave","onNextStep","answer_id_order","onAnswerChange","is_completed","MATHJAX_CONFIG","extensions","showProcessingMessages","skipStartupTypeset","styles","left","right","visibility","tex2jax","displayMath","inlineMath","findUnprocessedMath","root","processedMath","Array","from","querySelectorAll","findProcessedMath","filter","node","findLatexNodes","latexNodes","_i","_Array$from","formula","getAttribute","classList","contains","textContent","tagName","add","resolveOrWait","resolve","remainingTries","setTimeout","typesetDocumentPromise","windowImpl","Promise","MathJax","Hub","Queue","isEmpty","Typeset","_step","result","_iterator","_createForOfIteratorHelperLoose","done","value","markLatexNodesRendered","typesetLatexNodes","mathMLNodes","typesetMathMLNodes","typesetDocument","getTypesetDocument","memoize","debounce","leading","trailing","bind","cache","WeakMap","startMathJax","once","window","configuredCallback","HTML","Cookie","prefix","Configured","Register","StartupHook","document","getElementById","script","createElement","src","async","head","appendChild","Config","processSectionDelay","AuthorInit","StyledTaskStepCard","Preamble","Exercise","scrollToQuestion","legacyStepRender","questionsRef","useRef","container","useEffect","el","current","scrollToElement","then","querySelector","MATH_DATA_SELECTOR","console","warn","e","reject","typesetMath","showExerciseIcons","_state$solution","state","_createElement","SvgComponent","viewBox","fill","xmlns","d","ProgressBarWrapper","StyledItemWrapper","span","StyledItem","isActive","variant","handleVariant","ProgressBarItem","goToStep","FlagIcon","ProgressBar","activeIndex","steps","Wrapper","Loader","BulletList","uniqueKey"],"mappings":"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"}