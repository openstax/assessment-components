{"version":3,"file":"index.module.js","sources":["../src/utils.ts","../src/components/Content.tsx","../src/components/Feedback.tsx","../src/components/Answer.tsx","../src/constants.ts","../src/components/StepCardFooter.tsx","../src/components/AnswersTable.tsx","../src/theme.ts","../src/components/Question.tsx","../src/components/Button.tsx","../src/components/FreeResponseInput.tsx","../src/components/Card.tsx","../src/components/ExerciseQuestion.tsx","../src/components/Exercise.tsx"],"sourcesContent":["import { Answer, ChosenAnswer, ID } from '../src/types';\n\nexport const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\nconst MAX_CORRECTNESS = '1.0';\n\nexport const isAnswerCorrect = function(answer: Answer, correctAnswerId?: ID | null) {\n  // if answer does not have an id, check the isCorrect property.\n  if (!(answer.id || correctAnswerId)) {\n    return answer.isCorrect;\n  }\n  let isCorrect = answer.id === correctAnswerId;\n  if (answer.correctness != null) { isCorrect = (answer.correctness === MAX_CORRECTNESS); }\n\n  return isCorrect;\n};\n\nexport const isAnswerIncorrect = function(answer: Answer, incorrectAnswerId?: ID) {\n  // Allow multiple attempts to show incorrectness without the correct_answer_id\n  return answer.id === incorrectAnswerId;\n};\n\nexport const isAnswerChecked = (answer: Answer, chosenAnswer?: ChosenAnswer) =>\n  Boolean((chosenAnswer || []).find( a => a == answer.id));\n\nexport function countWords(text: string) {\n  const trimmedText = text.trim();\n  //https://css-tricks.com/build-word-counter-app/\n  const words = trimmedText.match(/\\b[-?(\\w+)?]+\\b/gi);\n  if(!words) return 0;\n  return words.length;\n}\n","import React from \"react\";\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\ntype ComponentType = keyof JSX.IntrinsicElements | React.JSXElementConstructor<any>;\n\nexport interface ContentProps<T extends ComponentType | undefined> {\n  className?: string;\n  component?: T extends undefined ? undefined :\n    T extends ComponentType ? React.ReactComponentElement<T>:\n    never;\n  html: string;\n  block?: boolean;\n}\n\nexport const Content = (<T extends ComponentType | undefined>(\n  {html, component, block = false, ...props}: ContentProps<T>\n) => {\n  if (component !== undefined) {\n    return React.cloneElement(component, {html, ...props});\n  }\n  if (block) {\n    return <div dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  } else {\n    return <span dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  }\n});\n","import classnames from 'classnames';\nimport { Content } from './Content';\n\ninterface FeedbackProps {\n  position?: 'top' | 'bottom' | 'left' | 'right';\n  children: string;\n  className?: string;\n  contentRenderer?: JSX.Element;\n}\n\nconst SimpleFeedback = (props: Pick<FeedbackProps, 'children' | 'className' | 'contentRenderer'>) => (\n  <aside>\n    <Content\n      component={props.contentRenderer}\n      className={classnames('question-feedback-content', 'has-html', props.className)}\n      html={props.children}\n      block={true} />\n  </aside>\n);\n\nconst Feedback = (props: FeedbackProps) => {\n  const position = props.position || 'bottom';\n  const wrapperClasses = classnames('question-feedback', position);\n\n  return (\n    <aside className={wrapperClasses}>\n      <div className=\"arrow\" aria-label=\"Answer Feedback\" />\n      <SimpleFeedback {...props}>\n        {props.children}\n      </SimpleFeedback>\n    </aside>\n  );\n};\n\nexport { Feedback, SimpleFeedback };\n","import cn from 'classnames';\nimport { ReactNode } from 'react';\nimport { ALPHABET, isAnswerChecked, isAnswerCorrect, isAnswerIncorrect } from '../utils';\nimport { Answer as AnswerType, ChosenAnswer, ID } from '../types';\nimport { Content } from './Content';\nimport { SimpleFeedback } from './Feedback';\n\nexport interface AnswerProps {\n  answer: AnswerType;\n  iter: number;\n  qid: ID;\n  type: 'teacher-review' | 'teacher-preview' | 'student' | 'student-mpp';\n  hasCorrectAnswer?: boolean;\n  onChangeAnswer: () => void;\n  disabled: boolean;\n  chosenAnswer: ChosenAnswer;\n  correctAnswerId?: ID | null;\n  incorrectAnswerId?: ID;\n  onKeyPress?: () => void;\n  answered_count?: number;\n  correctIncorrectIcon?: ReactNode,\n  radioBox?: ReactNode;\n  contentRenderer?: JSX.Element;\n  show_all_feedback?: boolean;\n}\n\nexport const Answer = (props: AnswerProps) => {\n  const {\n    type,\n    iter,\n    answer,\n    disabled,\n    onKeyPress,\n    qid,\n    chosenAnswer,\n    correctAnswerId,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    answered_count,\n    contentRenderer,\n    show_all_feedback\n  } = props;\n\n  let body, feedback, selectedCount;\n\n  const isChecked = isAnswerChecked(answer, chosenAnswer);\n  const isCorrect = isAnswerCorrect(answer, correctAnswerId);\n  const isIncorrect = isAnswerIncorrect(answer, incorrectAnswerId);\n\n  const correctIncorrectIcon = (\n    <div className=\"correct-incorrect\">\n      {isCorrect && props.correctIncorrectIcon}\n    </div>\n  );\n\n  const classes = cn('answers-answer', {\n    'disabled': disabled,\n    'answer-checked': isChecked,\n    'answer-correct': isCorrect && type !== 'student-mpp',\n    'answer-incorrect': incorrectAnswerId && isAnswerIncorrect(answer, incorrectAnswerId),\n  });\n\n  let ariaLabel = `${isChecked ? 'Selected ' : ''}Choice ${ALPHABET[iter]}`;\n  // somewhat misleading - this means that there is a correct answer,\n  // not necessarily that this answer is correct\n  if (hasCorrectAnswer) {\n    ariaLabel += `(${isCorrect ? 'Correct' : 'Incorrect'} Answer)`;\n  }\n  ariaLabel += ':';\n\n  let onChangeAnswer, radioBox;\n\n  if (!hasCorrectAnswer\n    && (type !== 'teacher-review')\n    && (type !== 'teacher-preview')\n    && (type !== 'student-mpp')) {\n    ({ onChangeAnswer } = props);\n  }\n\n  if (onChangeAnswer) {\n    radioBox = (\n      <input\n        type=\"radio\"\n        className=\"answer-input-box\"\n        checked={isChecked}\n        id={`${qid}-option-${iter}`}\n        name={`${qid}-options`}\n        onChange={onChangeAnswer}\n        disabled={disabled}\n      />\n    );\n  }\n\n  if (show_all_feedback && answer.feedback_html) {\n    feedback = (\n      <SimpleFeedback key=\"question-mc-feedback\" contentRenderer={contentRenderer}>\n        {answer.feedback_html}\n      </SimpleFeedback>\n    );\n  }\n\n  if (type === 'teacher-review') {\n    let percent = 0;\n    if (answer.selected_count && answered_count) {\n      percent = Math.round((answer.selected_count / answered_count) * 100);\n    }\n    selectedCount = (\n      <span\n        className=\"selected-count\"\n        data-percent={`${percent}`}\n      >\n        {answer.selected_count}\n      </span>\n    );\n\n    body = (\n      <div className=\"review-wrapper\">\n        <div className={cn('review-count', { 'green': isCorrect, 'red': !isCorrect })}>\n          {selectedCount}\n          <span className={cn('letter', { 'green': isCorrect, 'red': !isCorrect })}>\n            {ALPHABET[iter]}\n          </span>\n        </div>\n\n        <div className=\"answer-answer\">\n          <Content className=\"answer-content\" component={contentRenderer} html={answer.content_html} />\n          {feedback}\n        </div>\n      </div>\n    );\n  } else {\n    body = (\n      <>\n        {type === 'teacher-preview' && correctIncorrectIcon}\n        {selectedCount}\n        {radioBox}\n        <label\n          onKeyPress={onKeyPress}\n          htmlFor={`${qid}-option-${iter}`}\n          className=\"answer-label\">\n          <span className=\"answer-letter-wrapper\">\n            <button\n              onClick={onChangeAnswer}\n              aria-label={ariaLabel}\n              className=\"answer-letter\"\n              disabled={disabled || isIncorrect}\n              data-test-id={`answer-choice-${ALPHABET[iter]}`}\n            >\n              {ALPHABET[iter]}\n            </button>\n          </span>\n          <div className=\"answer-answer\">\n            <Content className=\"answer-content\" component={contentRenderer} html={answer.content_html} />\n            {feedback}\n          </div>\n        </label>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"openstax-answer\">\n      <section role=\"region\" className={classes}>\n        {body}\n      </section>\n    </div>\n  );\n}\nAnswer.displayName = 'OSAnswer';\n","import { AnswerDisplayType } from './types';\n\nexport const defaultAnswerType: AnswerDisplayType = 'student';\n","import { colors, breakpoints, mixins } from \"../theme\";\nimport styled from \"styled-components\";\n\nexport const StepCardFooter = styled.div`\n    ${mixins.stepCardPadding()}\n    border-top: 1px solid ${colors.palette.pale};\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    font-size: 1.4rem;\n    line-height: 2rem;\n\n    > * {\n        flex-grow: 1;\n    }\n\n    button {\n        width: 160px;\n        height: 48px;\n    }\n\n    .points {\n        margin-bottom: 1.6rem; // Replace with https://caniuse.com/?search=gap soon\n\n        .attempts-left {\n            color: #F36B32;\n        }\n    }\n\n    .controls {\n        display: flex;\n        flex-flow: column wrap-reverse;\n        margin-left: 1.6rem; // Replace with https://caniuse.com/?search=gap soon\n\n        button + button {\n            margin: 0.8rem 0 0 0;\n        }\n    }\n\n    ${breakpoints.desktop`\n        padding: 32px 140px;\n        flex-wrap: nowrap;\n\n        .points {\n            max-width: 400px;\n        }\n\n        .controls {\n            flex-flow: row;\n            justify-content: flex-end;\n\n            button + button {\n                margin: 0 0 0 0.8rem;\n            }\n        }\n    `}\n`;\n","import { defaultAnswerType } from \"../constants\";\nimport { Answer as AnswerType, AnswerDisplayType, ID, ExerciseQuestionData } from \"src/types\";\nimport { Answer } from \"./Answer\";\nimport { Feedback } from \"./Feedback\";\n\nexport interface AnswersTableProps {\n  question: ExerciseQuestionData;\n  type?: AnswerDisplayType;\n  answer_id?: ID;\n  correct_answer_id?: ID | null;\n  incorrectAnswerId?: ID;\n  answerIdOrder?: ID[],\n  feedback_html: string;\n  correct_answer_feedback_html?: string;\n  answered_count?: number;\n  show_all_feedback?: boolean;\n  onChangeAnswer: () => void;\n  hideAnswers: boolean;\n  hasCorrectAnswer?: boolean;\n  onChangeAttempt?: () => void;\n  choicesEnabled?: boolean;\n  onKeyPress?: () => void;\n  contentRenderer?: JSX.Element;\n  instructions?: JSX.Element;\n}\n\nexport const AnswersTable = (props: AnswersTableProps) => {\n  let idCounter = 0;\n\n  const {\n    question, hideAnswers, type = defaultAnswerType, answered_count, choicesEnabled, correct_answer_id,\n    incorrectAnswerId, answer_id, feedback_html, correct_answer_feedback_html,\n    show_all_feedback = false, hasCorrectAnswer, onChangeAnswer, onKeyPress, answerIdOrder, instructions\n  } = props;\n  if (hideAnswers) { return null; }\n\n  const { id } = question;\n\n  const feedback: { index: number, html: string }[] = [];\n\n  const chosenAnswer = [answer_id];\n\n  const sortedAnswersByIdOrder = (idOrder: ID[]) => {\n    const { answers } = question;\n    return answers.slice().sort((a, b) => idOrder.indexOf(a.id) - idOrder.indexOf(b.id));\n  }\n\n  const questionAnswerProps = {\n    qid: id || `auto-${idCounter++}`,\n    correctAnswerId: correct_answer_id,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    chosenAnswer,\n    onChangeAnswer: onChangeAnswer,\n    type,\n    answered_count,\n    disabled: !choicesEnabled,\n    show_all_feedback,\n    onKeyPress\n  };\n\n  const answers = answerIdOrder ? sortedAnswersByIdOrder(answerIdOrder) : question.answers;\n\n  const answersHtml = answers.map((answer, i) => {\n    const additionalProps: { answer: AnswerType, iter: number, key: string }\n      = { answer, iter: i, key: `${questionAnswerProps.qid}-option-${i}` };\n    const answerProps = Object.assign({}, additionalProps, questionAnswerProps);\n\n    if (answer.id === incorrectAnswerId && feedback_html) {\n      feedback.push({ index: i, html: feedback_html })\n    } else if (answer.id === correct_answer_id && correct_answer_feedback_html) {\n      feedback.push({ index: i, html: correct_answer_feedback_html })\n    }\n\n    return (\n      <Answer {...answerProps} />\n    );\n  });\n\n  feedback.forEach((item, i) => {\n    const spliceIndex = item.index + i + 1;\n    answersHtml.splice(spliceIndex, 0, (\n      <Feedback key={spliceIndex} contentRenderer={props.contentRenderer}>\n        {item.html}\n      </Feedback>\n    ));\n  });\n\n  return (\n    <div className=\"answers-table\">\n      {instructions}\n      {answersHtml}\n    </div>\n  );\n}\n","import { css } from 'styled-components';\n\nconst palette = {\n  red: \"#ca2026\",\n  danger: \"#c2002f\",\n  darkRed: \"#c22032\",\n  lightRed: \"#e298a0\",\n  green: \"#77af42\",\n  lightGreen: \"#8bc753\",\n  darkGreen: \"#63a524\",\n  paleYellow: \"#ffffbb\",\n  teal: \"#0dc0de\",\n  blue: \"#007da4\",\n  lightBlue: \"#34bdd8\",\n  neutralLightBlue: \"#0dc0dc\",\n  tangerine: \"#ffbd3e\",\n  gray: \"#5e5e5e\",\n  darkGray: \"#757575\",\n  pale: \"#d5d5d5\",\n  light: \"#e4e4e4\",\n  white: \"#ffffff\",\n  neutralLightest: \"#f9f9f9\", // nearly white\n  neutralCool: \"#f6f7f8\", // cool bright gray\n  neutralBright: \"#f5f5f5\", // bright gray\n  neutralLighter: \"#f1f1f1\", // light gray\n  neutralLight: \"#e5e5e5\", // light gray\n  neutralMedium: \"#a0a0a0\", // light gray\n  neutral: \"#818181\", // gray\n  neutralThin: \"#6f6f6f\", // medium gray\n  neutralDark: \"#5f6163\", // dark gray\n  neutralDarker: \"#424242\", // very dark gray\n  black: \"#000000\",\n  orange: \"#D4450C\"\n};\n\nexport const colors = {\n  palette: palette,\n  answer: {\n    color: palette.lightBlue,\n    correct: {\n      color: palette.green,\n      background: \"#77af42\",\n    },\n    incorrect: {\n      color: palette.red,\n      background: palette.red,\n    },\n    checked: palette.lightBlue,\n    hover: palette.neutralDark,\n    label: {\n      color: palette.neutralMedium,\n      colorHover: palette.neutralDark,\n      colorSelected: palette.lightBlue,\n    },\n    feedback: {\n      arrowOuterColor: \"rgba(0, 0, 0, 0.25)\",\n      popover: {\n        borderColor: \"rgba(0, 0, 0, 0.2)\",\n      },\n    },\n  },\n  card: {\n    background: \"#daf3f8\",\n  },\n  button: {\n    background: palette.orange,\n    backgroundHover: \"#E74B0D\",\n    backgroundActive: \"#C5400B\"\n  },\n  freeResponse: {\n    color: palette.neutralDark,\n    background: palette.neutralLighter,\n  },\n};\n\nexport const layouts = {\n  answer: {\n    verticalSpacing: \"1.5rem\",\n    horizontalSpacing: \"1rem\",\n    horizontalBuffer: \"2.5rem\",\n    bubbleSize: \"4rem\",\n    labelSpacing: \"6.5rem\",\n    feedback: {\n      arrow: {\n        width: \"20px\",\n        height: \"15px\",\n      },\n      popover: {\n        horizontalSpacing: \"2rem\",\n        verticalSpacing: \"2rem\",\n        horizontalBuffer: \"4rem\",\n        borderWidth: \"1px\",\n        maxWidth: \"370px\",\n      }\n    },\n  },\n};\n\nexport const BREAKPOINTS = {\n  mobile: 600,\n  tablet: 999,\n  desktop: 1000,\n  large: 1600,\n};\n\nexport const breakpoints = {\n  mobile(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n  },\n  tablet(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.tablet}px) { ${css(...args)} }`;\n  },\n  desktop(...args: Parameters<typeof css>) {\n    return css`@media(min-width: ${BREAKPOINTS.desktop}px) { ${css(...args)} }`;\n  },\n  only: {\n    mobile(...args: Parameters<typeof css>) {\n      return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n    },\n  },\n  margins: {\n    mobile: '8px',\n    tablet: '24px',\n  },\n};\n\nexport const transitions = {\n  answer: \"0.1s ease-in-out\",\n}\n\nexport const mixins = {\n  answer: () => css`\n    .answer-label {\n      display: flex;\n    }\n    color: ${colors.answer.label.color};\n    .answer-letter {\n      width: ${layouts.answer.bubbleSize};\n      height: ${layouts.answer.bubbleSize};\n      min-width: ${layouts.answer.bubbleSize};\n      min-height: ${layouts.answer.bubbleSize};\n      border-radius: calc(${layouts.answer.bubbleSize} / 2);\n      border-width: 2px;\n      border-style: solid;\n      border-color: #c6c6c6;\n      color: ${colors.answer.label.colorHover};\n      transition: color ${transitions.answer}, border-color ${transitions.answer}, background-color ${transitions.answer};\n      background-color: ${colors.palette.white};\n    }\n  `,\n  answerColor: (values: { color: string, background: string }) => css`\n    color: ${values.color};\n    .answer-letter {\n       border-color: ${values.color};\n       background-color: ${values.background};\n       color: ${colors.palette.white};\n    }\n  `,\n  answerChecked: () => mixins.answerColor({ color: colors.answer.checked, background: colors.answer.checked }),\n  answerCorrect: () => mixins.answerColor(colors.answer.correct),\n  answerIncorrect: () => mixins.answerColor(colors.answer.incorrect),\n  answerHover: () => css`\n    color: ${colors.answer.label.colorHover};\n    .answer-letter {\n      border-color: ${colors.answer.label.colorSelected};\n    }\n  `,\n  answerCorrectText: () => css`\n    content: 'correct answer';\n    color: ${colors.answer.label.color};\n    margin-left: calc(-1.25 * ${layouts.answer.bubbleSize});\n    width: calc(1.25 * ${layouts.answer.bubbleSize});\n    text-align: center;\n    font-size: 1.2rem;\n    // em used here for line-height for compatibility with IE\n    // http://caniuse.com/#feat=rem -- rem ignored in pseudo elements\n    line-height: 1em;\n    margin-top: 0.8rem;\n  `,\n  answerCorrectAnswer: () => css`\n    color: ${colors.answer.correct.color};\n    .answer-letter {\n      border-color: ${colors.answer.correct.color};\n      color: ${colors.answer.correct.color};\n    }\n    &::before {\n     ${mixins.answerCorrectText()}\n      @media screen and (max-width: ${BREAKPOINTS.tablet}px) {\n        display: none;\n      }\n    }\n    @media screen and (max-width:  ${BREAKPOINTS.tablet}px) {\n      .answer-letter-wrapper {\n        display: flex;\n        flex-direction: column;\n        &::after {\n          ${mixins.answerCorrectText()}\n          width: $openstax-answer-bubble-size !important;\n          margin-left: 0;\n        }\n      }\n    }\n  `,\n  resetText: () => css`\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.6;\n    text-align: left;\n    text-align: start;\n    text-decoration: none;\n    text-shadow: none;\n    text-transform: none;\n    letter-spacing: normal;\n    word-break: normal;\n    word-spacing: normal;\n    white-space: normal;\n    line-break: auto;\n  `,\n  stepCardPadding: () => css`\n    padding: 48px 140px;\n\n    ${breakpoints.tablet`\n      padding: ${breakpoints.margins.tablet} ${breakpoints.margins.tablet};\n    `}\n\n    ${breakpoints.mobile`\n      padding: calc(${breakpoints.margins.mobile} * 2) ${breakpoints.margins.mobile};\n    `}\n  `,\n};\n\nconst theme = {\n  colors: colors,\n  layouts: layouts,\n  transitions: transitions,\n  breakpoints: breakpoints,\n};\n\nexport default theme;\n","import styled from 'styled-components';\nimport { mixins, colors, layouts, transitions } from '../theme';\nimport { AnswersTable } from './AnswersTable';\nimport classnames from 'classnames';\nimport { ID, ExerciseQuestionData, Task } from 'src/types';\nimport { ReactNode } from 'react';\nimport { Content } from './Content';\n\nconst StyledQuestion = styled.div`\n&.step-card-body {\n  ${mixins.stepCardPadding()};\n}\n\n&.openstax-question {\n  font-size: 2rem;\n\n  .detailed-solution {\n    margin-bottom: 1rem;\n    .header {\n      display: inline;\n      margin-right: 0.5rem;\n      color: #5e6062;\n      font-weight: bold;\n      flex-basis: 0;\n    }\n    .solution {\n      display: inline;\n      color: #6f6f6f;\n    }\n  }\n\n  img {\n    display: block;\n    margin: auto;\n    max-width: 100%;\n  }\n\n  .question-stem {\n    margin-bottom: 0;\n  }\n\n  .answers-table {\n    margin-bottom: 20px;\n    font-size: 17px;\n    line-height: 25px;\n  }\n\n  .instructions {\n    font-size: 1.4rem;\n    font-style: italic;\n    margin-top: 10px;\n    color: ${colors.palette.neutral};\n    margin: 0;\n\n    i {\n      margin-left: 5px;\n    }\n\n    .text-info {\n      color: ${colors.palette.neutralLightBlue};\n      padding-left: 5px;\n      cursor: pointer;\n      font-style: normal;\n    }\n  }\n\n  .multiple-choice-prompt {\n    font-weight: 600;\n  }\n\n  .free-response {\n    padding: ${layouts.answer.horizontalSpacing} ${layouts.answer.horizontalBuffer};\n    margin: ${layouts.answer.verticalSpacing} 0 ${layouts.answer.horizontalSpacing} ${layouts.answer.verticalSpacing};\n    border-left: ${layouts.answer.horizontalSpacing} solid ${colors.palette.neutralLighter};\n    font-style: italic;\n  }\n\n  &:not(.openstax-question-preview) {\n    .answers-answer {\n      width: initial;\n      &:not(.disabled){\n        .answer-label:focus{\n          background-color: ${colors.palette.neutralLightest};\n        }\n      }\n      ${mixins.answer()};\n    }\n\n    .answer-answer {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      margin-left: ${layouts.answer.horizontalSpacing};\n      * {\n        margin: 0;\n      }\n    }\n\n    .answer-letter {\n      text-align: center;\n      padding: 0;\n    }\n\n\n    .answer-label {\n      font-weight: normal;\n      width: 100%;\n      padding: ${layouts.answer.verticalSpacing} 0 0 0;\n      margin: 0;\n\n      transition: color ${transitions.answer};\n    }\n\n    // a selectable answer\n    .answer-input-box:not([disabled]) ~ .answer-label {\n      cursor: pointer;\n\n      &:hover {\n        ${mixins.answerHover()}\n      }\n    }\n\n    // a selected answer\n    &:not(.has-correct-answer) {\n      .answer-input-box {\n        display: none;\n\n        &:checked {\n          + .answer-label,\n          + .answer-label:hover {\n            ${mixins.answerChecked()};\n          }\n        }\n      }\n\n      .answer-checked{\n        .answer-label {\n          ${mixins.answerChecked()};\n        }\n      }\n    }\n\n    // answer that has been checked\n    &.has-correct-answer {\n      .answer-checked {\n        &:not(.answer-correct) {\n          .answer-label {\n            ${mixins.answerIncorrect()};\n          }\n        }\n\n        &.answer-correct {\n          .answer-label {\n            ${mixins.answerCorrect()};\n          }\n        }\n      }\n\n      .answer-correct:not(.answer-checked) {\n        .answer-label {\n          ${mixins.answerCorrectAnswer()}\n        }\n      }\n    }\n\n    &.has-incorrect-answer {\n      .answer-incorrect, .answer-checked.answer-incorrect {\n        .answer-label {\n          ${mixins.answerIncorrect()}\n        }\n      }\n    }\n\n    .question-feedback {\n      ${mixins.resetText()}\n\n      z-index: 1;\n      position: relative;\n      border: ${layouts.answer.feedback.popover.borderWidth} solid ${colors.answer.feedback.popover.borderColor};\n      background-color: ${colors.palette.white};\n      background-clip: padding-box;\n      border-radius: 0.3rem;\n      max-width: ${layouts.answer.feedback.popover.maxWidth};\n      margin: calc(${layouts.answer.feedback.arrow.height} - 5px) 0 ${layouts.answer.horizontalSpacing} calc(-1 * (2 * ${layouts.answer.horizontalSpacing}));\n      box-shadow: 10px 0px 10px rgba(0, 0, 0, .25);\n      color: ${colors.palette.neutral};\n      font-size: 1.4rem;\n      font-style: italic;\n\n      .arrow {\n        position: absolute;\n        display: block;\n        width: ${layouts.answer.feedback.arrow.width};\n        height: ${layouts.answer.feedback.arrow.height};\n        margin-left: 30px;\n        top: calc((${layouts.answer.feedback.arrow.height} + ${layouts.answer.feedback.popover.borderWidth}) * -1);\n\n        &::before,\n        &::after {\n          position: absolute;\n          display: block;\n          content: \"\";\n          border-color: transparent;\n          border-style: solid;\n          border-width: 0 calc(${layouts.answer.feedback.arrow.width} / 2) ${layouts.answer.feedback.arrow.height} calc(${layouts.answer.feedback.arrow.width} / 2);\n        }\n        &::before {\n          top: 0;\n          border-bottom-color: ${colors.answer.feedback.popover.borderColor};\n        }\n        &::after {\n          top: ${layouts.answer.feedback.popover.borderWidth};\n          border-bottom-color: ${colors.palette.white};\n        }\n      }\n\n      .question-feedback-content {\n        padding: ${layouts.answer.feedback.popover.verticalSpacing} ${layouts.answer.feedback.popover.horizontalSpacing};\n      }\n    }\n  }\n\n  .openstax-answer {\n    border-top: 1px solid #d5d5d5;\n    margin: 10px 0;\n    padding: 10px 0;\n  }\n}\n`;\n\nexport interface QuestionProps {\n  question: ExerciseQuestionData,\n  answer_id?: ID;\n  task?: Task | null,\n  correct_answer_id: ID | null;\n  incorrectAnswerId: ID;\n  hideAnswers: boolean;\n  hidePreambles?: boolean,\n  exercise_uid?: string;\n  displayFormats: boolean,\n  className: string;\n  questionNumber: number;\n  displaySolution: boolean;\n  context?: string;\n  correct_answer_feedback_html?: string;\n  contentRenderer?: JSX.Element;\n  feedback_html: string;\n  onChange: () => void;\n  show_all_feedback?: boolean;\n  children?: ReactNode;\n  answerIdOrder?: ID[];\n  choicesEnabled?: boolean;\n}\n\nexport const Question = (props: QuestionProps) => {\n  let exerciseUid, solution;\n\n  const {\n    question, correct_answer_id, incorrectAnswerId, exercise_uid, className, questionNumber, context, task, hidePreambles\n  } = props;\n\n  const { stem_html, collaborator_solutions = [], formats, stimulus_html } = question;\n\n  const hasCorrectAnswer = !!correct_answer_id;\n  const hasIncorrectAnswer = !!incorrectAnswerId;\n\n  const taskIsDeleted = (task != null ? task.is_deleted : undefined)\n  const taskIsHomework = ((task != null ? task.type : undefined) === 'homework');\n\n  const classes = classnames('openstax-question', className, {\n    'has-correct-answer': hasCorrectAnswer && !(taskIsDeleted && taskIsHomework),\n    'has-incorrect-answer': hasIncorrectAnswer,\n  });\n\n  const hasSolution = () => {\n    const { displaySolution } = props;\n    const { collaborator_solutions = [] } = question;\n\n    return (\n      displaySolution &&\n      collaborator_solutions &&\n      collaborator_solutions.find(s => s['content_html'] !== undefined)\n    );\n  };\n\n  if (exercise_uid != null) {\n    exerciseUid = (\n      <div className=\"exercise-uid\">\n        {exercise_uid}\n      </div>\n    );\n  }\n\n  if (hasSolution()) {\n    solution =\n      <div className=\"detailed-solution\">\n        <div className=\"header\">\n          Detailed solution:\n        </div>\n        <Content\n          className=\"solution\"\n          block={true}\n          html={collaborator_solutions.map(s => s['content_html']).join('')} />\n      </div>;\n  }\n\n  return (\n    <StyledQuestion className={classes} data-question-number={questionNumber} data-test-id=\"question\">\n      <QuestionHtml type=\"context\" html={context} hidden={hidePreambles} />\n      <QuestionHtml type=\"stimulus\" html={stimulus_html} hidden={hidePreambles} />\n      <QuestionHtml type=\"stem\" html={stem_html} hidden={hidePreambles} questionNumber={questionNumber} />\n      {props.children}\n\n      <AnswersTable\n        {...props}\n        onChangeAnswer={props.onChange}\n        hasCorrectAnswer={hasCorrectAnswer} />\n\n      {solution}\n      {props.displayFormats ? <FormatsListing formats={formats} /> : undefined}\n      {exerciseUid}\n    </StyledQuestion>\n  );\n}\n\ninterface QuestionHtmlProps {\n  html?: string;\n  type: string;\n  hidden: QuestionProps['hidePreambles'];\n  questionNumber?: QuestionProps['questionNumber'];\n}\n\nexport const QuestionHtml = (props: QuestionHtmlProps) => {\n  const { html = '', type, hidden, questionNumber } = props;\n  if (hidden === true || !(html.length > 0)) { return null; }\n\n  return (\n    <Content\n      html={html}\n      data-question-number={questionNumber}\n      className={`question-${type}`}\n      block={true}\n    />\n  );\n};\n\nconst FormatsListing = ({ formats = [] }: { formats: ExerciseQuestionData['formats'] }) => {\n  return (\n    <div className=\"formats-listing\">\n      <div className=\"header\">Formats:</div>\n      {formats.map((format, i) => <span key={i}>{format}</span>)}\n    </div>\n  );\n};\n","import { colors } from \"../theme\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  background-color: ${colors.button.background};\n  color: ${colors.palette.white};\n  font-size: 1.6rem;\n  font-weight: 700;\n  line-height: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 4rem;\n  padding: 0 3rem;\n  border: 0;\n  border-radius: 5px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:not([disabled]) {\n    cursor: pointer;\n    &:hover {\n      background: ${colors.button.backgroundHover}\n    }\n    &:active {\n      background: ${colors.button.backgroundActive}\n    }\n  }\n  &:disabled {\n    opacity: 0.4;\n  }\n`;\n\ninterface ButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting?: never;\n  waitingText?: never;\n}\ninterface WaitingButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting: boolean;\n  waitingText: string;\n}\n\nconst Button = (props: ButtonProps | WaitingButtonProps) => {\n  const { disabled, isWaiting, waitingText, children, ...otherProps } = props;\n\n  return (\n    <StyledButton {...otherProps} disabled={isWaiting || disabled}>{(isWaiting && waitingText) || children}</StyledButton>\n  );\n}\n\nexport default Button;\n","import { MouseEventHandler, ReactNode } from 'react';\nimport { countWords } from '../utils';\nimport styled, { css } from 'styled-components';\nimport { colors, mixins } from '../theme';\nimport { AvailablePoints, ExerciseQuestionData } from 'src/types';\nimport { QuestionHtml } from './Question';\nimport Button from './Button';\nimport { StepCardFooter } from './StepCardFooter';\n\nexport interface FreeResponseProps {\n  readOnly: boolean;\n  wordLimit: number;\n  infoRowChildren?: ReactNode;\n  pointsChildren?: ReactNode;\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  cancelHandler: MouseEventHandler<HTMLButtonElement>;\n  saveHandler: MouseEventHandler<HTMLButtonElement>;\n  defaultValue: string;\n  isSubmitDisabled: boolean;\n  questionNumber: number,\n  question: ExerciseQuestionData,\n  availablePoints: AvailablePoints,\n  textHasChanged: boolean;\n  submitBtnLabel: string;\n}\n\nconst TextAreaErrorStyle = css`\n  background-color: #f5e9ea;\n`;\n\nconst StyledFreeResponse = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n  }\n`;\n\nconst SyledQuestionStem = styled.div`\n  font-size: 2rem;\n  line-height: 1.68em;\n  position: relative;\n`;\n\nconst InfoRow = styled.div<{ hasChildren: boolean }>`\n  margin: 8px 0;\n  display: flex;\n  justify-content: ${props => props.hasChildren ? 'space-between' : 'flex-end'};\n  line-height: 1.6rem;\n\n  .word-limit-error-info {\n    color: ${colors.palette.danger};\n  }\n\n  div > span {\n    font-size: 12px;\n    line-height: 16px;\n\n    + span {\n      margin-left: 1rem;\n    }\n  }\n\n  .last-submitted + * {\n    margin-top: 0.8rem;\n  }\n\n  color: ${colors.palette.neutralThin};\n`;\n\nexport const FreeResponseTextArea = styled.textarea<{ isOverWordLimit: boolean } & FreeResponseProps>`\n  display: block;\n  font-family: inherit;\n  font-size: 1.8rem;\n  line-height: 3rem;\n  width: 100%;\n  min-height: 10.5em;\n  line-height: 1.5em;\n  margin: 2.5rem 0 0 0;\n  padding: 0.5em;\n  border: 1px solid ${colors.palette.neutral};\n  color: ${colors.palette.neutralDark};\n  ${props => props.isOverWordLimit && TextAreaErrorStyle};\n  ${props => props.isOverWordLimit && css`\n    border: 2px solid ${colors.palette.danger};\n  `}\n  background-color: ${props => props.readOnly && colors.palette.neutralCool};\n`;\nFreeResponseTextArea.displayName = 'OSFreeResponseTextArea';\n\nconst RevertButton = (props: {\n  disabled: boolean\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button {...props}>\n    Cancel\n  </Button>\n);\n\n\nexport const FreeResponseInput = (props: FreeResponseProps) => {\n  const {\n    availablePoints,\n    cancelHandler,\n    defaultValue,\n    infoRowChildren,\n    isSubmitDisabled,\n    pointsChildren,\n    question,\n    questionNumber,\n    saveHandler,\n    submitBtnLabel,\n    textHasChanged,\n    wordLimit,\n  } = props;\n\n  const isOverWordLimit = countWords(defaultValue) > wordLimit;\n\n  const questionProps = {};\n  if (questionNumber) { questionProps['data-question-number'] = questionNumber; }\n\n  return (\n    <StyledFreeResponse data-test-id=\"student-free-response\">\n      <div className=\"step-card-body\">\n        <SyledQuestionStem {...questionProps}>\n          {question.stem_html &&\n            <QuestionHtml type=\"stem\" html={question.stem_html} hidden={false} />}\n        </SyledQuestionStem>\n        <FreeResponseTextArea\n          {...props}\n          isOverWordLimit={isOverWordLimit}\n          data-test-id=\"free-response-box\"\n          placeholder=\"Enter your response...\"\n          aria-label=\"question response text box\"\n        />\n        <InfoRow hasChildren={!!infoRowChildren}>\n          {infoRowChildren}\n          <div>\n            <span>{countWords(defaultValue)} words</span>\n            {isOverWordLimit && <span className=\"word-limit-error-info\">Maximum {wordLimit} words</span>}\n          </div>\n        </InfoRow>\n      </div>\n      <StepCardFooter>\n        <div className=\"points\">\n          <strong>Points: {availablePoints}</strong>\n          {pointsChildren}\n        </div>\n        <div className=\"controls\">\n          <RevertButton disabled={!textHasChanged} onClick={cancelHandler} />\n          <Button\n            data-test-id=\"submit-answer-btn\"\n            disabled={isSubmitDisabled || isOverWordLimit}\n            onClick={saveHandler}\n          >\n            {submitBtnLabel}\n          </Button>\n        </div>\n      </StepCardFooter>\n    </StyledFreeResponse>\n  );\n}\n\nFreeResponseInput.displayName = 'OSFreeResponse';\n","import { ReactNode } from \"react\";\nimport { breakpoints, colors, mixins } from \"../theme\";\nimport { AvailablePoints, Step } from \"../types\";\nimport styled from \"styled-components\";\nimport cn from \"classnames\";\n\nexport const InnerStepCard = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  min-height: 400px;\n  border-radius: 0.25rem;\n  margin: 0 auto 5rem auto;\n  border: 1px solid ${colors.palette.light};\n  border-radius: 0.25rem;\n  background-color: white;\n\n  ${breakpoints.desktop`\n    max-width: 1000px;\n    min-width: 750px;\n  `}\n`;\n\nexport const OuterStepCard = styled.div`\n  padding: 2rem;\n\n  ${breakpoints.tablet`\n    padding: 0;\n  `}\n`;\n\nconst StepCardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 24px;\n  background: ${colors.card.background};\n  font-size: 1.8rem;\n  line-height: 3rem;\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n\n  div.question-info {\n    font-weight: bold;\n\n    .ox-icon-lock {\n        margin-right: 1rem;\n    }\n  }\n\n  .num-questions, .points, .separator {\n      display: none;\n  }\n\n  .exercise-id, .separator {\n      font-weight: normal;\n  }\n\n  .separator {\n      margin: 0 1rem;\n  }\n\n  .exercise-id {\n      height: 28px; // Fix baseline issue\n  }\n\n  button {\n    color: ${colors.palette.gray};\n  }\n\n  .openstax-exercise-badges {\n      margin: 0;\n      line-height: 2rem;\n      svg {\n          display: block;\n          &:not(.interactive) {\n              margin: 0 0 0 6px !important;\n          }\n      }\n  }\n\n  ${breakpoints.desktop`\n      button.ox-icon-angle-left, button.ox-icon-angle-right {\n          display: none;\n      }\n      .separator {\n          display: inherit;\n      }\n  `}\n\n    /*\n    1. Show the arrows to move to previous and next question.\n    2. Show the number of questions.\n    3. Override box-shadow of icons when turned into a button.\n    */\n    ${breakpoints.tablet`\n        font-size: 1.6rem;\n        line-height: 2.5rem;\n\n        svg.ox-icon {\n            display: inherit;\n            margin: 0;\n        }\n        button.ox-icon-angle-left {\n            margin-right: ${breakpoints.margins.tablet};\n        }\n        button.ox-icon-angle-right {\n            margin-left: ${breakpoints.margins.tablet};\n        }\n        .openstax-exercise-badges svg {\n            display: none;\n        }\n        .num-questions, points {\n            display: inherit;\n        }\n\n        .exercise-id {\n            display: none;\n        }\n\n        button[class^='ox-icon-angle']:hover {\n            box-shadow: none;\n        }\n  `}\n\n  ${breakpoints.mobile`\n      font-size: 1.4rem;\n      line-height: 2rem;\n      padding: 10px 8px;\n\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n  `}\n`;\nStepCardHeader.displayName = 'StepCardHeader';\n\nconst StepCardQuestion = styled.div<{ unpadded?: boolean }>`\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n  }\n\n    & + div .step-card-body {\n        padding-top: 0;\n    }\n\n    &.exercise-context, &.exercise-stimulus, &.exercise-stem {\n        padding-bottom: 0;\n    }\n\n    ${breakpoints.only.mobile`\n        && .question-feedback {\n            margin-left: 0;\n\n           .arrow { margin-left: 12px; }\n        }\n    `}\n\n    .reading-step & {\n        padding: 0;\n    }\n\n    ${breakpoints.desktop`\n        .video-step &, .interactive-step & {\n            .openstax-exercise-badges {\n              margin-right: 3.8rem;\n            }\n        }\n    `}\n\n    ${breakpoints.mobile`\n        .openstax-exercise-badges svg {\n            margin-right: ${breakpoints.margins.mobile};\n        }\n    `}\n\n    &&& {\n        .openstax-has-html .splash .frame-wrapper { margin-top: 0; }\n    }\n`;\n\ninterface SharedProps {\n  questionNumber: number;\n  numberOfQuestions: number;\n  leftHeaderChildren?: ReactNode;\n  rightHeaderChildren?: ReactNode;\n  headerTitleChildren?: ReactNode;\n}\n\nexport interface StepCardProps extends SharedProps {\n  unpadded: boolean;\n  className?: string;\n  children?: ReactNode;\n  stepType: Step['type'];\n  availablePoints: AvailablePoints;\n  questionId?: string;\n  multipartBadge?: ReactNode;\n  isHomework: boolean;\n}\n\nconst StepCard = ({\n  questionNumber,\n  numberOfQuestions,\n  stepType,\n  isHomework,\n  availablePoints,\n  unpadded, // currently does nothing; may need to restore if this causes tutor stepcard regression\n  className,\n  children,\n  questionId,\n  multipartBadge,\n  leftHeaderChildren,\n  rightHeaderChildren,\n  headerTitleChildren,\n  ...otherProps }: StepCardProps) => {\n  return (\n    <OuterStepCard {...otherProps}>\n      {multipartBadge}\n      <InnerStepCard className={className}>\n        {questionNumber && isHomework && stepType === 'exercise' &&\n          <StepCardHeader>\n            <div>\n              {leftHeaderChildren}\n              <div className=\"question-info\">\n                {headerTitleChildren}\n                <span>Question {questionNumber}</span>\n                <span className=\"num-questions\">&nbsp;/ {numberOfQuestions}</span>\n                <span className=\"separator\">|</span>\n                <span className=\"question-id\">ID: {questionId}</span>\n              </div>\n            </div>\n            <div>\n              <div className=\"points\">{availablePoints} Points</div>\n              {rightHeaderChildren}\n            </div>\n          </StepCardHeader>\n        }\n        <StepCardQuestion unpadded={unpadded}>{children}</StepCardQuestion>\n      </InnerStepCard>\n    </OuterStepCard>\n  )\n};\nStepCard.displayName = 'OSStepCard';\n\nexport interface TaskStepCardProps extends SharedProps {\n  className?: string;\n  children?: ReactNode;\n  step: Step;\n  questionNumber: number;\n  numberOfQuestions: number;\n}\n\nconst TaskStepCard = ({\n  step,\n  questionNumber,\n  numberOfQuestions,\n  children,\n  className,\n  ...otherProps\n}: TaskStepCardProps) =>\n(<StepCard {...otherProps}\n  unpadded={true}\n  questionNumber={questionNumber}\n  numberOfQuestions={numberOfQuestions}\n  stepType={step.type}\n  isHomework={step.task.type === 'homework'}\n  data-task-step-id={step.id}\n  availablePoints={step.available_points}\n  className={cn(`${step.type}-step`, className)}\n  questionId={step.uid}\n>\n  {children}\n</StepCard>);\n\nTaskStepCard.displayName = 'OSTaskStepCard';\n\nexport { StepCard, TaskStepCard };\n","import { AvailablePoints, ID, ExerciseQuestionData, Task } from \"../types\";\nimport Button from \"./Button\";\nimport { Content } from \"./Content\";\nimport { Question } from './Question';\nimport { StepCardFooter } from \"./StepCardFooter\";\n\nexport interface ExerciseQuestionProps {\n  task?: Task;\n  question: ExerciseQuestionData;\n  answer_id_order?: ID[];\n  questionNumber: number;\n  choicesEnabled: boolean;\n  hasMultipleAttempts: boolean;\n  onAnswerChange: () => void;\n  onAnswerSave: () => void;\n  onNextStep: () => void;\n  feedback_html: string;\n  correct_answer_feedback_html: string;\n  is_completed: boolean;\n  correct_answer_id: ID;\n  incorrectAnswerId: ID;\n  answerId?: ID;\n  attempts_remaining: number;\n  published_comments?: string;\n  detailedSolution?: string;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  canUpdateCurrentStep: boolean;\n  attempt_number: number;\n  apiIsPending: boolean;\n  displaySolution: boolean;\n  available_points: AvailablePoints;\n  exercise_uid: string;\n  free_response?: string;\n}\n\nconst AttemptsRemaining = ({ count }: { count: number }) => {\n  return (\n    <div>{count} attempt{count === 1 ? '' : 's'} left</div>\n  );\n}\n\nconst PublishedComments = ({ published_comments }: { published_comments?: string }) => {\n  if (!published_comments) { return null; }\n\n  return (\n    <div>\n      <strong>Feedback:</strong> {published_comments}\n    </div>\n  );\n}\n\nconst SaveButton = (props: {\n  disabled: boolean, isWaiting: boolean, attempt_number: number\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button\n    {...props}\n    waitingText=\"Saving…\"\n    isWaiting={props.isWaiting}\n    data-test-id=\"submit-answer-btn\"\n  >\n    {props.attempt_number == 0 ? 'Submit' : 'Re-submit'}\n  </Button>\n);\n\nconst NextButton = (props: {\n  canUpdateCurrentStep: boolean,\n  onNextStep: ExerciseQuestionProps['onNextStep']\n}) => {\n  return (\n    <Button onClick={props.onNextStep} data-test-id=\"continue-btn\">\n      {props.canUpdateCurrentStep ? 'Continue' : 'Next'}\n    </Button>\n  );\n}\n\nconst FreeResponseReview = ({ free_response }: Pick<ExerciseQuestionProps, \"free_response\">) => {\n  if (!free_response) { return null; }\n  return (\n    <>\n      <div className=\"free-response\">{free_response}</div>\n    </>\n  );\n}\n\nexport const ExerciseQuestion = (props: ExerciseQuestionProps) => {\n  const {\n    question, task, answer_id_order, onAnswerChange, feedback_html, correct_answer_feedback_html,\n    is_completed, correct_answer_id, incorrectAnswerId, choicesEnabled, questionNumber,\n    answerId, hasMultipleAttempts, attempts_remaining, published_comments, detailedSolution,\n    canAnswer, needsSaved, attempt_number, apiIsPending, onAnswerSave, onNextStep, canUpdateCurrentStep,\n    displaySolution, available_points, free_response\n  } = props;\n\n  return (\n    <div data-test-id=\"student-exercise-question\">\n      <Question\n        task={task}\n        question={question}\n        answerIdOrder={answer_id_order}\n        choicesEnabled={choicesEnabled}\n        answer_id={answerId}\n        questionNumber={questionNumber}\n        onChange={onAnswerChange}\n        feedback_html={feedback_html}\n        correct_answer_feedback_html={correct_answer_feedback_html}\n        correct_answer_id={is_completed ? correct_answer_id : null}\n        incorrectAnswerId={incorrectAnswerId}\n        className=\"step-card-body\"\n        hideAnswers={false}\n        displayFormats={false}\n        displaySolution={displaySolution}\n      >\n        <FreeResponseReview free_response={free_response} />\n      </Question>\n      <StepCardFooter className=\"step-card-footer\">\n        <div className=\"points\">\n          <strong>Points: {available_points}</strong>\n          <span className=\"attempts-left\">\n            {hasMultipleAttempts &&\n              attempts_remaining > 0 &&\n              <AttemptsRemaining count={attempts_remaining} />}\n          </span>\n          <PublishedComments published_comments={published_comments} />\n          {detailedSolution && (<div><strong>Detailed solution:</strong> <Content html={detailedSolution} /></div>)}\n        </div>\n        <div className=\"controls\">\n          {canAnswer && needsSaved ?\n            <SaveButton\n              disabled={apiIsPending || !answerId}\n              isWaiting={apiIsPending}\n              attempt_number={attempt_number}\n              onClick={onAnswerSave}\n            /> :\n            <NextButton onNextStep={onNextStep} canUpdateCurrentStep={canUpdateCurrentStep} />}\n        </div>\n      </StepCardFooter>\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport { Content } from './Content';\nimport { TaskStepCard } from './Card';\nimport { AvailablePoints, ExerciseData, ID, Step } from 'src/types';\nimport { ExerciseQuestion } from './ExerciseQuestion';\n\nconst StyledTaskStepCard = styled(TaskStepCard)`\n  font-size: 1.8rem;\n  line-height: 3rem;\n`;\n\nconst Preamble = ({ exercise }: { exercise: ExerciseData }) => {\n  return (\n    <>\n      {exercise.context &&\n        <Content className=\"step-card-body exercise-context\"\n          block html={exercise.context} />}\n\n      {exercise.stimulus_html &&\n        <Content className=\"step-card-body exercise-stimulus\"\n          block html={exercise.stimulus_html} />}\n    </>\n  );\n};\n\nexport interface ExerciseProps {\n  exercise: ExerciseData;\n  step: Step;\n  numberOfQuestions: number;\n  questionNumber: number;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  answer_id_order?: ID[];\n  hasMultipleAttempts: boolean;\n  onAnswerChange: () => void;\n  onAnswerSave: () => void;\n  onNextStep: () => void;\n  canUpdateCurrentStep: boolean;\n  attempt_number: number;\n  apiIsPending: boolean;\n  available_points: AvailablePoints;\n}\n\nexport const Exercise = ({\n  numberOfQuestions, questionNumber, step, exercise, canAnswer, needsSaved, ...props\n}: ExerciseProps) => (\n  <StyledTaskStepCard\n    step={step}\n    questionNumber={questionNumber}\n    numberOfQuestions={numberOfQuestions}\n  >\n    <Preamble exercise={exercise} />\n\n    {exercise.questions.map((q) =>\n      <ExerciseQuestion\n        {...props}\n        {...step}\n        exercise_uid={exercise.uid}\n        key={q.id}\n        question={q}\n        questionNumber={questionNumber}\n        choicesEnabled={canAnswer}\n        canAnswer={canAnswer}\n        needsSaved={needsSaved}\n        canUpdateCurrentStep={canAnswer}\n        displaySolution={true}\n        answerId={step.answer_id}\n      />\n    )}\n  </StyledTaskStepCard>\n);\n"],"names":["ALPHABET","isAnswerIncorrect","answer","incorrectAnswerId","id","countWords","text","words","trim","match","length","_ref","html","component","block","_ref$block","props","undefined","React","cloneElement","_jsx","_extends","dangerouslySetInnerHTML","__html","SimpleFeedback","children","Content","contentRenderer","className","classnames","Feedback","wrapperClasses","position","_jsxs","Answer","body","feedback","selectedCount","onChangeAnswer","radioBox","type","iter","disabled","onKeyPress","qid","correctAnswerId","hasCorrectAnswer","answered_count","show_all_feedback","chosenAnswer","Boolean","find","a","isAnswerChecked","isCorrect","correctness","isAnswerCorrect","isIncorrect","correctIncorrectIcon","cn","isChecked","ariaLabel","checked","name","onChange","feedback_html","percent","selected_count","Math","round","green","red","content_html","_Fragment","htmlFor","onClick","role","classes","displayName","_templateObject","_templateObject2","idCounter","question","correct_answer_id","correct_answer_feedback_html","answerIdOrder","instructions","hideAnswers","idOrder","answer_id","_props$type","choicesEnabled","_props$show_all_feedb","answersHtml","answers","slice","sort","b","indexOf","map","i","answerProps","Object","assign","key","questionAnswerProps","push","index","forEach","item","spliceIndex","splice","palette","danger","darkRed","lightRed","lightGreen","darkGreen","paleYellow","teal","blue","lightBlue","neutralLightBlue","tangerine","gray","darkGray","pale","light","white","neutralLightest","neutralCool","neutralBright","neutralLighter","neutralLight","neutralMedium","neutral","neutralThin","neutralDark","neutralDarker","black","orange","colors","color","correct","background","incorrect","hover","label","colorHover","colorSelected","arrowOuterColor","popover","borderColor","card","button","backgroundHover","backgroundActive","freeResponse","css","_taggedTemplateLiteralLoose","apply","call","arguments","mixins","_templateObject5","answerColor","values","answerChecked","answerCorrect","answerIncorrect","answerHover","_templateObject7","answerCorrectText","_templateObject8","answerCorrectAnswer","resetText","stepCardPadding","breakpoints","StyledQuestion","styled","div","Question","exerciseUid","solution","exercise_uid","questionNumber","context","task","hidePreambles","stem_html","collaborator_solutions","_question$collaborato","formats","stimulus_html","is_deleted","_question$collaborato2","displaySolution","s","hasSolution","join","QuestionHtml","hidden","AnswersTable","displayFormats","FormatsListing","_props$html","_ref$formats","format","StyledButton","Button","isWaiting","waitingText","otherProps","_excluded","StepCardFooter","TextAreaErrorStyle","StyledFreeResponse","SyledQuestionStem","_templateObject3","InfoRow","_templateObject4","hasChildren","FreeResponseTextArea","textarea","isOverWordLimit","_templateObject6","readOnly","RevertButton","FreeResponseInput","availablePoints","cancelHandler","defaultValue","infoRowChildren","isSubmitDisabled","pointsChildren","saveHandler","submitBtnLabel","textHasChanged","wordLimit","questionProps","placeholder","InnerStepCard","OuterStepCard","StepCardHeader","StepCardQuestion","BREAKPOINTS","_templateObject10","_templateObject11","_templateObject12","StepCard","numberOfQuestions","stepType","isHomework","unpadded","questionId","multipartBadge","leftHeaderChildren","rightHeaderChildren","headerTitleChildren","_objectWithoutPropertiesLoose","TaskStepCard","step","_ref2","_excluded2","available_points","uid","count","PublishedComments","published_comments","SaveButton","attempt_number","NextButton","onNextStep","canUpdateCurrentStep","FreeResponseReview","_ref3","free_response","ExerciseQuestion","answerId","hasMultipleAttempts","attempts_remaining","detailedSolution","canAnswer","needsSaved","apiIsPending","onAnswerSave","answer_id_order","onAnswerChange","is_completed","AttemptsRemaining","StyledTaskStepCard","Preamble","exercise","Exercise","questions","q","_createElement"],"mappings":"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"}