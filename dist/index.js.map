{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/theme.ts","../src/hooks/useTypesetMath.ts","../src/components/Content.tsx","../src/components/Feedback.tsx","../src/components/Answer.tsx","../src/constants.ts","../src/components/AnswersTable.tsx","../src/components/Card.tsx","../src/components/StepCardFooter.tsx","../src/components/Button.tsx","../src/components/CompletionStatus.tsx","../src/components/Question.tsx","../src/components/FreeResponseInput.tsx","../src/components/ExerciseQuestion.tsx","../src/helpers/mathjax.ts","../src/components/ExerciseToolbar.tsx","../src/components/ExerciseHeaderIcons.tsx","../src/components/Exercise/styles.ts","../src/components/Exercise/index.tsx","../src/assets/flag.tsx","../src/components/ProgressBar.tsx","../src/components/Loader.tsx","../src/components/IncludeRemoveQuestion/styles.ts","../src/components/ExercisePreview.tsx","../src/components/IncludeRemoveQuestion/index.tsx"],"sourcesContent":["import { Answer, ID } from '../src/types';\n\nexport const ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nconst MAX_CORRECTNESS = '1.0';\n\nexport const isAnswerCorrect = function(answer: Answer, correctAnswerId?: ID | null) {\n  // if answer does not have an id, check the isCorrect property.\n  if (!(answer.id || correctAnswerId)) {\n    return answer.isCorrect;\n  }\n  let isCorrect = answer.id === correctAnswerId;\n  if (answer.correctness != null) { isCorrect = (answer.correctness === MAX_CORRECTNESS); }\n\n  return isCorrect;\n};\n\nexport const isAnswerIncorrect = (answer: Answer, incorrectAnswerId?: ID) =>\n  // Allow multiple attempts to show incorrectness without the correct_answer_id\n  answer.id === incorrectAnswerId;\n\nexport const isAnswerChecked = (answer: Answer, answerId?: ID) =>\n   answer.id == answerId;\n\nexport function countWords(text: string) {\n  const trimmedText = text.trim();\n  //https://css-tricks.com/build-word-counter-app/\n  const words = trimmedText.match(/\\b[-?(\\w+)?]+\\b/gi);\n  if(!words) return 0;\n  return words.length;\n}\n\nexport const numberfyId = (id: ID) => typeof id === 'string' ? parseInt(id, 10) : id;\n","import { css } from 'styled-components';\n\nconst palette = {\n  red: \"#ca2026\",\n  danger: \"#c2002f\",\n  darkRed: \"#c22032\",\n  lightRed: \"#e298a0\",\n  green: \"#77af42\",\n  lightGreen: \"#8bc753\",\n  darkGreen: \"#63a524\",\n  paleYellow: \"#ffffbb\",\n  teal: \"#0dc0de\",\n  blue: \"#007da4\",\n  mediumBlue: \"#026AA1\",\n  lightBlue: \"#34bdd8\",\n  neutralLightBlue: \"#0dc0dc\",\n  tangerine: \"#ffbd3e\",\n  gray: \"#5e5e5e\",\n  darkGray: \"#757575\",\n  pale: \"#d5d5d5\",\n  light: \"#e4e4e4\",\n  white: \"#ffffff\",\n  neutralLightest: \"#f9f9f9\", // nearly white\n  neutralCool: \"#f6f7f8\", // cool bright gray\n  neutralBright: \"#f5f5f5\", // bright gray\n  neutralLighter: \"#f1f1f1\", // light gray\n  neutralLight: \"#e5e5e5\", // light gray\n  neutralMedium: \"#a0a0a0\", // light gray\n  neutral: \"#818181\", // gray\n  neutralThin: \"#6f6f6f\", // medium gray\n  neutralDark: \"#5f6163\", // dark gray\n  neutralFeedback: \"#555\", // another dark gray\n  neutralDarker: \"#424242\", // very dark gray\n  black: \"#000000\",\n  orange: \"#D4450C\"\n};\n\nexport const colors = {\n  palette: palette,\n  answer: {\n    neutral: palette.neutralThin,\n    hover: '#026AA1',\n    checked: '#026AA1',\n    correct: '#0D7741',\n    incorrect: '#C22032',\n    neutralDark: '#5f6163'\n  },\n  popover: {\n    arrowOuterColor: \"rgba(0, 0, 0, 0.25)\",\n    borderColor: \"rgba(0, 0, 0, 0.2)\",\n  },\n  card: {\n    header: {\n     background: \"#daf3f8\"\n    },\n    body: {\n      background: \"#fdfdfd\"\n    }\n  },\n  button: {\n    background: palette.orange,\n    backgroundHover: \"#E74B0D\",\n    backgroundActive: \"#C5400B\"\n  },\n  freeResponse: {\n    color: palette.neutralDarker,\n    background:palette.neutralLighter,\n  },\n};\n\nexport const layouts = {\n  answer: {\n    verticalSpacing: \"1rem\",\n    horizontalSpacing: \"1rem\",\n    horizontalBuffer: \"2.5rem\",\n    bubbleSize: \"3.6rem\",\n    labelSpacing: \"6.5rem\",\n    feedback: {\n      popover: {\n        horizontalSpacing: \"1.1rem\",\n        verticalSpacing: \"0.9rem\",\n        maxWidth: \"370px\",\n      },\n    },\n  },\n  popover: {\n    arrow: {\n      width: \"16px\",\n      height: \"8px\",\n      edgeDistance: \"9px\",\n    },\n    horizontalSpacing: \"0.8rem\",\n    verticalSpacing: \"1rem\",\n    horizontalBuffer: \"4rem\",\n    borderWidth: \"1px\",\n    maxWidth: \"325px\",\n  },\n  card: {\n    spacing: '2rem'\n  }\n};\n\nexport const BREAKPOINTS = {\n  mobile: 600,\n  tablet: 999,\n  desktop: 1000,\n  large: 1600,\n};\n\nexport const breakpoints = {\n  mobile(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n  },\n  tablet(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.tablet}px) { ${css(...args)} }`;\n  },\n  desktop(...args: Parameters<typeof css>) {\n    return css`@media(min-width: ${BREAKPOINTS.desktop}px) { ${css(...args)} }`;\n  },\n  only: {\n    mobile(...args: Parameters<typeof css>) {\n      return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n    },\n  },\n  margins: {\n    mobile: '8px',\n    tablet: '24px',\n  },\n};\n\nexport const transitions = {\n  answer: \"0.1s ease-in-out\",\n}\n\nexport const mixins = {\n  answer: () => css`\n    .answer-label {\n      display: inline-flex;\n    }\n    color: ${palette.neutralDarker};\n    .answer-letter-wrapper::before {\n      width: ${layouts.answer.bubbleSize};\n      height: ${layouts.answer.bubbleSize};\n      min-width: ${layouts.answer.bubbleSize};\n      min-height: ${layouts.answer.bubbleSize};\n      border-radius: calc(${layouts.answer.bubbleSize} / 2);\n      border-width: 2px;\n      border-style: solid;\n      border-color: #c6c6c6;\n      color: ${colors.answer.neutral};\n      transition: color ${transitions.answer}, border-color ${transitions.answer}, background-color ${transitions.answer};\n      background-color: ${colors.palette.white};\n      font-family: \"Neue Helvetica W01\", Helvetica, Arial, sans-serif;\n      box-sizing: border-box;\n      font-weight: normal;\n    }\n  `,\n  answerColor: (\n    color: string, invertBubble = false\n  ) => css`\n    .answer-letter-wrapper::before {\n      color: ${invertBubble ? '#fff' : color};\n      border-color: ${color};\n      ${invertBubble ? `background-color: ${color};` : null}\n    }\n  `,\n  answerChecked: () => mixins.answerColor(colors.answer.checked, true),\n  answerCorrect: (checked?: boolean) => mixins.answerColor(colors.answer.correct, checked),\n  answerIncorrect: (checked?: boolean) => mixins.answerColor(colors.answer.incorrect, checked),\n  answerHover: () => css`\n    ${mixins.answerColor(colors.answer.hover)};\n    font-weight: bold;\n  `,\n  answerCorrectAnswer: () => mixins.answerColor(colors.answer.correct, false),\n  resetText: () => css`\n    font-family:  \"Neue Helvetica W01\", Helvetica, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.6;\n    text-align: left;\n    text-align: start;\n    text-decoration: none;\n    text-shadow: none;\n    text-transform: none;\n    letter-spacing: normal;\n    word-break: normal;\n    word-spacing: normal;\n    white-space: normal;\n    line-break: auto;\n  `,\n  stepCardPadding: () => css`\n    padding: 48px 140px;\n\n    ${breakpoints.tablet`\n      padding: ${breakpoints.margins.tablet} ${breakpoints.margins.tablet};\n    `}\n\n    ${breakpoints.mobile`\n      padding: calc(${breakpoints.margins.mobile} * 2) ${breakpoints.margins.mobile};\n    `}\n  `,\n  popover: () => css`\n    ${mixins.resetText()}\n\n    z-index: 1;\n    position: relative;\n    border: ${layouts.popover.borderWidth} solid ${colors.popover.borderColor};\n    background-color: ${colors.palette.white};\n    background-clip: padding-box;\n    max-width: ${layouts.popover.maxWidth};\n    margin: calc(${layouts.popover.arrow.height} - 14px) 0 ${layouts.answer.horizontalSpacing} 8px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n    color: ${colors.palette.neutralThin};\n    font-size: calc(1.4rem * var(--content-text-scale));\n\n    .arrow {\n      position: absolute;\n      display: block;\n      width: ${layouts.popover.arrow.width};\n      height: ${layouts.popover.arrow.height};\n      margin-left: ${layouts.popover.arrow.edgeDistance};\n      top: calc(${layouts.popover.arrow.height} * -1);\n\n      &::before,\n      &::after {\n        position: absolute;\n        display: block;\n        content: \"\";\n        border-color: transparent;\n        border-style: solid;\n        border-width: 0 calc(${layouts.popover.arrow.width} / 2) ${layouts.popover.arrow.height} calc(${layouts.popover.arrow.width} / 2);\n      }\n      &::before {\n        top: 0;\n        border-bottom-color: ${colors.popover.borderColor};\n      }\n      &::after {\n        top: ${layouts.popover.borderWidth};\n        border-bottom-color: ${colors.palette.white};\n      }\n    }\n\n    &.right {\n      right: calc(-${layouts.popover.arrow.edgeDistance} - ${layouts.popover.borderWidth});\n      .arrow { right: ${layouts.popover.arrow.edgeDistance}; }\n    }\n\n\n    > .content {\n      padding: ${layouts.popover.verticalSpacing} ${layouts.popover.horizontalSpacing};\n    }\n  `,\n  visuallyHidden: () => css`\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  `\n};\n\nconst theme = {\n  colors: colors,\n  layouts: layouts,\n  transitions: transitions,\n  breakpoints: breakpoints,\n};\n\nexport default theme;\n","import React from \"react\";\n\nexport const TypesetMathContext = React.createContext<() => void>(() => { throw new Error('context not initialized') });\nexport const useTypesetMath = () => React.useContext(TypesetMathContext);\n","import React from \"react\";\nimport { useTypesetMath } from \"../hooks/useTypesetMath\";\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\ntype ComponentType = keyof JSX.IntrinsicElements | React.JSXElementConstructor<any>;\n\nexport interface ContentProps<T extends ComponentType | undefined> {\n  className?: string;\n  component?: T extends undefined ? undefined :\n    T extends ComponentType ? React.ReactComponentElement<T>:\n    never;\n  html: string;\n  block?: boolean;\n}\n\nexport const Content = (<T extends ComponentType | undefined>(\n  {html, component, block = false, ...props}: ContentProps<T>\n) => {\n  const typesetMath = useTypesetMath();\n\n  React.useEffect(() => {\n    typesetMath();\n  }, [typesetMath, html])\n\n  if (component !== undefined) {\n    return React.cloneElement(component, {html, ...props});\n  }\n  if (block) {\n    return <div dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  } else {\n    return <span dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  }\n});\n","import classnames from 'classnames';\nimport { Content } from './Content';\n\ninterface FeedbackProps {\n  position?: 'top' | 'bottom' | 'left' | 'right';\n  children: string;\n  className?: string;\n  contentRenderer?: JSX.Element;\n  id: string;\n}\n\nconst SimpleFeedback = (props: Pick<FeedbackProps, 'children' | 'className' | 'contentRenderer'>) => (\n  <aside>\n    <Content\n      component={props.contentRenderer}\n      className={classnames('question-feedback-content', 'has-html', props.className)}\n      html={props.children}\n      block={true} />\n  </aside>\n);\n\nconst Feedback = ({ id, ...props }: FeedbackProps) => {\n  const position = props.position || 'bottom';\n  const wrapperClasses = classnames('question-feedback', position);\n\n  return (\n    <aside id={id} className={wrapperClasses}>\n      <div className=\"arrow\" aria-label=\"Answer Feedback\" />\n      <SimpleFeedback {...props}>\n        {props.children}\n      </SimpleFeedback>\n    </aside>\n  );\n};\n\nexport { Feedback, SimpleFeedback };\n","import cn from 'classnames';\nimport { ReactNode } from 'react';\nimport { ALPHABET, isAnswerChecked, isAnswerCorrect, isAnswerIncorrect } from '../utils';\nimport { Answer as AnswerType, ID } from '../types';\nimport { Content } from './Content';\nimport { SimpleFeedback } from './Feedback';\nimport styled from 'styled-components';\nimport { colors } from '../theme';\n\nconst StyledAnswerIndicator = styled.div<{ state: boolean }>`\n  color: ${props => props.state ? colors.answer.correct : colors.answer.incorrect};\n  text-transform: uppercase;\n  font-size: calc(1.1rem * var(--content-text-scale));\n  font-weight: bold;\n`;\n\n// Annoyingly, sometimes the incorrect answer is only signaled via hasCorrectAnswer and isSelected (not isIncorrect)\nconst AnswerIndicator = (\n  { hasCorrectAnswer, isCorrect, isIncorrect, isSelected }: {\n    hasCorrectAnswer?:boolean; isCorrect?: boolean; isIncorrect?: boolean; isSelected?: boolean\n  }\n) => {\n  if (!isCorrect && !isIncorrect && (!isSelected || !hasCorrectAnswer)) { return null; }\n\n  const text = `${isCorrect ? 'Correct' : 'Incorrect'} Answer`;\n\n  return <StyledAnswerIndicator state={!!isCorrect}>\n    <span>{text}</span>\n  </StyledAnswerIndicator>;\n};\n\nexport interface AnswerProps {\n  answer: AnswerType;\n  iter: number;\n  qid: ID;\n  type: 'teacher-review' | 'teacher-preview' | 'student' | 'student-mpp';\n  hasCorrectAnswer?: boolean;\n  onChangeAnswer?: (answer: AnswerType) => void;\n  disabled: boolean;\n  answerId?: ID;\n  correctAnswerId?: ID | null;\n  incorrectAnswerId?: ID;\n  onKeyPress?: () => void;\n  answered_count?: number;\n  correctIncorrectIcon?: ReactNode,\n  radioBox?: ReactNode;\n  contentRenderer?: JSX.Element;\n  labelAnswers?: boolean;\n  show_all_feedback?: boolean;\n  tableFeedbackEnabled?: boolean;\n  feedbackId?: string;\n}\n\ntype AnswerAnswerProps = Pick<\n  AnswerBodyProps,\n  'answer' |\n  'contentRenderer' |\n  'labelAnswers' |\n  'show_all_feedback' |\n  'tableFeedbackEnabled' |\n  'hasCorrectAnswer' |\n  'isCorrect' |\n  'isIncorrect' |\n  'isSelected'\n>;\n\n// labelAnswers defaults to true, must be explicitly false to disable\nconst AnswerAnswer = (props: AnswerAnswerProps) => {\n  const {\n    answer: { content_html, feedback_html },\n    contentRenderer,\n    labelAnswers,\n    show_all_feedback,\n    tableFeedbackEnabled,\n    hasCorrectAnswer,\n    isCorrect,\n    isIncorrect,\n    isSelected,\n  } = props;\n  return (\n    <div\n      className=\"answer-answer\"\n      role=\"status\"\n      aria-live=\"polite\"\n      aria-atomic=\"true\"\n    >\n      {labelAnswers !== false && <AnswerIndicator hasCorrectAnswer={hasCorrectAnswer} isCorrect={isCorrect}\n                                                  isIncorrect={isIncorrect} isSelected={isSelected} />}\n      <Content className=\"answer-content\" component={contentRenderer} html={content_html} />\n      {show_all_feedback && feedback_html && !tableFeedbackEnabled &&\n        <SimpleFeedback key=\"question-mc-feedback\" contentRenderer={contentRenderer}>\n          {feedback_html}\n        </SimpleFeedback>}\n    </div>\n  )\n}\n\ninterface AnswerBodyProps extends AnswerProps {\n  isCorrect?: boolean;\n  isSelected?: boolean;\n  isIncorrect?: boolean;\n  labelAnswers?: boolean;\n}\n\nconst TeacherReview = (props: AnswerBodyProps) => {\n  const {\n    answer,\n    answered_count,\n    isCorrect,\n    contentRenderer,\n    iter,\n    show_all_feedback,\n    tableFeedbackEnabled,\n  } = props;\n  const percent = answer.selected_count && answered_count\n    ? Math.round((answer.selected_count / answered_count) * 100)\n    : 0;\n  return (\n    <div className=\"review-wrapper\">\n      <div className={cn('review-count', { 'green': isCorrect, 'red': !isCorrect })}>\n        <span\n          className=\"selected-count\"\n          data-percent={`${percent}`}\n        >\n          {answer.selected_count}\n        </span>\n        <span className={cn('letter', { 'green': isCorrect, 'red': !isCorrect })}>\n          {ALPHABET[iter]}\n        </span>\n      </div>\n      <AnswerAnswer\n        answer={answer}\n        contentRenderer={contentRenderer}\n        show_all_feedback={show_all_feedback}\n        tableFeedbackEnabled={tableFeedbackEnabled} />\n    </div>\n  );\n}\n\nconst AnswerChoice = (props: AnswerBodyProps) => {\n  const {\n    type,\n    iter,\n    answer,\n    disabled,\n    onKeyPress,\n    qid,\n    contentRenderer,\n    correctIncorrectIcon,\n    feedbackId,\n    isSelected,\n    isCorrect,\n    isIncorrect,\n    hasCorrectAnswer,\n    show_all_feedback,\n    tableFeedbackEnabled,\n    labelAnswers = true,\n  } = props;\n  const ariaLabel = `${isSelected ? 'Selected ' : ''}Choice ${ALPHABET[iter]}:`;\n  let onChangeAnswer: AnswerProps['onChangeAnswer'];\n\n  const onChange = () => onChangeAnswer && onChangeAnswer(answer);\n\n  if (!hasCorrectAnswer\n    && (type !== 'teacher-review')\n    && (type !== 'teacher-preview')\n    && (type !== 'student-mpp')) {\n    ({ onChangeAnswer } = props);\n  }\n\n  return <>\n    {type === 'teacher-preview' &&\n      <div className=\"correct-incorrect\">\n        {isCorrect && correctIncorrectIcon}\n      </div>}\n    <input\n      type=\"radio\"\n      className=\"answer-input-box\"\n      checked={isSelected}\n      id={`${qid}-option-${iter}`}\n      name={`${qid}-options`}\n      onChange={onChange}\n      disabled={disabled || !onChangeAnswer}\n      aria-details={feedbackId}\n    />\n    <label\n      onKeyPress={onKeyPress}\n      htmlFor={`${qid}-option-${iter}`}\n      className=\"answer-label\">\n      <span\n        className=\"answer-letter-wrapper\"\n        aria-label={ariaLabel}\n        data-answer-choice={ALPHABET[iter]}\n        data-test-id={`answer-choice-${ALPHABET[iter]}`}\n      >\n      </span>\n      <AnswerAnswer\n        answer={answer}\n        contentRenderer={contentRenderer}\n        labelAnswers={labelAnswers}\n        show_all_feedback={show_all_feedback}\n        tableFeedbackEnabled={tableFeedbackEnabled}\n        hasCorrectAnswer={hasCorrectAnswer}\n        isCorrect={isCorrect}\n        isIncorrect={isIncorrect}\n        isSelected={isSelected}\n        />\n    </label>\n  </>\n}\n\nconst AnswerBody = (props: AnswerBodyProps) => {\n  return props.type === 'teacher-review'\n    ? <TeacherReview {...props} />\n    : <AnswerChoice {...props} />\n}\n\nexport const Answer = (props: AnswerProps) => {\n  const {\n    type,\n    answer,\n    disabled,\n    answerId,\n    correctAnswerId,\n    incorrectAnswerId,\n  } = props;\n\n  const isChecked = isAnswerChecked(answer, answerId);\n  const isCorrect = isAnswerCorrect(answer, correctAnswerId);\n  const isIncorrect = isAnswerIncorrect(answer, incorrectAnswerId);\n  // When rendering a previous response, we can determine if it was this answer.\n  // If there is no incorrectAnswerId, that means only a correct answer is present, check isCorrect.\n  // If an incorrectAnswerId is present (there is only ever one, if multiple attempts are enabled,\n  // it is the latest one) checking isIncorrect works because incorrectAnswerId is only set for\n  // a missed attempt, meaning if an attempt is missed and then successfully re-attempted,\n  // incorrectAnswerId will be empty.\n  const isPreviousResponse = answerId === undefined && (!incorrectAnswerId && isCorrect || isIncorrect);\n\n  const isSelected = isChecked || isPreviousResponse;\n  const classes = cn('answers-answer', {\n    'disabled': disabled,\n    'answer-selected': isSelected,\n    'answer-correct': isCorrect && type !== 'student-mpp',\n    'answer-incorrect': incorrectAnswerId && isAnswerIncorrect(answer, incorrectAnswerId),\n  });\n\n  return (\n    <div className=\"openstax-answer\">\n      <section className={classes}>\n        <AnswerBody\n          {...props}\n          isCorrect={isCorrect}\n          isSelected={isSelected}\n          isIncorrect={isIncorrect} />\n      </section>\n    </div>\n  );\n}\nAnswer.displayName = 'OSAnswer';\n","import { AnswerDisplayType } from './types';\n\nexport const defaultAnswerType: AnswerDisplayType = 'student';\n","import { defaultAnswerType } from \"../constants\";\nimport { Answer as AnswerType, AnswerDisplayType, ID, ExerciseQuestionData } from \"src/types\";\nimport { Answer } from \"./Answer\";\nimport { Feedback } from \"./Feedback\";\n\nexport interface AnswersTableProps {\n  question: ExerciseQuestionData;\n  type?: AnswerDisplayType;\n  answer_id?: ID;\n  correct_answer_id?: ID | null;\n  incorrectAnswerId?: ID;\n  answerIdOrder?: ID[],\n  feedback_html: string;\n  correct_answer_feedback_html?: string;\n  answered_count?: number;\n  show_all_feedback?: boolean;\n  labelAnswers?: boolean;\n  tableFeedbackEnabled?: boolean;\n  onChangeAnswer: () => void;\n  hideAnswers: boolean;\n  hasCorrectAnswer?: boolean;\n  onChangeAttempt?: () => void;\n  choicesEnabled?: boolean;\n  onKeyPress?: () => void;\n  contentRenderer?: JSX.Element;\n  instructions?: JSX.Element;\n  previewMode?: boolean;\n}\n\nexport const AnswersTable = (props: AnswersTableProps) => {\n  let idCounter = 0;\n\n  const {\n    question, hideAnswers, type = defaultAnswerType, answered_count, choicesEnabled, correct_answer_id,\n    incorrectAnswerId, answer_id, feedback_html, correct_answer_feedback_html, previewMode,\n    labelAnswers, show_all_feedback = false, tableFeedbackEnabled, hasCorrectAnswer, onChangeAnswer, onKeyPress, answerIdOrder, instructions\n  } = props;\n  if (hideAnswers) { return null; }\n\n  const { id } = question;\n\n  const feedback: { index: number, html: string, id: string }[] = [];\n\n  const sortedAnswersByIdOrder = (idOrder: ID[]) => {\n    const { answers } = question;\n    return answers.slice().sort((a, b) => idOrder.indexOf(a.id) - idOrder.indexOf(b.id));\n  }\n\n  const questionAnswerProps = {\n    qid: id || `auto-${idCounter++}`,\n    answerId: answer_id,\n    correctAnswerId: correct_answer_id,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    onChangeAnswer: onChangeAnswer,\n    type,\n    answered_count,\n    disabled: previewMode || !choicesEnabled,\n    labelAnswers,\n    show_all_feedback,\n    tableFeedbackEnabled,\n    onKeyPress\n  };\n\n  const answers = answerIdOrder ? sortedAnswersByIdOrder(answerIdOrder) : question.answers;\n\n  const answersHtml = answers.map((answer, i) => {\n    const additionalProps: { answer: AnswerType, iter: number, key: string }\n      = {\n      answer: {\n        ...answer,\n        question_id: typeof question.id === 'string' ? parseInt(question.id, 10) : question.id\n      },\n      iter: i,\n      key: `${questionAnswerProps.qid}-option-${i}`,\n    };\n    const answerProps = Object.assign({}, additionalProps, questionAnswerProps);\n    let html: string | undefined;\n    let feedbackId: string | undefined;\n\n    if (show_all_feedback && answer.feedback_html && tableFeedbackEnabled) {\n      html = answer.feedback_html;\n    } else if (answer.id === incorrectAnswerId && feedback_html) {\n      html = feedback_html;\n    } else if (answer.id === correct_answer_id && correct_answer_feedback_html) {\n      html = correct_answer_feedback_html;\n    }\n\n    if (html) {\n      feedbackId = `feedback-${questionAnswerProps.qid}-${i}`\n      feedback.push({ index: i, html, id: feedbackId });\n    }\n\n    return (\n      <Answer feedbackId={feedbackId} {...answerProps} />\n    );\n  });\n\n  feedback.forEach((item, i) => {\n    const spliceIndex = item.index + i + 1;\n    answersHtml.splice(spliceIndex, 0, (\n      <Feedback id={item.id} key={spliceIndex} contentRenderer={props.contentRenderer}>\n        {item.html}\n      </Feedback>\n    ));\n  });\n\n  return (\n    <div\n      {\n      ...(!previewMode\n        ? {\n          role: \"radiogroup\",\n          'aria-label': \"Answer choices\"\n        }\n        : {})\n      }\n      className=\"answers-table\"\n    >\n      {instructions}\n      {answersHtml}\n    </div>\n  );\n}\n","import { ReactNode, useState, useRef, useEffect, useCallback } from \"react\";\nimport { breakpoints, colors, layouts, mixins } from \"../theme\";\nimport { AvailablePoints, StepBase, StepWithData } from \"../types\";\nimport styled from \"styled-components\";\nimport cn from \"classnames\";\n\nexport const InnerStepCard = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  min-height: 400px;\n  margin: 0 auto 5rem auto;\n  border: 0.1rem solid ${colors.palette.pale};\n  border-radius: 0.25rem;\n  background-color: white;\n  overflow: hidden;\n\n  ${breakpoints.desktop`\n    max-width: 1000px;\n  `}\n`;\n\nexport const OuterStepCard = styled.div`\n  padding: ${layouts.card.spacing};\n\n  ${breakpoints.mobile`\n    padding: 0;\n  `}\n`;\n\nconst StepCardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1.6rem 2.4rem;\n  background: ${colors.card.header.background};\n  font-size: 1.8rem;\n  line-height: 3rem;\n  letter-spacing: -0.72px;\n\n  h2.question-info {\n    display: flex;\n    align-items: baseline;\n    font-size: inherit;\n    margin: inherit;\n\n    .question-id {\n      font-weight: normal;\n    }\n    .ox-icon-lock {\n        margin-right: 1rem;\n    }\n  }\n\n  .num-questions, .points {\n      display: none;\n  }\n\n  .exercise-id, .separator {\n      font-weight: normal;\n  }\n\n  .separator {\n      margin: 0 0.4rem;\n  }\n\n  .exercise-id {\n      height: 28px; // Fix baseline issue\n  }\n\n  button {\n    color: ${colors.palette.gray};\n  }\n\n  .openstax-exercise-badges {\n      margin: 0;\n      line-height: 2rem;\n      svg {\n          display: block;\n          &:not(.interactive) {\n              margin: 0 0 0 6px !important;\n          }\n      }\n  }\n\n  ${breakpoints.desktop`\n      button.ox-icon-angle-left, button.ox-icon-angle-right {\n          display: none;\n      }\n  `}\n\n    /*\n    1. Show the arrows to move to previous and next question.\n    2. Show the number of questions.\n    3. Override box-shadow of icons when turned into a button.\n    */\n    ${breakpoints.tablet`\n        font-size: 1.6rem;\n        line-height: 2.5rem;\n\n        svg.ox-icon {\n            display: inherit;\n            margin: 0;\n        }\n        button.ox-icon-angle-left {\n            margin-right: ${breakpoints.margins.tablet};\n        }\n        button.ox-icon-angle-right {\n            margin-left: ${breakpoints.margins.tablet};\n        }\n        .openstax-exercise-badges svg {\n            display: none;\n        }\n        .num-questions, points {\n            display: inherit;\n        }\n\n        .exercise-id {\n            display: none;\n        }\n\n        button[class^='ox-icon-angle']:hover {\n            box-shadow: none;\n        }\n  `}\n\n  ${breakpoints.mobile`\n      font-size: 1.6rem;\n      line-height: 2rem;\n      padding: 10px 8px;\n\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n  `}\n`;\nStepCardHeader.displayName = 'StepCardHeader';\n\nconst StepCardQuestion = styled.div<{ unpadded?: boolean }>`\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n    overflow: auto;\n    background: ${colors.card.body.background};\n\n    &.exercise-stimulus {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n  }\n\n    & + div .step-card-body {\n        padding-top: 0;\n    }\n\n    &.exercise-context, &.exercise-stimulus, &.exercise-stem {\n        padding-bottom: 0;\n    }\n\n    ${breakpoints.only.mobile`\n        && .question-feedback {\n            margin-left: 0;\n\n           .arrow { margin-left: 12px; }\n        }\n    `}\n\n    .reading-step & {\n        padding: 0;\n    }\n\n    ${breakpoints.desktop`\n        .video-step &, .interactive-step & {\n            .openstax-exercise-badges {\n              margin-right: 3.8rem;\n            }\n        }\n    `}\n\n    ${breakpoints.mobile`\n        .openstax-exercise-badges svg {\n            margin-right: ${breakpoints.margins.mobile};\n        }\n    `}\n\n    &&& {\n        .openstax-has-html .splash .frame-wrapper { margin-top: 0; }\n    }\n`;\n\nexport const StyledOverlay = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 100%;\n    height: 100%;\n    background-color: #FFFFFF80;\n    z-index: 2;\n`;\n\ninterface SharedProps {\n  questionNumber: number;\n  numberOfQuestions: number;\n  showTotalQuestions: boolean;\n  leftHeaderChildren?: ReactNode;\n  rightHeaderChildren?: ReactNode;\n  headerTitleChildren?: ReactNode;\n}\n\nexport interface StepCardProps extends SharedProps {\n  unpadded: boolean;\n  className?: string;\n  children?: ReactNode;\n  stepType: StepWithData['type'];\n  availablePoints?: AvailablePoints;\n  questionId?: string;\n  multipartBadge?: ReactNode;\n  isHomework: boolean;\n  overlayChildren?: React.ReactNode;\n}\n\nconst StepCard = ({\n  questionNumber,\n  numberOfQuestions,\n  showTotalQuestions,\n  stepType,\n  isHomework,\n  availablePoints,\n  unpadded, // currently does nothing; may need to restore if this causes tutor stepcard regression\n  className,\n  children,\n  questionId,\n  multipartBadge,\n  leftHeaderChildren,\n  rightHeaderChildren,\n  headerTitleChildren,\n  overlayChildren,\n  ...otherProps }: StepCardProps) => {\n\n  const overlayRef = useRef<HTMLDivElement>(null);\n  const [showOverlay, setShowOverlay] = useState<boolean>(false);\n\n  const formattedQuestionNumber = numberOfQuestions > 1\n    ? `Questions ${questionNumber} - ${questionNumber + numberOfQuestions - 1}`\n    : `Question ${questionNumber}`;\n\n  const handleOverlayBlur = (event: React.FocusEvent<HTMLDivElement>) => {\n    if (overlayRef.current && !overlayRef.current.contains(event.relatedTarget as Node)) {\n      setShowOverlay(false);\n    }\n  };\n\n  const handleOverlayFocus = useCallback(() => {\n    setShowOverlay(true);\n  }, []);\n\n  const hideFocusableElements = useCallback(() => {\n    const focusableElements = Array.from(document.getElementById(\"step-card\")?.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    ) || []);\n\n    focusableElements.forEach((el) => {\n      (el as HTMLElement).setAttribute('tabindex', '-1');\n    });\n  }, []);\n\n  useEffect(() => {\n    const currentOverlayRef = overlayRef.current;\n    if (currentOverlayRef && overlayChildren) {\n      currentOverlayRef.addEventListener('focus', handleOverlayFocus);\n      hideFocusableElements();\n    }\n    return () => {\n      currentOverlayRef?.removeEventListener('focus', handleOverlayFocus);\n    };\n  }, [overlayChildren, overlayRef, handleOverlayFocus, hideFocusableElements]);\n\n  return (\n    <OuterStepCard {...otherProps}>\n      {multipartBadge}\n      <InnerStepCard className={className}>\n        <div\n          ref={overlayRef}\n          {\n          ...(overlayChildren\n            ? {\n              onMouseOver: () => setShowOverlay(true),\n              onMouseLeave: () => setShowOverlay(false),\n              onBlur: handleOverlayBlur,\n              tabIndex: 0,\n            }\n            : {})\n          }\n        >\n          {(overlayChildren && showOverlay) &&\n            <StyledOverlay id=\"overlay-element\">\n              {overlayChildren}\n            </StyledOverlay>\n          }\n          <div id=\"step-card\">\n            {questionNumber && isHomework && stepType === 'exercise' &&\n              <StepCardHeader className=\"step-card-header\">\n                <div>\n                  {leftHeaderChildren}\n                  <h2 className=\"question-info\">\n                    {headerTitleChildren}\n                    <span>{formattedQuestionNumber}</span>\n                    {showTotalQuestions ? <span className=\"num-questions\">&nbsp;/ {numberOfQuestions}</span> : null}\n                    <span className=\"separator\">|</span>\n                    <span className=\"question-id\">ID: {questionId}</span>\n                  </h2>\n                </div>\n                {availablePoints || rightHeaderChildren ? <div>\n                  {availablePoints && <div className=\"points\">{availablePoints} Points</div>}\n                  {rightHeaderChildren}\n                </div> : null}\n              </StepCardHeader>\n            }\n            <StepCardQuestion unpadded={unpadded}>{children}</StepCardQuestion>\n          </div>\n        </div>\n      </InnerStepCard>\n    </OuterStepCard>\n  )\n};\nStepCard.displayName = 'OSStepCard';\n\nexport interface TaskStepCardProps extends SharedProps {\n  className?: string;\n  children?: ReactNode;\n  tabIndex?: number;\n  step: StepBase | StepWithData;\n  questionNumber: number;\n  numberOfQuestions: number;\n  overlayChildren?: React.ReactNode;\n}\n\nconst TaskStepCard = ({\n  step,\n  questionNumber,\n  numberOfQuestions,\n  children,\n  className,\n  overlayChildren,\n  ...otherProps\n}: TaskStepCardProps) =>\n(<StepCard {...otherProps}\n  unpadded={true}\n  questionNumber={questionNumber}\n  numberOfQuestions={numberOfQuestions}\n  stepType={'type' in step ? step.type : 'exercise'}\n  isHomework={'task' in step ? (step.task === undefined || step.task.type === 'homework') : true}\n  data-task-step-id={step.id}\n  // uncomment next line to display available points on exercise questions\n  // availablePoints={step.available_points}\n  className={cn(`${('type' in step ? step.type : 'exercise')}-step`, className)}\n  questionId={step.uid}\n  overlayChildren={overlayChildren}\n>\n  {children}\n</StepCard>);\n\nTaskStepCard.displayName = 'OSTaskStepCard';\n\nexport { StepCard, TaskStepCard };\n","import { colors, breakpoints, mixins } from \"../theme\";\nimport styled from \"styled-components\";\n\nexport const StepCardFooter = styled.div`\n    ${mixins.stepCardPadding()}\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    font-size: calc(1.6rem * var(--content-text-scale));\n    line-height: calc(2rem * var(--content-text-scale));\n    background: ${colors.card.body.background};\n    overflow: auto;\n\n    > * {\n        flex-grow: 1;\n    }\n\n    button {\n        width: 160px;\n        height: 48px;\n    }\n\n    .step-card-footer-inner {\n        border-top: 1px solid ${colors.palette.pale};\n        padding-top: 32px;\n        display: flex;\n        justify-content: space-between;\n        gap: 1.6rem;\n\n        ${breakpoints.mobile`\n            flex-wrap: wrap;\n        `}\n    }\n\n    .points {\n        .attempts-left {\n          color: #B03808;\n          font-weight: bold;\n        }\n    }\n\n    .controls {\n        display: flex;\n        flex-flow: column wrap-reverse;\n\n        button + button {\n            margin: 0.8rem 0 0 0;\n        }\n    }\n\n    ${breakpoints.desktop`\n        padding: 0 140px 32px 140px;\n        flex-wrap: nowrap;\n\n        .points {\n            max-width: 400px;\n        }\n\n        .controls {\n            flex-flow: row;\n            justify-content: flex-end;\n\n            button + button {\n                margin: 0 0 0 0.8rem;\n            }\n        }\n    `}\n`;\n","import { colors } from \"../theme\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  background-color: ${colors.button.background};\n  color: ${colors.palette.white};\n  font-size: 1.6rem;\n  font-weight: 700;\n  line-height: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 4rem;\n  padding: 0 3rem;\n  border: 0;\n  border-radius: 5px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:not([disabled]) {\n    cursor: pointer;\n    &:hover {\n      background: ${colors.button.backgroundHover}\n    }\n    &:active {\n      background: ${colors.button.backgroundActive}\n    }\n  }\n  &:disabled {\n    opacity: 0.4;\n  }\n`;\n\ninterface ButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting?: never;\n  waitingText?: never;\n}\ninterface WaitingButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting: boolean;\n  waitingText: string;\n}\n\nconst Button = (props: ButtonProps | WaitingButtonProps) => {\n  const { disabled, isWaiting, waitingText, children, ...otherProps } = props;\n\n  return (\n    <StyledButton {...otherProps} disabled={isWaiting || disabled}>{(isWaiting && waitingText) || children}</StyledButton>\n  );\n}\n\nexport default Button;\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport { InnerStepCard } from \"./Card\";\nimport Button from \"./Button\";\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --content-text-scale: 1;\n  }\n`;\n\nexport interface CompletionStatusProps {\n  numberOfQuestions: number;\n  numberCompleted: number;\n  handleClick: () => void;\n  className?: string;\n}\n\nconst CompletionStatusCard = styled(InnerStepCard)`\n  padding: 88px 72px;\n  font-size: calc(1.8rem * var(--content-text-scale));\n  line-height: calc(3rem * var(--content-text-scale));\n  display: block;\n\n  button {\n    min-width: 160px;\n    height: 48px;\n  }\n\n  p {\n    margin: 16px 0 20px 0;\n  }\n`;\n\nconst CompletionHeader = styled.h2`\n  font-size: calc(2.4rem * var(--content-text-scale));\n  margin: 0;\n`;\n\nexport const CompletionStatus = styled(({\n  numberOfQuestions, numberCompleted, handleClick, className\n}: CompletionStatusProps) => {\n\n  const allCompleted = numberOfQuestions === numberCompleted;\n  const someCompleted = numberCompleted > 0;\n  const buttonText = allCompleted ? 'Next' : (\n      someCompleted ? 'Continue' : 'Start'\n  );\n\n  return <>\n    <GlobalStyle />\n    <CompletionStatusCard className={className}>\n      <CompletionHeader>{allCompleted ? 'You are done.' : (someCompleted ? 'Quiz is partially complete.' : 'No questions have been answered.')}</CompletionHeader>\n      <p>{allCompleted ? 'Great job answering all the questions.' : (someCompleted ? `You've completed ${numberCompleted} of ${numberOfQuestions} questions.` : 'Begin working on the quiz.')}</p>\n      <Button data-test-id={`${buttonText.split(' ')[0].toLowerCase()}-btn`} onClick={() => handleClick()}>\n        {buttonText}\n      </Button>\n    </CompletionStatusCard>\n  </>\n})``;\n","import styled from 'styled-components';\nimport { mixins, colors, layouts, transitions } from '../theme';\nimport { AnswersTable } from './AnswersTable';\nimport classnames from 'classnames';\nimport { ID, ExerciseQuestionData, Task } from 'src/types';\nimport React, { ReactNode } from 'react';\nimport { Content } from './Content';\n\nconst StyledQuestion = styled.div`\n&.step-card-body {\n  ${mixins.stepCardPadding()};\n}\n\n&.openstax-question {\n  border-top: 1px solid ${colors.palette.pale};\n  font-size: calc(1.8rem * var(--content-text-scale));\n\n  .detailed-solution {\n    margin-bottom: 1rem;\n    .header {\n      display: inline;\n      margin-right: 0.5rem;\n      color: #5e6062;\n      font-weight: bold;\n      flex-basis: 0;\n    }\n    .solution {\n      display: inline;\n      color: #6f6f6f;\n    }\n  }\n\n  img {\n    display: block;\n    margin: auto;\n    max-width: 100%;\n  }\n\n  .question-stem {\n    margin-bottom: 0;\n  }\n\n  .answers-table {\n    margin-bottom: 20px;\n    font-size: calc(1.6rem * var(--content-text-scale));\n    line-height: calc(2rem * var(--content-text-scale));\n  }\n\n  .instructions {\n    font-size: 1.4rem;\n    font-style: italic;\n    margin-top: 10px;\n    color: ${colors.palette.neutral};\n    margin: 0;\n\n    i {\n      margin-left: 5px;\n    }\n\n    .text-info {\n      color: ${colors.palette.neutralLightBlue};\n      padding-left: 5px;\n      cursor: pointer;\n      font-style: normal;\n    }\n  }\n\n  .multiple-choice-prompt {\n    font-weight: 600;\n  }\n\n  .free-response {\n    padding: ${layouts.answer.horizontalSpacing} ${layouts.answer.horizontalBuffer};\n    margin: ${layouts.answer.verticalSpacing} 0 ${layouts.answer.horizontalSpacing} ${layouts.answer.verticalSpacing};\n    border-left: ${layouts.answer.horizontalSpacing} solid ${colors.palette.neutralLighter};\n    font-style: italic;\n  }\n\n  &:not(.openstax-question-preview) {\n    .answers-answer {\n      width: initial;\n      &:not(.disabled){\n        .answer-label:focus{\n          background-color: ${colors.palette.neutralLightest};\n        }\n      }\n      &.answer-selected {\n        font-weight: bold;\n      }\n      ${mixins.answer()};\n    }\n\n    .answer-answer {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      margin-left: ${layouts.answer.horizontalSpacing};\n      * {\n        margin: 0;\n      }\n    }\n\n    .answer-letter-wrapper::before {\n      content: attr(data-answer-choice);\n      text-align: center;\n      padding: 0;\n      font-size: 1.6rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .answer-label {\n      align-items: center;\n      width: 100%;\n      padding: ${layouts.answer.verticalSpacing} 0 0 0;\n      margin: 0;\n      transition: color ${transitions.answer};\n    }\n\n    // a selectable answer\n    .answer-input-box:not([disabled]) ~ .answer-label {\n      cursor: pointer;\n\n      &:hover {\n        ${mixins.answerHover()}\n      }\n    }\n\n    .answer-input-box {\n      ${mixins.visuallyHidden()}\n    }\n\n    // a selected answer\n    &:not(.has-correct-answer) {\n      .answer-input-box {\n        &:checked {\n          + .answer-label,\n          + .answer-label:hover {\n            ${mixins.answerChecked()};\n          }\n        }\n\n        &:focus-visible {\n          + .answer-label .answer-letter-wrapper::before {\n            outline-style: solid;\n            outline-width: 2px;\n            outline-offset: 2px;\n            outline-color: ${colors.answer.checked};\n          }\n        }\n      }\n\n      .answer-selected {\n        .answer-label, .answer-label:hover {\n          ${mixins.answerChecked()};\n        }\n      }\n    }\n\n    // answer that has been checked\n    &.has-correct-answer {\n      .answer-selected {\n        &:not(.answer-correct) {\n          .answer-label {\n            ${mixins.answerIncorrect(true)};\n          }\n        }\n\n        &.answer-correct {\n          .answer-label {\n            ${mixins.answerCorrect(true)};\n          }\n        }\n      }\n\n      .answer-correct:not(.answer-selected) {\n        .answer-label {\n          ${mixins.answerCorrect(false)}\n        }\n      }\n    }\n\n    &.has-incorrect-answer {\n      .answer-incorrect {\n        .answer-label, .answer-label:hover {\n          ${mixins.answerIncorrect()}\n        }\n        &.answer-selected.answer-incorrect {\n          ${mixins.answerIncorrect(true)}\n        }\n      }\n    }\n\n    .question-feedback {\n      ${mixins.popover()}\n      max-width: ${layouts.answer.feedback.popover.maxWidth};\n      .question-feedback-content {\n        padding: ${layouts.answer.feedback.popover.verticalSpacing} ${layouts.answer.feedback.popover.horizontalSpacing};\n      }\n    }\n  }\n\n  .openstax-answer {\n    border-top: 1px solid #d5d5d5;\n    margin: 10px 0;\n    padding: 6px 8px;\n  }\n}\n`;\n\nexport interface QuestionProps {\n  question: ExerciseQuestionData,\n  answer_id?: ID;\n  task?: Task | null,\n  correct_answer_id: ID | null;\n  incorrectAnswerId: ID;\n  hideAnswers: boolean;\n  hidePreambles?: boolean,\n  exercise_uid?: string;\n  displayFormats: boolean,\n  className: string;\n  questionNumber: number;\n  displaySolution: boolean;\n  context?: string;\n  correct_answer_feedback_html?: string;\n  contentRenderer?: JSX.Element;\n  feedback_html: string;\n  onChange: () => void;\n  labelAnswers?: boolean;\n  show_all_feedback?: boolean;\n  tableFeedbackEnabled?: boolean;\n  children?: ReactNode;\n  answerIdOrder?: ID[];\n  choicesEnabled?: boolean;\n  previewMode?: boolean;\n}\n\nexport const Question = React.forwardRef((props: QuestionProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n  let exerciseUid, solution;\n\n  const {\n    question, correct_answer_id, incorrectAnswerId, exercise_uid, className, questionNumber, context, task, hidePreambles\n  } = props;\n\n  const { stem_html, collaborator_solutions = [], formats, stimulus_html } = question;\n\n  const hasCorrectAnswer = !!correct_answer_id;\n  const hasIncorrectAnswer = !!incorrectAnswerId;\n\n  const taskIsDeleted = (task != null ? task.is_deleted : undefined)\n  const taskIsHomework = ((task != null ? task.type : undefined) === 'homework');\n\n  const classes = classnames('openstax-question', className, {\n    'has-correct-answer': hasCorrectAnswer && !(taskIsDeleted && taskIsHomework),\n    'has-incorrect-answer': hasIncorrectAnswer,\n  });\n\n  const hasSolution = () => {\n    const { displaySolution } = props;\n    const { collaborator_solutions = [] } = question;\n\n    return (\n      displaySolution &&\n      collaborator_solutions &&\n      collaborator_solutions.find(s => s['content_html'] !== undefined)\n    );\n  };\n\n  if (exercise_uid != null) {\n    exerciseUid = (\n      <div className=\"exercise-uid\">\n        {exercise_uid}\n      </div>\n    );\n  }\n\n  if (hasSolution()) {\n    solution =\n      <div className=\"detailed-solution\">\n        <div className=\"header\">\n          Detailed solution:\n        </div>\n        <Content\n          className=\"solution\"\n          block={true}\n          html={collaborator_solutions.map(s => s['content_html']).join('')} />\n      </div>;\n  }\n\n  return (\n    <StyledQuestion ref={ref} className={classes} data-question-number={questionNumber} data-test-id=\"question\">\n      <QuestionHtml type=\"context\" html={context} hidden={hidePreambles} />\n      <QuestionHtml type=\"stimulus\" html={stimulus_html} hidden={hidePreambles} />\n      <QuestionHtml type=\"stem\" html={stem_html} hidden={hidePreambles} questionNumber={questionNumber} />\n      {props.children}\n\n      <AnswersTable\n        {...props}\n        onChangeAnswer={props.onChange}\n        hasCorrectAnswer={hasCorrectAnswer}\n      />\n\n      {solution}\n      {props.displayFormats ? <FormatsListing formats={formats} /> : undefined}\n      {exerciseUid}\n    </StyledQuestion>\n  );\n});\n\ninterface QuestionHtmlProps {\n  html?: string;\n  type: string;\n  hidden: QuestionProps['hidePreambles'];\n  questionNumber?: QuestionProps['questionNumber'];\n}\n\nexport const QuestionHtml = (props: QuestionHtmlProps) => {\n  const { html = '', type, hidden, questionNumber } = props;\n  if (hidden === true || !(html.length > 0)) { return null; }\n\n  return (\n    <Content\n      html={html}\n      data-question-number={questionNumber}\n      className={`question-${type}`}\n      block={true}\n    />\n  );\n};\n\nconst FormatsListing = ({ formats = [] }: { formats: ExerciseQuestionData['formats'] }) => {\n  return (\n    <div className=\"formats-listing\">\n      <div className=\"header\">Formats:</div>\n      {formats.map((format, i) => <span key={i}>{format}</span>)}\n    </div>\n  );\n};\n","import { MouseEventHandler, ReactNode } from 'react';\nimport { countWords } from '../utils';\nimport styled, { css } from 'styled-components';\nimport { colors, mixins } from '../theme';\nimport { AvailablePoints, ExerciseQuestionData } from 'src/types';\nimport { QuestionHtml } from './Question';\nimport Button from './Button';\nimport { StepCardFooter } from './StepCardFooter';\n\nexport interface FreeResponseProps {\n  readOnly: boolean;\n  wordLimit: number;\n  infoRowChildren?: ReactNode;\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  cancelHandler: MouseEventHandler<HTMLButtonElement>;\n  saveHandler: MouseEventHandler<HTMLButtonElement>;\n  defaultValue: string;\n  isSubmitDisabled: boolean;\n  questionNumber: number,\n  question: ExerciseQuestionData,\n  availablePoints?: AvailablePoints,\n  textHasChanged: boolean;\n  submitBtnLabel: string;\n}\n\nconst TextAreaErrorStyle = css`\n  background-color: #f5e9ea;\n`;\n\nconst StyledFreeResponse = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n  }\n`;\n\nconst SyledQuestionStem = styled.div`\n  font-size: 2rem;\n  line-height: 1.68em;\n  position: relative;\n`;\n\nconst InfoRow = styled.div<{ hasChildren: boolean }>`\n  margin: 8px 0;\n  display: flex;\n  justify-content: ${props => props.hasChildren ? 'space-between' : 'flex-end'};\n  line-height: 1.6rem;\n\n  .word-limit-error-info {\n    color: ${colors.palette.danger};\n  }\n\n  div > span {\n    font-size: 12px;\n    line-height: 16px;\n\n    + span {\n      margin-left: 1rem;\n    }\n  }\n\n  .last-submitted + * {\n    margin-top: 0.8rem;\n  }\n\n  color: ${colors.palette.neutralThin};\n`;\n\nexport const FreeResponseTextArea = styled.textarea<{ isOverWordLimit: boolean } & FreeResponseProps>`\n  display: block;\n  font-family: inherit;\n  font-size: 1.8rem;\n  line-height: 3rem;\n  width: 100%;\n  min-height: 10.5em;\n  line-height: 1.5em;\n  margin: 2.5rem 0 0 0;\n  padding: 0.5em;\n  border: 1px solid ${colors.palette.neutral};\n  color: ${colors.palette.neutralDark};\n  ${props => props.isOverWordLimit && TextAreaErrorStyle};\n  ${props => props.isOverWordLimit && css`\n    border: 2px solid ${colors.palette.danger};\n  `}\n  background-color: ${props => props.readOnly && colors.palette.neutralCool};\n`;\nFreeResponseTextArea.displayName = 'OSFreeResponseTextArea';\n\nconst RevertButton = (props: {\n  disabled: boolean\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button {...props}>\n    Cancel\n  </Button>\n);\n\n\nexport const FreeResponseInput = (props: FreeResponseProps) => {\n  const {\n    availablePoints,\n    cancelHandler,\n    defaultValue,\n    infoRowChildren,\n    isSubmitDisabled,\n    question,\n    questionNumber,\n    saveHandler,\n    submitBtnLabel,\n    textHasChanged,\n    wordLimit,\n  } = props;\n\n  const isOverWordLimit = countWords(defaultValue) > wordLimit;\n\n  const questionProps = {};\n  if (questionNumber) { questionProps['data-question-number'] = questionNumber; }\n\n  return (\n    <StyledFreeResponse data-test-id=\"student-free-response\">\n      <div className=\"step-card-body\">\n        <SyledQuestionStem {...questionProps}>\n          {question.stem_html &&\n            <QuestionHtml type=\"stem\" html={question.stem_html} hidden={false} />}\n        </SyledQuestionStem>\n        <FreeResponseTextArea\n          {...props}\n          isOverWordLimit={isOverWordLimit}\n          data-test-id=\"free-response-box\"\n          placeholder=\"Enter your response...\"\n          aria-label=\"question response text box\"\n        />\n        <InfoRow hasChildren={!!infoRowChildren}>\n          {infoRowChildren}\n          <div>\n            <span>{countWords(defaultValue)} words</span>\n            {isOverWordLimit && <span className=\"word-limit-error-info\">Maximum {wordLimit} words</span>}\n          </div>\n        </InfoRow>\n      </div>\n      <StepCardFooter>\n      {availablePoints\n        ? <div className=\"points\" role=\"status\"><strong>Points: {availablePoints}</strong></div>\n        : null}\n        <div className=\"controls\">\n          <RevertButton disabled={!textHasChanged} onClick={cancelHandler} />\n          <Button\n            data-test-id=\"submit-answer-btn\"\n            disabled={isSubmitDisabled || isOverWordLimit}\n            onClick={saveHandler}\n          >\n            {submitBtnLabel}\n          </Button>\n        </div>\n      </StepCardFooter>\n    </StyledFreeResponse>\n  );\n}\n\nFreeResponseInput.displayName = 'OSFreeResponse';\n","import React from \"react\";\nimport { numberfyId } from \"../../src/utils\";\nimport { AvailablePoints, ID, ExerciseQuestionData, Task } from \"../types\";\nimport Button from \"./Button\";\nimport { Content } from \"./Content\";\nimport { ExerciseBaseProps } from \"./Exercise\";\nimport { Question } from './Question';\nimport { StepCardFooter } from \"./StepCardFooter\";\n\nexport interface ExerciseQuestionProps {\n  task?: Task;\n  question: ExerciseQuestionData;\n  answer_id_order?: ID[];\n  questionNumber: number;\n  choicesEnabled: boolean;\n  hasMultipleAttempts: boolean;\n  onAnswerChange: () => void;\n  onAnswerSave: ExerciseBaseProps['onAnswerSave'];\n  onNextStep: ExerciseBaseProps['onNextStep'];\n  feedback_html: string;\n  correct_answer_feedback_html: string;\n  is_completed: boolean;\n  correct_answer_id: ID;\n  incorrectAnswerId: ID;\n  answer_id?: ID;\n  attempts_remaining: number;\n  published_comments?: string;\n  detailedSolution?: string;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  canUpdateCurrentStep: boolean;\n  attempt_number: number;\n  apiIsPending: boolean;\n  displaySolution: boolean;\n  available_points?: AvailablePoints;\n  exercise_uid: string;\n  free_response?: string;\n  labelAnswers?: boolean;\n  show_all_feedback?: boolean;\n  tableFeedbackEnabled?: boolean;\n  hasFeedback?: ExerciseBaseProps['hasFeedback'];\n  previewMode?: boolean;\n}\n\nconst AttemptsRemaining = ({ count }: { count: number }) => {\n  return (\n    <div>{count} attempt{count === 1 ? '' : 's'} left</div>\n  );\n}\n\nconst PublishedComments = ({ published_comments }: { published_comments?: string }) => {\n  if (!published_comments) { return null; }\n\n  return (\n    <div>\n      <strong>Feedback:</strong> {published_comments}\n    </div>\n  );\n}\n\nexport const SaveButton = (props: {\n  disabled: boolean, isWaiting: boolean, attempt_number: number, willContinue: boolean\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button\n    {...props}\n    waitingText=\"Saving…\"\n    isWaiting={props.isWaiting}\n    data-test-id=\"submit-answer-btn\"\n  >\n    {props.willContinue\n      ? 'Submit & continue'\n      : (props.attempt_number == 0 ? 'Submit' : 'Re-submit')}\n  </Button>\n);\n\nexport const NextButton = (props: {\n  canUpdateCurrentStep: boolean,\n} & React.ComponentPropsWithoutRef<'button'>) => {\n  return (\n    <Button {...props} data-test-id=\"continue-btn\">\n      {props.canUpdateCurrentStep ? 'Continue' : 'Next'}\n    </Button>\n  );\n}\n\nconst FreeResponseReview = ({ free_response }: Pick<ExerciseQuestionProps, \"free_response\">) => {\n  if (!free_response) { return null; }\n  return (\n    <>\n      <div className=\"free-response\">{free_response}</div>\n    </>\n  );\n}\n\nexport const ExerciseQuestion = React.forwardRef((props: ExerciseQuestionProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n  const {\n    question, task, answer_id_order, onAnswerChange, feedback_html, correct_answer_feedback_html,\n    is_completed, correct_answer_id, incorrectAnswerId, choicesEnabled, questionNumber,\n    answer_id, hasMultipleAttempts, attempts_remaining, published_comments, detailedSolution,\n    canAnswer, needsSaved, attempt_number, apiIsPending, onAnswerSave, onNextStep, canUpdateCurrentStep,\n    displaySolution, available_points, free_response, labelAnswers, show_all_feedback, tableFeedbackEnabled,\n    hasFeedback, previewMode\n  } = props;\n\n  const [shouldContinue, setShouldContinue] = React.useState(false)\n  React.useEffect(() => {\n    if (shouldContinue && is_completed) {\n      onNextStep(questionNumber - 1);\n      setShouldContinue(false);\n    }\n  }, [onNextStep, questionNumber, shouldContinue, is_completed]);\n\n  return (\n    <div data-test-id=\"student-exercise-question\">\n      <Question\n        ref={ref}\n        task={task}\n        question={question}\n        answerIdOrder={answer_id_order}\n        choicesEnabled={choicesEnabled}\n        answer_id={answer_id}\n        questionNumber={questionNumber}\n        onChange={onAnswerChange}\n        feedback_html={feedback_html}\n        correct_answer_feedback_html={correct_answer_feedback_html}\n        correct_answer_id={is_completed ? correct_answer_id : null}\n        incorrectAnswerId={incorrectAnswerId}\n        className=\"step-card-body\"\n        hideAnswers={false}\n        displayFormats={false}\n        displaySolution={displaySolution}\n        labelAnswers={labelAnswers}\n        show_all_feedback={show_all_feedback}\n        tableFeedbackEnabled={tableFeedbackEnabled}\n        previewMode={previewMode}\n      >\n        <FreeResponseReview free_response={free_response} />\n      </Question>\n      {(previewMode && detailedSolution) || !previewMode ?\n        <StepCardFooter className=\"step-card-footer\">\n          <div className=\"step-card-footer-inner\">\n            <div className=\"points\" role=\"status\" >\n              {available_points ? <strong>Points: {available_points}</strong> : null}\n              <span className=\"attempts-left\">\n                {hasMultipleAttempts &&\n                  attempts_remaining > 0 &&\n                  <AttemptsRemaining count={attempts_remaining} />}\n              </span>\n              <PublishedComments published_comments={published_comments} />\n              {detailedSolution && (<div><strong>Detailed solution:</strong> <Content html={detailedSolution} /></div>)}\n            </div>\n            <div className=\"controls\">\n              {(canAnswer && needsSaved) || shouldContinue ?\n                <SaveButton\n                  disabled={apiIsPending || !answer_id || shouldContinue}\n                  isWaiting={apiIsPending || shouldContinue}\n                  attempt_number={attempt_number}\n                  onClick={() => {\n                    onAnswerSave(numberfyId(question.id));\n                    if (!hasFeedback) {\n                      setShouldContinue(true);\n                    }\n                  }}\n                  willContinue={!hasFeedback}\n                /> :\n                <NextButton onClick={() => onNextStep(questionNumber - 1)} canUpdateCurrentStep={canUpdateCurrentStep} />}\n            </div>\n          </div>\n        </StepCardFooter> : null}\n    </div>\n  );\n})\n","import { debounce, once } from 'lodash';\nimport { isEmpty, memoize } from 'lodash/fp.js';\nimport WeakMap from 'weak-map';\n\ndeclare global {\n  interface Window {\n    MathJax?: any;\n    __debugMathJax?: boolean;\n  }\n}\n\nconst MATH_MARKER_BLOCK  = '\\u200c\\u200c\\u200c'; // zero-width non-joiner\nconst MATH_MARKER_INLINE = '\\u200b\\u200b\\u200b'; // zero-width space\n\nconst MATH_RENDERED_CLASS = 'math-rendered';\nconst MATH_MARKED_CLASS = 'math-marked';\nconst MATH_DATA_SELECTOR = `[data-math]:not(.${MATH_RENDERED_CLASS})`;\nconst MATH_ML_SELECTOR   = `math:not(.${MATH_RENDERED_CLASS})`;\nconst COMBINED_MATH_SELECTOR = `${MATH_DATA_SELECTOR}, ${MATH_ML_SELECTOR}`;\nconst MATHJAX_CONFIG = {\n  extensions: [],\n  showProcessingMessages: false,\n  skipStartupTypeset: true,\n  styles: {\n    '#MathJax_MSIE_Frame': {\n      left: '', right: 0, visibility: 'hidden',\n    },\n    '#MathJax_Message': {\n      left: '', right: 0, visibility: 'hidden',\n    },\n  },\n  tex2jax: {\n    displayMath: [[MATH_MARKER_BLOCK, MATH_MARKER_BLOCK]],\n    inlineMath:  [[MATH_MARKER_INLINE, MATH_MARKER_INLINE]],\n  },\n};\n\nconst findProcessedMath = (root: Element): Element[] => Array.from(root.querySelectorAll('.MathJax math'));\nconst findUnprocessedMath = (root: Element): Element[] => {\n  const processedMath = findProcessedMath(root);\n  return Array.from(root.querySelectorAll('math')).filter((node) => processedMath.indexOf(node) === -1);;\n};\n\nconst findLatexNodes = (root: Element): Element[] => {\n  const latexNodes: Element[] = [];\n  for (const node of Array.from(root.querySelectorAll(MATH_DATA_SELECTOR))) {\n    const formula = node.getAttribute('data-math');\n\n    // Set textContent once so that resolveOrWait calls don't\n    // undo a MathJax pass before rendered class is applied\n    if (!node.classList.contains(MATH_MARKED_CLASS)) {\n      node.textContent = (node.tagName.toLowerCase() === 'div')\n        ? `${MATH_MARKER_BLOCK}${formula}${MATH_MARKER_BLOCK}`\n        : `${MATH_MARKER_INLINE}${formula}${MATH_MARKER_INLINE}`;\n      node.classList.add(MATH_MARKED_CLASS);\n    }\n    latexNodes.push(node);\n  }\n\n  return latexNodes;\n};\n\nconst typesetLatexNodes = (latexNodes: Element[], windowImpl: Window) => () => {\n  if (isEmpty(latexNodes)) {\n    return;\n  }\n\n  windowImpl.MathJax.Hub.Queue(\n    () => windowImpl.MathJax.Hub.Typeset(latexNodes),\n    markLatexNodesRendered(latexNodes)\n  );\n};\n\nconst typesetMathMLNodes = (root: Element, windowImpl: Window) => () => {\n  const mathMLNodes = findUnprocessedMath(root);\n\n  if (isEmpty(mathMLNodes)) {\n    return;\n  }\n\n  // style the entire document because mathjax is unable to style individual math elements\n  windowImpl.MathJax.Hub.Queue(\n    () => windowImpl.MathJax.Hub.Typeset(root)\n  );\n};\n\nconst markLatexNodesRendered = (latexNodes: Element[]) => () => {\n  // Queue a call to mark the found nodes as rendered so are ignored if typesetting is called repeatedly\n  // uses className += instead of classList because IE\n  const result = [];\n  for (const node of latexNodes) {\n    result.push(node.className += ` ${MATH_RENDERED_CLASS}`);\n  }\n};\n\n// Search document for math and [data-math] elements and then typeset them\nfunction typesetDocument(root: Element, windowImpl: Window) {\n  const latexNodes = findLatexNodes(root);\n\n  windowImpl.MathJax.Hub.Queue(\n    typesetLatexNodes(latexNodes, windowImpl),\n    typesetMathMLNodes(root, windowImpl)\n  );\n}\n\nconst resolveOrWait = (root: Element, resolve: () => void, remainingTries = 5) => {\n  if (\n    remainingTries > 0\n    && (findLatexNodes(root).length || findUnprocessedMath(root).length)\n  ) {\n    setTimeout(() => {\n      resolveOrWait(root, resolve, remainingTries - 1);\n    }, 200);\n  } else {\n    resolve();\n  }\n};\n\nconst typesetDocumentPromise = (root: Element, windowImpl: Window): Promise<void> => new Promise((resolve) => {\n  typesetDocument(root, windowImpl);\n  windowImpl.MathJax.Hub.Queue(() => {\n    resolveOrWait(root, resolve);\n  });\n});\n\n// memoize'd getter for typeset document function so that each node's\n// typeset has its own debounce\nconst getTypesetDocument = memoize((root, windowImpl) => {\n  // Install a debounce around typesetting function so that it will only run once\n  // every Xms even if called multiple times in that period\n  return debounce(typesetDocumentPromise, 100, {\n    leading: true,\n    trailing: false,\n  }).bind(null, root, windowImpl);\n});\ngetTypesetDocument.cache = new WeakMap();\n\n// typesetMath is the main exported function.\n// It's called by components like HTML after they're rendered\nconst typesetMath = async (root: Element, windowImpl = window) => {\n  await startMathJax();\n\n  // check if MathJax is setup\n  if (!(windowImpl && windowImpl.MathJax && windowImpl.MathJax.Hub)) {\n    console.warn('Warning: Expected MathJax to be initialized.');\n    return Promise.resolve();\n  }\n\n  // schedule a Mathjax pass if there is at least one [data-math] or <math> element present\n  if (root.querySelector(COMBINED_MATH_SELECTOR)) {\n    return getTypesetDocument(root, windowImpl)();\n  }\n\n  return Promise.resolve();\n};\n\nconst startMathJax: (windowImpl?: Window) => Promise<void> = once((windowImpl: Window = window) => new Promise((resolve) => {\n  const configuredCallback = () => {\n    // there doesn't seem to be a config option for this\n    windowImpl.MathJax.HTML.Cookie.prefix = 'mathjax';\n    // proceed with mathjax initi\n    windowImpl.MathJax.Hub.Configured();\n    windowImpl.MathJax.Hub.Register.StartupHook('End', () => {\n      resolve();\n    });\n  };\n\n  if (!document.getElementById('MathJax-Script')) {\n    const script = document.createElement('script');\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_HTMLorMML-full&delayStartupUntil=configured';\n    script.id = 'MathJax-Script';\n    script.async = true;\n    document.head.appendChild(script);\n  }\n\n  if (windowImpl.MathJax && windowImpl.MathJax.Hub) {\n    windowImpl.MathJax.Hub.Config(MATHJAX_CONFIG);\n    // Does not seem to work when passed to Config\n    windowImpl.MathJax.Hub.processSectionDelay = 0;\n    configuredCallback();\n  } else {\n    // If the MathJax.js file has not loaded yet:\n    // Call MathJax.Configured once MathJax loads and\n    // loads this config JSON since the CDN URL\n    // says to `delayStartupUntil=configured`\n    (MATHJAX_CONFIG as any).AuthorInit = configuredCallback;\n    windowImpl.MathJax = MATHJAX_CONFIG;\n  }\n}));\n\nexport {\n  typesetMath,\n  startMathJax,\n};\n","import { colors, layouts, breakpoints } from \"../../src/theme\";\nimport styled, { css } from \"styled-components\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBookOpen, faTriangleExclamation } from \"@fortawesome/free-solid-svg-icons\";\nimport { ExerciseIcons } from \"./Exercise\";\n\nexport const StyledToolbar = styled.div<{\n  mobile: boolean;\n  desktop: boolean;\n}>`\n  position: absolute;\n  background: #fff;\n  width: 4.5rem;\n  border: 1px solid ${colors.palette.light};\n  background: #fff;\n  margin: ${layouts.card.spacing} 0 0 ${layouts.card.spacing};\n  z-index: 1;\n\n  > * {\n    height: 4.7rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${colors.palette.neutral};\n    background: #fff;\n    text-decoration: none;\n\n    &:after {\n      border-bottom: 1px solid #f1f1f1;\n    }\n\n    svg {\n      width: 4.3rem;\n      height: 1.6rem;\n      transition: color 150ms;\n    }\n\n    span {\n      display: none;\n      flex-grow: 1;\n      font-size: 1.4rem;\n      color: ${colors.palette.neutralDarker};\n    }\n\n    &:hover {\n      box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 2px;\n      width: 20rem;\n\n      svg {\n        color: ${colors.palette.neutralDarker};\n      }\n\n      span {\n        display: block;\n      }\n    }\n  }\n\n  ${props => !props.desktop && css`\n    ${breakpoints.desktop`\n      display: none;\n    `}\n    ${breakpoints.tablet`\n      display: none;\n    `}\n  `}\n\n  ${props => props.mobile && breakpoints.mobile`\n    display: block;\n    position: relative;\n    width: auto;\n    display: flex;\n    flex-direction: row;\n    margin: 0;\n\n    &:not(:last-child) {\n      border-bottom: 0;\n    }\n\n    > * {\n      flex-direction: column;\n      flex-grow: 1;\n      align-items: center;\n      justify-content: center;\n      padding: 1rem 1.8rem 0.6rem;\n      height: auto;\n      min-height: 4.8rem;\n\n      &:hover {\n        width: auto;\n      }\n\n      span {\n        display: block;\n        font-size: 1.4rem;\n        margin-top: 0.2rem;\n        color: ${colors.palette.neutral};\n        text-align: center;\n      }\n\n      & + * {\n        border-left: 1px solid ${colors.palette.light};\n      }\n    }\n  `}\n`;\n\nexport const ExerciseToolbar = ({ icons }: { icons?: ExerciseIcons }) => {\n  if (!icons) {\n    return null;\n  }\n  const settings = Object.values(icons);\n  const mobile = settings.some(({ location }) => location?.toolbar?.mobile ?? true);\n  const desktop = settings.some(({ location }) => location?.toolbar?.desktop ?? false);\n  const topicUrl = icons.topic?.url;\n  const errataUrl = icons.errata?.url;\n\n  return <StyledToolbar {...{ mobile, desktop }}>\n    {topicUrl ? <a href={topicUrl} target=\"_blank\">\n      <FontAwesomeIcon icon={faBookOpen}></FontAwesomeIcon>\n      <span>View topic in textbook</span>\n    </a> : null}\n    {errataUrl ? <a href={errataUrl} target=\"_blank\">\n      <FontAwesomeIcon icon={faTriangleExclamation}></FontAwesomeIcon>\n      <span>Suggest a correction</span>\n    </a> : null}\n  </StyledToolbar>\n};\n","import styled, { css } from 'styled-components';\nimport { breakpoints, colors, mixins } from '../../src/theme';\nimport { ExerciseData } from '../../src/types';\nimport { faBookOpen } from '@fortawesome/free-solid-svg-icons/faBookOpen';\nimport { faTriangleExclamation } from '@fortawesome/free-solid-svg-icons/faTriangleExclamation';\nimport { faCircleInfo } from '@fortawesome/free-solid-svg-icons/faCircleInfo';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ExerciseIcons } from './Exercise';\n\ntype ExplanationType = 'multiple-choice' | 'two-step';\n\nconst TypeExplanations: { [key in ExplanationType]: string } = {\n  'multiple-choice': 'Select the best answer from the given list of distractors. Your instructor may or may not allow multiple attempts.',\n  'two-step': 'In a two-step question, OpenStax asks for your own answer first, then gives multiple-choice options to help you assess your learnings. \\\nRecalling the answer to a question from memory helps you to retain things longer.',\n}\n\nconst ItemWrapper = styled.div<{ mobile: boolean; desktop: boolean }>`\n  padding: 0.6rem 0.9rem;\n  .popover { display: none; }\n  &:hover {\n    svg path { fill: ${colors.palette.mediumBlue};}\n    .popover { display: flex; }\n  }\n  ${props => !props.desktop && css`\n    ${breakpoints.desktop`\n      display: none;\n    `}\n    ${breakpoints.tablet`\n      display: none;\n    `}\n  `}\n  ${props => !props.mobile && breakpoints.mobile`\n    display: none;\n  `}\n`;\n\nconst InnerWrapper = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nconst Popover = styled.div`\n  ${mixins.popover}\n  top: 3rem;\n  width: 20rem;\n  position: absolute;\n  font-size: 1.4rem;\n  line-height: 1.8rem;\n`;\n\ninterface PopoverItemProps {\n  text: string;\n  children: JSX.Element;\n  wrapperProps?: {\n    as: keyof JSX.IntrinsicElements;\n    href?: string;\n    target?: string;\n  },\n  mobile: boolean;\n  desktop: boolean;\n}\n\nconst PopoverItem = (props: PopoverItemProps) => (\n  <ItemWrapper\n    {...props.wrapperProps}\n    mobile={props.mobile}\n    desktop={props.desktop}\n    aria-label={props.text}\n  >\n    <InnerWrapper>\n      {props.children}\n      <Popover className=\"popover right\">\n        <div className=\"arrow\"></div>\n        <div className=\"content\">{props.text}</div>\n      </Popover>\n    </InnerWrapper>\n  </ItemWrapper>\n);\n\nconst PopoverItemsWrapper = styled.div`\n  max-width: 200px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  color: ${colors.palette.darkGray};\n  height: 1em;\n`;\n\nexport const ExerciseHeaderIcons = ({ exercise, icons }: {\n  exercise: ExerciseData, icons: ExerciseIcons\n}) => {\n  const defaultHeaderLocation = { desktop: true, mobile: false };\n  const items = [];\n  const isMultipleChoice = exercise.questions.every((q) => q.answers.length > 0);\n  let typeExplanation;\n\n  if (isMultipleChoice && exercise.questions.find((q) => q.formats.includes('free-response'))) {\n    typeExplanation = TypeExplanations['two-step'];\n  } else if (isMultipleChoice) {\n    typeExplanation = TypeExplanations['multiple-choice'];\n  }\n\n  if (icons.topic) {\n    items.push(\n      <PopoverItem\n        key='topic'\n        text='View topic in textbook'\n        wrapperProps={{ as: 'a', href: icons.topic.url, target: '_blank' }}\n        {...icons.topic.location?.header || defaultHeaderLocation}\n      >\n        <StyledFontAwesomeIcon icon={faBookOpen}></StyledFontAwesomeIcon>\n      </PopoverItem>\n    );\n  }\n\n  if (icons.errata) {\n    items.push(\n      <PopoverItem\n        key='errata'\n        text='Suggest a correction'\n        wrapperProps={{ as: 'a', href: icons.errata.url, target: '_blank' }}\n        {...icons.errata.location?.header || defaultHeaderLocation}\n      >\n        <StyledFontAwesomeIcon icon={faTriangleExclamation}></StyledFontAwesomeIcon>\n      </PopoverItem>\n    )\n  }\n\n  if (icons.info && typeExplanation) {\n    items.push(\n      <PopoverItem\n        key='type'\n        text={typeExplanation}\n        {...icons.info.location?.header || defaultHeaderLocation}\n      >\n        <StyledFontAwesomeIcon icon={faCircleInfo} height='16px' width='16px'></StyledFontAwesomeIcon>\n      </PopoverItem>\n    )\n  }\n\n  return (\n    <PopoverItemsWrapper>\n      {items}\n    </PopoverItemsWrapper>\n  );\n};\n","import { colors } from \"../../theme\";\nimport { css } from \"styled-components\";\n\nexport const exerciseStyles = css`\n  &.is-selected {\n    background-color: ${colors.card.header.background};\n    border-width: 0.2rem;\n\n    .step-card-footer,\n    .step-card-body,\n    .step-card-header {\n      background-color: ${colors.card.header.background} !important;\n    }\n\n    .openstax-question {\n      border-width: 0.2rem !important;\n    }\n  }\n\n  &.preview-card {\n    --spacing: 0.8rem;\n    margin: 0 auto auto auto !important;\n\n    [data-task-step-id] {\n      padding: 0;\n    }\n\n    .step-card-header,\n    .step-card-body {\n      background-color: ${colors.palette.white};\n      padding: var(--spacing);\n      font-size: 1.6rem;\n      line-height: 2rem;\n    }\n\n    .step-card-footer {\n      padding: 0 var(--spacing) var(--spacing);\n    }\n\n    .step-card-footer-inner {\n      padding-top: var(--spacing);\n    }\n\n    .answers-table {\n      margin: 0;\n    }\n\n    .exercise-context {\n      .os-title {\n        margin: 0 0 var(--spacing);\n      }\n      .os-subtitle {\n        margin: var(--spacing) 0;\n      }\n      figure {\n        float: left;\n        margin: 0;\n      }\n      img {\n        max-width: 16rem;\n      }\n      p:last-child {\n        margin-bottom: 0;\n      }\n    }\n    .openstax-question {\n      .openstax-answer {\n        padding: 0;\n        border: none;\n\n        .answer-label {\n          padding-top: var(--spacing);\n        }\n\n        .answer-letter-wrapper {\n          .answer-answer {\n            margin-left: var(--spacing);\n          }\n\n          &::before {\n            min-width: 2.3rem;\n            min-height: 2.3rem;\n            width: 2.3rem;\n            height: 2.3rem;\n          }\n        }\n\n        .answer-letter {\n          min-width: 2.8rem;\n          min-height: 2.8rem;\n          width: 2.8rem;\n          height: 2.8rem;\n          display: flex;\n        }\n      }\n\n      .question-feedback-content {\n        font-size: 1.6rem;\n      }\n\n      .points,\n      .question-feedback {\n        max-width: unset;\n      }\n    }\n\n    .step-card-footer .controls, .detailed-solution {\n      display: none;\n    }\n\n    .question-stem,\n    .question-feedback-content,\n    .question-info,\n    .exercise-context {\n      line-height: 2rem;\n    }\n\n    .question-info {\n      font-weight: bold;\n      font-size: 1.2rem;\n    }\n\n    .question-id {\n      font-weight: 400;\n      font-size: 1.2rem;\n    }\n\n    .question-stem {\n      color: ${colors.palette.neutralDarker};\n      font-weight: bold;\n      font-size: 1.6rem;\n    }\n  }\n`;\n","import React from 'react';\nimport scrollToElement from 'scroll-to-element';\nimport styled, { createGlobalStyle, css } from 'styled-components';\nimport { Answer, ExerciseData, ID, QuestionState, StepBase, StepWithData } from '../../../src/types';\nimport { InnerStepCard, OuterStepCard, TaskStepCard, TaskStepCardProps } from '../Card';\nimport { Content } from '../Content';\nimport { ExerciseQuestion } from '../ExerciseQuestion';\nimport { typesetMath } from '../../helpers/mathjax';\nimport { ExerciseToolbar, StyledToolbar } from '../ExerciseToolbar';\nimport { breakpoints } from '../../theme';\nimport { ExerciseHeaderIcons } from '../ExerciseHeaderIcons';\nimport { TypesetMathContext } from '../../hooks/useTypesetMath';\nimport { exerciseStyles } from './styles';\n\nconst StyledTaskStepCard = styled(TaskStepCard)`\n  font-size: calc(1.8rem * var(--content-text-scale));\n  line-height: calc(2.8rem * var(--content-text-scale));\n`;\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --content-text-scale: 1;\n  }\n`;\n\nconst ToolbarWrapper = styled.div<{\n  desktopToolbarEnabled: boolean;\n  mobileToolbarEnabled: boolean;\n}>`\n  ${props => props.desktopToolbarEnabled && css`\n    ${breakpoints.desktop`\n      ${StyledTaskStepCard} {\n        margin-left: 6.8rem;\n      }\n    `}\n    ${breakpoints.tablet`\n      ${StyledTaskStepCard} {\n        margin-left: 4.8rem;\n      }\n    `}\n    ${breakpoints.mobile`\n      ${StyledTaskStepCard} {\n        margin-left: 0;\n      }\n    `}\n  `}\n\n  ${props => props.mobileToolbarEnabled && css`\n    ${breakpoints.mobile`\n      ${StyledToolbar} + ${OuterStepCard} ${InnerStepCard} {\n        border-top-left-radius: 0;\n        border-top-right-radius: 0;\n      }\n    `}\n  `}\n`;\n\nconst TaskStepCardWithToolbar = (props: React.PropsWithChildren<TaskStepCardProps> &\n  Pick<ExerciseBaseProps, 'exerciseIcons'> & {\n    desktopToolbarEnabled: boolean;\n    mobileToolbarEnabled: boolean;\n    overlayChildren?: React.ReactNode;\n  }\n) => (\n  <ToolbarWrapper\n    desktopToolbarEnabled={props.desktopToolbarEnabled}\n    mobileToolbarEnabled={props.mobileToolbarEnabled}\n  >\n    <ExerciseToolbar icons={props.exerciseIcons} />\n    <StyledTaskStepCard overlayChildren={props.overlayChildren} {...props} />\n  </ToolbarWrapper>\n);\n\nconst Preamble = ({ exercise }: { exercise: ExerciseData }) => {\n  return (\n    <>\n      {exercise.context &&\n        <Content className=\"step-card-body exercise-context\"\n          block html={exercise.context} />}\n\n      {exercise.stimulus_html &&\n        <Content className=\"step-card-body exercise-stimulus\"\n          block html={exercise.stimulus_html} />}\n    </>\n  );\n};\n\ninterface ExerciseIconLocation {\n  desktop: boolean;\n  mobile: boolean;\n}\n\ninterface ExerciseIcon {\n  location?: {\n    /**\n     * @default {\n     *   desktop: true,\n     *   mobile: false\n     * }\n     **/\n    header?: ExerciseIconLocation;\n    /**\n     * @default {\n     *   desktop: false,\n     *   mobile: true\n     * }\n     **/\n    toolbar?: ExerciseIconLocation;\n  }\n}\n\nexport interface ExerciseIcons {\n  /** An object containing a URL for the errata form for this exercise and settings for rendering the icon. */\n  errata?: ExerciseIcon & { url: string };\n  /** An object containing a URL for textbook content relevant to the exercise and settings for rendering the icon. */\n  topic?: ExerciseIcon & { url: string };\n  /** An object of settings for rendering the info icon that describes the exercise type (multiple-choice, two-step, etc.) */\n  info?: ExerciseIcon;\n}\n\nexport interface ExerciseBaseProps {\n  /** An object containing a Step ID and Exercise UID */\n  step: StepBase;\n  /** An exercise object from the Exercises API */\n  exercise: ExerciseData;\n  numberOfQuestions: number;\n  /** The current question index. For multipart questions this is the first question number.  */\n  questionNumber: number;\n  /** A boolean that enables showing the amount of attempts remaining. */\n  hasMultipleAttempts: boolean;\n  /** A callback with the question_id when the Submit/Re-submit button is clicked. */\n  onAnswerSave: (question_id: number) => void;\n  /** A callback with the current question index when the Next/Continue button is clicked. */\n  onNextStep: (currentIndex: number) => void;\n  /** A boolean that enables labeling the correct answer and the selected incorrect answer */\n  labelAnswers?: boolean;\n  /** A boolean that enables always showing every answer feedback_html field. */\n  show_all_feedback?: boolean;\n  /** The question number to scroll into view when the component renders. */\n  scrollToQuestion?: number;\n  /** An object containing data for how to render the following icons:\n   * - An errata icon linking to the errata/feedback form\n   * - An info icon describing the exercise type (multiple-choice, two-step, etc.)\n   * - A topic icon linking to the relevant textbook location\n   */\n  exerciseIcons?: ExerciseIcons;\n  hasFeedback?: boolean;\n}\n\nexport interface ExerciseWithStepDataProps extends ExerciseBaseProps {\n  /** A Tutor Step object */\n  step: StepWithData;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  apiIsPending: boolean;\n  onAnswerChange: (answer: Answer) => void;\n  canUpdateCurrentStep: boolean;\n  answer_id_order?: ID[];\n}\n\nexport interface ExerciseWithQuestionStatesProps extends ExerciseBaseProps {\n  questionStates: { [key: ID]: QuestionState };\n  /** A callback with the IDs of the answer and question */\n  onAnswerChange: (answer: Omit<Answer, 'id'> & { id: number, question_id: number }) => void;\n}\n\nexport interface OverlayProps {\n  overlayChildren?: React.ReactNode;\n}\n\nexport const Exercise = styled(({\n  numberOfQuestions,\n  questionNumber,\n  step,\n  exercise,\n  show_all_feedback,\n  scrollToQuestion,\n  exerciseIcons,\n  overlayChildren,\n  labelAnswers = true,\n  previewMode = false,\n  ...props\n}: { className?: string, previewMode?: boolean } & (ExerciseWithStepDataProps | ExerciseWithQuestionStatesProps) & OverlayProps) => {\n  const legacyStepRender = 'feedback_html' in step;\n  const questionsRef = React.useRef<Array<HTMLDivElement>>([]);\n  const container = React.useRef<HTMLDivElement>(null);\n\n  const typesetExercise = React.useCallback(() => {\n    if (container.current) {\n      typesetMath(container.current);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const el = scrollToQuestion && questionsRef.current[scrollToQuestion];\n    if (el) {\n      scrollToElement(el);\n    }\n  }, [scrollToQuestion, exercise]);\n\n  const desktopToolbarEnabled = Object.values(exerciseIcons || {}).some(({ location }) => location?.toolbar?.desktop);\n  const mobileToolbarEnabled = Object.values(exerciseIcons || {}).some(({ location }) => location?.toolbar?.mobile);\n\n  return <TypesetMathContext.Provider value={typesetExercise}>\n    <GlobalStyle />\n    <TaskStepCardWithToolbar\n      step={step}\n      questionNumber={questionNumber}\n      numberOfQuestions={legacyStepRender ? numberOfQuestions : exercise.questions.length}\n      rightHeaderChildren={exerciseIcons ? <ExerciseHeaderIcons exercise={exercise} icons={exerciseIcons} /> : null}\n      showTotalQuestions={legacyStepRender}\n      desktopToolbarEnabled={desktopToolbarEnabled}\n      mobileToolbarEnabled={mobileToolbarEnabled}\n      {...(exerciseIcons ? { exerciseIcons: exerciseIcons } : null)}\n      className={props.className}\n      overlayChildren={overlayChildren}\n    >\n      <div ref={container} >\n        <Preamble exercise={exercise} />\n\n        {exercise.questions.map((q, i) => {\n          const state = { ...(legacyStepRender ? step : props['questionStates'][q.id]) };\n          return (\n            <ExerciseQuestion\n              {...props}\n              {...{ ...state, available_points: undefined }}\n              ref={(el: HTMLDivElement) => questionsRef.current[questionNumber + i] = el}\n              exercise_uid={exercise.uid}\n              key={q.id}\n              question={q}\n              questionNumber={questionNumber + i}\n              choicesEnabled={state.canAnswer}\n              displaySolution={true}\n              detailedSolution={state.solution?.content_html}\n              show_all_feedback={show_all_feedback}\n              labelAnswers={labelAnswers}\n              tableFeedbackEnabled={show_all_feedback && !legacyStepRender}\n              canUpdateCurrentStep={\n                // misleading prop name, we want to show a continue button for completed questions\n                // that aren't the last question, which requires this prop to be true\n                'canUpdateCurrentStep' in props ?\n                  props.canUpdateCurrentStep : !(i + 1 === exercise.questions.length)\n              }\n              previewMode={previewMode}\n            />\n          )\n        }\n        )}\n      </div>\n    </TaskStepCardWithToolbar>\n  </TypesetMathContext.Provider>;\n})`\n  ${exerciseStyles}\n`;\n","const SvgComponent = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M14.556 2.09149C15.2296 1.78355 16 2.26721 16 2.99824V10.5951C16 10.9241 15.8362 11.2328 15.5605 11.4188C14.4229 12.1864 13.2007 12.6956 11.6715 12.6956C9.53267 12.6956 8.12768 11.6087 6.42651 11.6087C4.81213 11.6087 3.69241 11.923 2.79365 12.3V15.25C2.79365 15.6642 2.45254 16 2.03175 16H1.52381C1.10302 16 0.761905 15.6642 0.761905 15.25V3.18577C0.301492 2.86952 0 2.34455 0 1.74999C0 0.75924 0.836349 -0.0391985 1.852 0.00148899C2.75575 0.0376765 3.49578 0.75049 3.55203 1.63912C3.56854 1.8998 3.52632 2.1488 3.43819 2.37543C4.09648 2.13699 4.80613 1.99999 5.59835 1.99999C7.73718 1.99999 9.14216 3.08696 10.8433 3.08696C12.1289 3.08696 13.4659 2.5899 14.556 2.09149ZM2.79365 4.20718V6.40999C3.71429 6.07656 4.41841 5.85281 5.13016 5.75656V3.51999C4.38413 3.5878 3.84635 3.82593 2.79365 4.20718ZM9.80317 4.49437C8.96454 4.34837 8.21949 4.05752 7.46667 3.82749V5.93437C8.23413 6.14393 8.9767 6.44824 9.80317 6.63156V4.49437ZM5.13016 5.75656V7.94531C6.1713 7.85224 6.84159 7.92546 7.46667 8.06406V5.93437C6.66517 5.71452 5.98791 5.6399 5.13016 5.75656ZM7.46667 10.2012C8.30279 10.3466 9.04546 10.6365 9.80317 10.8681V8.76156C9.03248 8.55074 8.29397 8.24749 7.46667 8.06406V10.2012ZM2.79365 10.6906C3.54349 10.4284 4.31079 10.2581 5.13016 10.1731V7.94531C4.30127 8.01874 3.62667 8.19656 2.79365 8.48781V10.6906ZM14.4762 3.76562C13.8 4.04218 12.9971 4.31687 12.1397 4.4678V6.71499C13.0067 6.57874 13.7279 6.27437 14.4762 5.96843V3.76562ZM14.4762 10.3269V8.12406C13.7717 8.56781 12.9276 8.83062 12.1397 8.93718V11.1741C12.9356 11.0997 13.679 10.8291 14.4762 10.3269ZM9.80317 6.63156V8.76156C10.6179 8.9845 11.283 9.05349 12.1397 8.93718V6.71499C11.3143 6.84584 10.5542 6.79862 9.80317 6.63156Z\" fill=\"currentColor\"/>\n  </svg>\n);\nexport default SvgComponent;\n","import styled, { css } from 'styled-components';\nimport { colors, breakpoints } from '../theme';\nimport FlagIcon from '../assets/flag';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons/faCheck';\nimport { faXmark } from '@fortawesome/free-solid-svg-icons/faXmark';\nimport { faCircle } from '@fortawesome/free-solid-svg-icons/faCircle';\nimport { faQuestion } from '@fortawesome/free-solid-svg-icons';\n\nconst ProgressBarWrapper = styled.nav`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 1rem;\n  padding: 2rem;\n\n  ${breakpoints.mobile`\n    padding: 1.6rem 0.8rem;\n  `}\n`;\n\nconst StyledItemWrapper = styled.span`\n  display: flex;\n  align-items: center;\n  position: relative;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst handleVariant = (variant: ProgressBarItemVariant) => {\n  switch (variant) {\n    case 'isStatus':\n      return css`\n        background-color: ${colors.palette.neutralBright};\n      `;\n    case 'isCorrect':\n      return css`\n        color: ${colors.answer.correct};\n        background-color: #E8F4D8;\n      `;\n    case 'isIncorrect':\n      return css`\n        color: ${colors.answer.incorrect};\n        background-color: #F8E8EA;\n      `;\n    case 'isIncomplete':\n      return css`\n        background-color: ${colors.palette.neutralBright};\n      `;\n    default:\n      return css`\n        background-color: ${colors.palette.neutralLight};\n      `;\n  }\n};\n\nconst shadowCss = 'box-shadow: 0px 1px 4px 0px #00000066;';\n\nexport const StyledItem = styled.button<{ variant: ProgressBarItemVariant, isActive: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${props => props.isActive ? '4rem' : '3.2rem'};\n  height: ${props => props.isActive ? '4rem' : '3.2rem'};\n  border: 0;\n  border-radius: 50%;\n  margin: ${props => props.isActive ? '0' : '0 0.3rem'};\n  font-size: 1.6rem;\n  font-weight: bold;\n  cursor: pointer;\n  color: ${colors.palette.neutralDarker};\n  ${props => props.isActive ? css`\n    ${shadowCss}\n    & + [data-icon] {\n      bottom: 0;\n      right: 0;\n    }\n  ` : null}\n  ${props => handleVariant(props.variant)}\n  &:hover {\n    ${shadowCss}\n  }\n`;\n\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  color: ${props => props.color};\n  position: absolute;\n  bottom: 0.4rem;\n  right: 0.3rem;\n  height: 0.8rem;\n  width: 0.8rem;\n  padding: 0.1rem;\n  font-size: 1.2rem;\n  border-radius: 50%;\n`;\n\nconst ItemIcon = ({ variant }: { variant: ProgressBarItemVariant }) => {\n  if (variant === 'isStatus') {\n    return null;\n  }\n\n  const variantData = {\n    isCorrect: {\n      icon: faCheck,\n      background: colors.answer.correct,\n      color: colors.palette.white,\n      label: 'Correct',\n    },\n    isIncorrect: {\n      icon: faXmark,\n      background: colors.answer.incorrect,\n      color: colors.palette.white,\n      label: 'Incorrect',\n    },\n    isIncomplete: {\n      icon: faQuestion,\n      background: colors.answer.neutral,\n      color: colors.palette.white,\n      label: 'Incomplete'\n    },\n    null: {\n      icon: faCircle,\n      background: colors.answer.neutral,\n      color: colors.answer.neutralDark,\n      label: 'No feedback'\n    }\n  }[String(variant)];\n\n  if (!variantData) return null;\n\n  return <StyledFontAwesomeIcon\n    icon={variantData.icon}\n    color={variantData.color}\n    style={{ background: variantData.background }} // for the icon background of noFeedback\n    height='16px'\n    width='16px'\n    aria-label={variantData.label}\n    aria-hidden={undefined}\n  />;\n}\n\nexport interface ProgressBarProps<S extends {variant: ProgressBarItemVariant}> {\n  steps: S[];\n  activeIndex: number | null;\n  goToStep: (index: number, step: S) => void;\n}\n\nexport interface ProgressBarItemProps<S> {\n  index: number;\n  isActive: boolean;\n  step: S;\n  goToStep: (index: number, step: S) => void;\n}\n\nexport type ProgressBarItemVariant = 'isCorrect' | 'isIncorrect' | 'isStatus' | 'isIncomplete' | null;\n\nexport const ProgressBarItem = <S extends {variant: ProgressBarItemVariant}>({index, isActive, step, goToStep}: ProgressBarItemProps<S>) =>\n  <StyledItemWrapper>\n    <StyledItem\n      variant={step.variant}\n      isActive={isActive}\n      onClick={() => goToStep(index, step)}\n      aria-current={isActive ? 'location' : 'false'}\n      aria-label={step.variant === 'isStatus' ? 'Assignment status' : `Question ${index + 1}` }\n    >\n      {step.variant === 'isStatus' ? <FlagIcon /> : index + 1}\n    </StyledItem>\n    <ItemIcon variant={step.variant} />\n  </StyledItemWrapper>;\n\nexport const ProgressBar = <S extends {variant: ProgressBarItemVariant}>({ steps, activeIndex, goToStep }: ProgressBarProps<S>) =>\n  <ProgressBarWrapper aria-label=\"Breadcrumbs\">\n    {steps.map((step, index) => <ProgressBarItem\n      key={index}\n      index={index}\n      isActive={index === activeIndex}\n      step={step}\n      goToStep={goToStep}\n    />)}\n  </ProgressBarWrapper>;\n","import { BulletList } from \"react-content-loader\";\nimport { colors } from \"../../src/theme\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  max-width: 1000px;\n  @media(min-width: 960px) {\n    // Around the height of a multiple choice with 4 options\n    min-height: 53.8rem;\n  }\n  padding: 2rem;\n  margin: 2rem;\n  border: 1px solid ${colors.palette.light};\n  border-radius: 0.25rem;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  > svg {\n    max-width: 600px;\n    flex-grow: 1;\n  }\n`;\n\nexport const Loader = () => <Wrapper><BulletList uniqueKey=\"OSLoader\" /></Wrapper>;\n","import { colors } from '../../theme';\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  width: fit-content;\n`;\n\nexport const StyledButton = styled.button`\n    width: 7.4rem;\n    height: 8.7rem;\n    color: white;\n    border: none;\n\n    &:hover {\n      box-shadow: 0 0.1rem 0.4rem 0 #00000066;\n    }\n    \n    span {\n        line-height: 1.3rem;\n        font-size: 1.4rem;\n        font-weight: bold;\n    }\n\n    &.include {\n        background-color: ${colors.palette.mediumBlue};\n        padding-top: 1.4rem;\n    }\n\n    &.remove {\n        background-color: ${colors.palette.orange};\n        padding-top: 1.4rem;\n    }\n\n    &.details {\n        background-color: ${colors.palette.neutralDarker};\n    }\n`;\n\nexport const StyledIcon = styled(FontAwesomeIcon)`\n    border-radius: 50%;\n    background-color: ${colors.palette.white};\n    vertical-align: middle;\n    position: relative;\n    bottom: 0.5rem;\n    font-weight: 900;\n    line-height: 1.4rem;\n\n\n    &.include {\n        color: ${colors.palette.mediumBlue};\n    }\n\n    &.remove {\n        color: ${colors.palette.orange};\n    }\n\n    &.details {\n        color: ${colors.palette.neutralDarker};\n    }\n`;\n","import React from \"react\";\nimport { ExerciseData, ExerciseQuestionData, StepBase, QuestionState, ID } from \"src/types\";\nimport { Exercise } from \"./Exercise\";\nimport styled from \"styled-components\";\n\nconst StyledExercise = styled(Exercise)<{ showAllFeedback?: boolean; showCorrectAnswer?: boolean }>`\n  ${({ showAllFeedback }) => !showAllFeedback && `\n    .step-card-footer {\n      display: none;\n    }\n  `}\n  ${({ showCorrectAnswer }) => !showCorrectAnswer && `\n    .answer-answer {\n      font-weight: normal;\n    }\n  `}\n`;\n\nexport interface ExercisePreviewProps {\n  exercise: ExerciseData;\n  selected?: boolean;\n  showAllFeedback?: boolean;\n  showChosenAnswer?: boolean;\n  showCorrectAnswer?: boolean;\n  labelAnswers?: boolean;\n  overlayChildren?: React.ReactNode;\n  questionStates?: { [key: ID]: QuestionState };\n}\n\nexport const ExercisePreview = ({\n  exercise,\n  selected,\n  showAllFeedback = false,\n  showChosenAnswer = false,\n  showCorrectAnswer = false,\n  labelAnswers = false,\n  overlayChildren,\n  questionStates\n}: ExercisePreviewProps) => {\n\n  const hideAnswerFeedback = (exercise: ExerciseData) => {\n    exercise.questions.map(question =>\n      question.answers.map(a => {\n        a.feedback_html = '';\n        a.correctness = showCorrectAnswer ? a.correctness : undefined;\n      }));\n    return exercise;\n  };\n\n  const exercisePreviewProps = (exercise: ExerciseData) => {\n    const formatAnswerData = (questions: ExerciseQuestionData[]) => questions.map((q) => {\n      // Note: will only work as long as both ExerciseData and QuestionState use the same type for the IDs\n      const questionState = (questionStates ?? {})[q.id];\n\n      return {\n        id: q.id,\n        answer_id: (showChosenAnswer ? questionState : undefined)?.answer_id ?? '',\n        correct_answer_id: (q.answers.find((a) => a.correctness === '1.0')?.id || ''),\n        content_html:\n          showAllFeedback &&\n          q.collaborator_solutions?.find(solution => solution.solution_type === 'detailed')?.content_html,\n      }\n    });\n\n    const questionStateFields = formatAnswerData(exercise.questions).reduce(\n      (acc, answer) => {\n        const { id, answer_id, correct_answer_id, content_html } = answer;\n        return {\n          ...acc,\n          [id]: {\n            answer_id,\n            correct_answer_id,\n            is_completed: showCorrectAnswer,\n            solution: {\n              content_html,\n            }\n          }\n        };\n      }, {}\n    );\n\n    const step: StepBase = {\n      id: 1,\n      uid: exercise.uid,\n      available_points: '1.0',\n    };\n\n    return {\n      canAnswer: true,\n      needsSaved: true,\n      hasMultipleAttempts: false,\n      onAnswerChange: () => undefined,\n      onAnswerSave: () => undefined,\n      onNextStep: () => undefined,\n      apiIsPending: false,\n      canUpdateCurrentStep: false,\n      step: step,\n      questionNumber: exercise.number as number,\n      numberOfQuestions: exercise.questions.length,\n      questionStates: questionStateFields,\n      labelAnswers,\n      show_all_feedback: showAllFeedback,\n    };\n  };\n\n  return (\n    <StyledExercise\n      exercise={showAllFeedback ? exercise : hideAnswerFeedback(exercise)}\n      className={`preview-card ${selected ? 'is-selected' : ''}`}\n      previewMode\n      overlayChildren={overlayChildren}\n      {...exercisePreviewProps(exercise)}\n    />\n  );\n};\n","import React from \"react\";\nimport { faPlus, faMinus, faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\nimport { StyledContainer, StyledButton, StyledIcon } from \"./styles\";\n\nexport interface IncludeRemoveQuestionProps {\n  // Prop that defines the variant of the button\n  buttonVariant: 'include' | 'remove';\n  // Method invoked when the include button is clicked\n  onIncludeHandler: () => void;\n  // Method invoked when the remove button is clicked\n  onRemoveHandler: () => void;\n  // Method invoked when the details button is pressed\n  onClickDetails?: () => void;\n}\n\nexport const IncludeRemoveQuestion = (\n  { buttonVariant, onIncludeHandler, onRemoveHandler, onClickDetails }: IncludeRemoveQuestionProps) => {\n\n  const buttonIcon = React.useMemo(() => buttonVariant === 'include' ? faPlus : faMinus, [buttonVariant]);\n  const onClickHandler = (variant: 'include' | 'remove') => {\n    switch (variant) {\n      case 'include':\n        onIncludeHandler();\n        break;\n      case 'remove':\n        onRemoveHandler();\n        break;\n    }\n  };\n\n  const generateButtonText = (string: string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1) + ' question';\n  };\n\n  return (\n    <StyledContainer>\n      <StyledButton className={buttonVariant} onClick={() => onClickHandler(buttonVariant)} aria-label={buttonVariant}>\n        <StyledIcon className={buttonVariant} icon={buttonIcon} aria-label={buttonVariant + ' question'} border size=\"lg\" />\n        <span>{generateButtonText(buttonVariant)}</span>\n      </StyledButton>\n      <StyledButton className=\"details\" aria-label=\"details\" onClick={onClickDetails}>\n        <StyledIcon className=\"details\" icon={faEllipsisH} border size=\"lg\" />\n        <span>Details</span>\n      </StyledButton>\n    </StyledContainer>\n  );\n}; "],"names":["ALPHABET","isAnswerIncorrect","answer","incorrectAnswerId","id","countWords","text","words","trim","match","length","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","TypesetMathContext","React","createContext","Error","Content","_ref","html","component","_ref$block","block","props","_objectWithoutPropertiesLoose","_excluded","typesetMath","useContext","useEffect","undefined","cloneElement","_extends","_jsx","jsx","dangerouslySetInnerHTML","__html","SimpleFeedback","children","contentRenderer","className","classnames","Feedback","wrapperClasses","position","_jsxs","palette","red","danger","darkRed","lightRed","green","lightGreen","darkGreen","paleYellow","teal","blue","mediumBlue","lightBlue","neutralLightBlue","tangerine","gray","darkGray","pale","light","white","neutralLightest","neutralCool","neutralBright","neutralLighter","neutralLight","neutralMedium","neutral","neutralThin","neutralDark","neutralFeedback","neutralDarker","black","orange","colors","hover","checked","correct","incorrect","popover","arrowOuterColor","borderColor","card","header","background","body","button","backgroundHover","backgroundActive","freeResponse","color","breakpoints","mobile","css","_taggedTemplateLiteralLoose","BREAKPOINTS","apply","slice","call","arguments","tablet","mixins","answerColor","invertBubble","answerChecked","answerCorrect","answerIncorrect","answerHover","answerCorrectAnswer","resetText","stepCardPadding","visuallyHidden","StyledAnswerIndicator","styled","div","state","AnswerIndicator","isCorrect","isIncorrect","isSelected","hasCorrectAnswer","AnswerAnswer","_props$answer","content_html","feedback_html","show_all_feedback","tableFeedbackEnabled","jsxs","role","labelAnswers","TeacherReview","answered_count","iter","percent","selected_count","Math","round","cn","AnswerChoice","onChangeAnswer","type","disabled","onKeyPress","qid","feedbackId","_props$labelAnswers","ariaLabel","_Fragment","Fragment","correctIncorrectIcon","name","onChange","htmlFor","AnswerBody","Answer","answerId","correctAnswerId","isChecked","isAnswerChecked","correctness","isAnswerCorrect","classes","displayName","AnswersTable","idCounter","question","_props$type","correct_answer_id","correct_answer_feedback_html","previewMode","_props$show_all_feedb","answerIdOrder","instructions","hideAnswers","idOrder","feedback","questionAnswerProps","answer_id","choicesEnabled","answersHtml","answers","sort","a","b","indexOf","map","i","additionalProps","question_id","parseInt","key","answerProps","Object","assign","push","index","forEach","item","spliceIndex","splice","InnerStepCard","OuterStepCard","StepCardHeader","StepCardQuestion","StyledOverlay","StepCard","questionNumber","numberOfQuestions","showTotalQuestions","stepType","isHomework","availablePoints","unpadded","questionId","multipartBadge","leftHeaderChildren","rightHeaderChildren","headerTitleChildren","overlayChildren","otherProps","overlayRef","useRef","_useState","useState","showOverlay","setShowOverlay","formattedQuestionNumber","handleOverlayFocus","useCallback","hideFocusableElements","_document$getElementB","Array","from","document","getElementById","querySelectorAll","el","setAttribute","currentOverlayRef","current","addEventListener","removeEventListener","ref","onMouseOver","onMouseLeave","onBlur","event","contains","relatedTarget","tabIndex","TaskStepCard","_ref2","step","_excluded2","task","uid","StyledButton","Button","isWaiting","waitingText","GlobalStyle","createGlobalStyle","CompletionStatusCard","CompletionHeader","h2","CompletionStatus","numberCompleted","handleClick","allCompleted","someCompleted","buttonText","split","toLowerCase","onClick","StyledQuestion","Question","forwardRef","exerciseUid","solution","exercise_uid","context","hidePreambles","stem_html","_question$collaborato","collaborator_solutions","formats","stimulus_html","is_deleted","_question$collaborato2","displaySolution","find","s","hasSolution","join","QuestionHtml","hidden","displayFormats","FormatsListing","_props$html","_ref$formats","format","StepCardFooter","TextAreaErrorStyle","StyledFreeResponse","SyledQuestionStem","InfoRow","hasChildren","FreeResponseTextArea","textarea","isOverWordLimit","readOnly","RevertButton","FreeResponseInput","cancelHandler","defaultValue","infoRowChildren","isSubmitDisabled","saveHandler","submitBtnLabel","textHasChanged","wordLimit","questionProps","placeholder","AttemptsRemaining","count","PublishedComments","published_comments","SaveButton","willContinue","attempt_number","NextButton","canUpdateCurrentStep","FreeResponseReview","_ref3","free_response","ExerciseQuestion","answer_id_order","onAnswerChange","is_completed","hasMultipleAttempts","attempts_remaining","detailedSolution","canAnswer","needsSaved","apiIsPending","onAnswerSave","onNextStep","available_points","hasFeedback","_React$useState","shouldContinue","setShouldContinue","MATHJAX_CONFIG","extensions","showProcessingMessages","skipStartupTypeset","styles","left","right","visibility","tex2jax","displayMath","inlineMath","findUnprocessedMath","root","processedMath","findProcessedMath","filter","node","findLatexNodes","latexNodes","_i","_Array$from","formula","getAttribute","classList","textContent","tagName","add","resolveOrWait","resolve","remainingTries","setTimeout","typesetDocumentPromise","windowImpl","Promise","MathJax","Hub","Queue","isEmpty","Typeset","_step","result","_iterator","_createForOfIteratorHelperLoose","done","value","markLatexNodesRendered","typesetLatexNodes","mathMLNodes","typesetMathMLNodes","typesetDocument","getTypesetDocument","memoize","debounce","leading","trailing","bind","cache","WeakMap","startMathJax","once","window","configuredCallback","HTML","Cookie","prefix","Configured","Register","StartupHook","script","createElement","src","async","head","appendChild","Config","processSectionDelay","AuthorInit","StyledToolbar","desktop","ExerciseToolbar","_icons$topic","_icons$errata","icons","settings","values","some","_location$toolbar$mob","_location$toolbar","location","toolbar","_location$toolbar$des","_location$toolbar2","topicUrl","topic","url","errataUrl","errata","href","target","FontAwesomeIcon","icon","faBookOpen","faTriangleExclamation","ItemWrapper","InnerWrapper","Popover","PopoverItem","wrapperProps","PopoverItemsWrapper","StyledFontAwesomeIcon","ExerciseHeaderIcons","typeExplanation","_icons$topic$location","_icons$errata$locatio","_icons$info$location","exercise","defaultHeaderLocation","items","isMultipleChoice","questions","every","q","includes","as","info","faCircleInfo","height","width","exerciseStyles","StyledTaskStepCard","ToolbarWrapper","desktopToolbarEnabled","mobileToolbarEnabled","TaskStepCardWithToolbar","exerciseIcons","Preamble","Exercise","scrollToQuestion","_ref2$labelAnswers","_ref2$previewMode","legacyStepRender","questionsRef","container","typesetExercise","then","querySelector","MATH_DATA_SELECTOR","console","warn","e","reject","scrollToElement","_ref4","Provider","_state$solution","_createElement","SvgComponent","viewBox","fill","xmlns","d","ProgressBarWrapper","nav","StyledItemWrapper","span","shadowCss","StyledItem","isActive","variant","handleVariant","ItemIcon","variantData","faCheck","label","faXmark","isIncomplete","faQuestion","null","faCircle","String","style","ProgressBarItem","goToStep","FlagIcon","Wrapper","StyledContainer","StyledIcon","StyledExercise","showAllFeedback","showCorrectAnswer","selected","_ref3$showAllFeedback","_ref3$showChosenAnswe","showChosenAnswer","_ref3$showCorrectAnsw","_ref3$labelAnswers","questionStates","hideAnswerFeedback","questionStateFields","_answer_id","_q$answers$find","_q$collaborator_solut","_q$collaborator_solut2","solution_type","reduce","acc","_extends2","number","exercisePreviewProps","string","buttonVariant","onIncludeHandler","onRemoveHandler","onClickDetails","buttonIcon","useMemo","faPlus","faMinus","onClickHandler","border","size","charAt","toUpperCase","faEllipsisH","BulletList","uniqueKey","activeIndex","steps"],"mappings":"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"}