{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/components/Content.tsx","../src/components/Feedback.tsx","../src/components/Answer.tsx","../src/constants.ts","../src/components/AnswersTable.tsx","../src/theme.ts","../src/components/Question.tsx","../src/components/Button.tsx","../src/components/StepCardFooter.tsx","../src/components/FreeResponseInput.tsx","../src/components/Card.tsx","../src/components/ExerciseQuestion.tsx","../src/components/Exercise.tsx"],"sourcesContent":["import { Answer, ChosenAnswer, ID } from '../src/types';\n\nexport const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\nconst MAX_CORRECTNESS = '1.0';\n\nexport const isAnswerCorrect = function(answer: Answer, correctAnswerId?: ID | null) {\n  // if answer does not have an id, check the isCorrect property.\n  if (!(answer.id || correctAnswerId)) {\n    return answer.isCorrect;\n  }\n  let isCorrect = answer.id === correctAnswerId;\n  if (answer.correctness != null) { isCorrect = (answer.correctness === MAX_CORRECTNESS); }\n\n  return isCorrect;\n};\n\nexport const isAnswerIncorrect = function(answer: Answer, incorrectAnswerId?: ID) {\n  // Allow multiple attempts to show incorrectness without the correct_answer_id\n  return answer.id === incorrectAnswerId;\n};\n\nexport const isAnswerChecked = (answer: Answer, chosenAnswer?: ChosenAnswer) =>\n  Boolean((chosenAnswer || []).find( a => a == answer.id));\n\nexport function countWords(text: string) {\n  const trimmedText = text.trim();\n  //https://css-tricks.com/build-word-counter-app/\n  const words = trimmedText.match(/\\b[-?(\\w+)?]+\\b/gi);\n  if(!words) return 0;\n  return words.length;\n}\n","import React from \"react\";\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\ntype ComponentType = keyof JSX.IntrinsicElements | React.JSXElementConstructor<any>;\n\nexport interface ContentProps<T extends ComponentType | undefined> {\n  className?: string;\n  component?: T extends undefined ? undefined :\n    T extends ComponentType ? React.ReactComponentElement<T>:\n    never;\n  html: string;\n  block?: boolean;\n}\n\nexport const Content = (<T extends ComponentType | undefined>(\n  {html, component, block = false, ...props}: ContentProps<T>\n) => {\n  if (component !== undefined) {\n    return React.cloneElement(component, {html, ...props});\n  }\n  if (block) {\n    return <div dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  } else {\n    return <span dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  }\n});\n","import classnames from 'classnames';\nimport { Content } from './Content';\n\ninterface FeedbackProps {\n  position?: 'top' | 'bottom' | 'left' | 'right';\n  children: string;\n  className?: string;\n  contentRenderer?: JSX.Element;\n}\n\nconst SimpleFeedback = (props: Pick<FeedbackProps, 'children' | 'className' | 'contentRenderer'>) => (\n  <aside>\n    <Content\n      component={props.contentRenderer}\n      className={classnames('question-feedback-content', 'has-html', props.className)}\n      html={props.children}\n      block={true} />\n  </aside>\n);\n\nconst Feedback = (props: FeedbackProps) => {\n  const position = props.position || 'bottom';\n  const wrapperClasses = classnames('question-feedback', position);\n\n  return (\n    <aside className={wrapperClasses}>\n      <div className=\"arrow\" aria-label=\"Answer Feedback\" />\n      <SimpleFeedback {...props}>\n        {props.children}\n      </SimpleFeedback>\n    </aside>\n  );\n};\n\nexport { Feedback, SimpleFeedback };\n","import cn from 'classnames';\nimport { ReactNode } from 'react';\nimport { ALPHABET, isAnswerChecked, isAnswerCorrect, isAnswerIncorrect } from '../utils';\nimport { Answer as AnswerType, ChosenAnswer, ID } from '../types';\nimport { Content } from './Content';\nimport { SimpleFeedback } from './Feedback';\n\nexport interface AnswerProps {\n  answer: AnswerType;\n  iter: number;\n  qid: ID;\n  type: 'teacher-review' | 'teacher-preview' | 'student' | 'student-mpp';\n  hasCorrectAnswer?: boolean;\n  onChangeAnswer: () => void;\n  disabled: boolean;\n  chosenAnswer: ChosenAnswer;\n  correctAnswerId?: ID | null;\n  incorrectAnswerId?: ID;\n  onKeyPress?: () => void;\n  answered_count?: number;\n  correctIncorrectIcon?: ReactNode,\n  radioBox?: ReactNode;\n  contentRenderer?: JSX.Element;\n  show_all_feedback?: boolean;\n}\n\nexport const Answer = (props: AnswerProps) => {\n  const {\n    type,\n    iter,\n    answer,\n    disabled,\n    onKeyPress,\n    qid,\n    chosenAnswer,\n    correctAnswerId,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    answered_count,\n    contentRenderer,\n    show_all_feedback\n  } = props;\n\n  let body, feedback, selectedCount;\n\n  const isChecked = isAnswerChecked(answer, chosenAnswer);\n  const isCorrect = isAnswerCorrect(answer, correctAnswerId);\n  const isIncorrect = isAnswerIncorrect(answer, incorrectAnswerId);\n\n  const correctIncorrectIcon = (\n    <div className=\"correct-incorrect\">\n      {isCorrect && props.correctIncorrectIcon}\n    </div>\n  );\n\n  const classes = cn('answers-answer', {\n    'disabled': disabled,\n    'answer-checked': isChecked,\n    'answer-correct': isCorrect && type !== 'student-mpp',\n    'answer-incorrect': incorrectAnswerId && isAnswerIncorrect(answer, incorrectAnswerId),\n  });\n\n  let ariaLabel = `${isChecked ? 'Selected ' : ''}Choice ${ALPHABET[iter]}`;\n  // somewhat misleading - this means that there is a correct answer,\n  // not necessarily that this answer is correct\n  if (hasCorrectAnswer) {\n    ariaLabel += `(${isCorrect ? 'Correct' : 'Incorrect'} Answer)`;\n  }\n  ariaLabel += ':';\n\n  let onChangeAnswer, radioBox;\n\n  if (!hasCorrectAnswer\n    && (type !== 'teacher-review')\n    && (type !== 'teacher-preview')\n    && (type !== 'student-mpp')) {\n    ({ onChangeAnswer } = props);\n  }\n\n  if (onChangeAnswer) {\n    radioBox = (\n      <input\n        type=\"radio\"\n        className=\"answer-input-box\"\n        checked={isChecked}\n        id={`${qid}-option-${iter}`}\n        name={`${qid}-options`}\n        onChange={onChangeAnswer}\n        disabled={disabled}\n      />\n    );\n  }\n\n  if (show_all_feedback && answer.feedback_html) {\n    feedback = (\n      <SimpleFeedback key=\"question-mc-feedback\" contentRenderer={contentRenderer}>\n        {answer.feedback_html}\n      </SimpleFeedback>\n    );\n  }\n\n  if (type === 'teacher-review') {\n    let percent = 0;\n    if (answer.selected_count && answered_count) {\n      percent = Math.round((answer.selected_count / answered_count) * 100);\n    }\n    selectedCount = (\n      <span\n        className=\"selected-count\"\n        data-percent={`${percent}`}\n      >\n        {answer.selected_count}\n      </span>\n    );\n\n    body = (\n      <div className=\"review-wrapper\">\n        <div className={cn('review-count', { 'green': isCorrect, 'red': !isCorrect })}>\n          {selectedCount}\n          <span className={cn('letter', { 'green': isCorrect, 'red': !isCorrect })}>\n            {ALPHABET[iter]}\n          </span>\n        </div>\n\n        <div className=\"answer-answer\">\n          <Content className=\"answer-content\" component={contentRenderer} html={answer.content_html} />\n          {feedback}\n        </div>\n      </div>\n    );\n  } else {\n    body = (\n      <>\n        {type === 'teacher-preview' && correctIncorrectIcon}\n        {selectedCount}\n        {radioBox}\n        <label\n          onKeyPress={onKeyPress}\n          htmlFor={`${qid}-option-${iter}`}\n          className=\"answer-label\">\n          <span className=\"answer-letter-wrapper\">\n            <button\n              onClick={onChangeAnswer}\n              aria-label={ariaLabel}\n              className=\"answer-letter\"\n              disabled={disabled || isIncorrect}\n              data-test-id={`answer-choice-${ALPHABET[iter]}`}\n            >\n              {ALPHABET[iter]}\n            </button>\n          </span>\n          <div className=\"answer-answer\">\n            <Content className=\"answer-content\" component={contentRenderer} html={answer.content_html} />\n            {feedback}\n          </div>\n        </label>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"openstax-answer\">\n      <section role=\"region\" className={classes}>\n        {body}\n      </section>\n    </div>\n  );\n}\nAnswer.displayName = 'OSAnswer';\n","import { AnswerDisplayType } from './types';\n\nexport const defaultAnswerType: AnswerDisplayType = 'student';\n","import { defaultAnswerType } from \"../constants\";\nimport { Answer as AnswerType, AnswerDisplayType, ID, ExerciseQuestionData } from \"src/types\";\nimport { Answer } from \"./Answer\";\nimport { Feedback } from \"./Feedback\";\n\nexport interface AnswersTableProps {\n  question: ExerciseQuestionData;\n  type?: AnswerDisplayType;\n  answer_id?: ID;\n  correct_answer_id?: ID | null;\n  incorrectAnswerId?: ID;\n  answerIdOrder?: ID[],\n  feedback_html: string;\n  correct_answer_feedback_html?: string;\n  answered_count?: number;\n  show_all_feedback?: boolean;\n  onChangeAnswer: () => void;\n  hideAnswers: boolean;\n  hasCorrectAnswer?: boolean;\n  onChangeAttempt?: () => void;\n  choicesEnabled?: boolean;\n  onKeyPress?: () => void;\n  contentRenderer?: JSX.Element;\n  instructions?: JSX.Element;\n}\n\nexport const AnswersTable = (props: AnswersTableProps) => {\n  let idCounter = 0;\n\n  const {\n    question, hideAnswers, type = defaultAnswerType, answered_count, choicesEnabled, correct_answer_id,\n    incorrectAnswerId, answer_id, feedback_html, correct_answer_feedback_html,\n    show_all_feedback = false, hasCorrectAnswer, onChangeAnswer, onKeyPress, answerIdOrder, instructions\n  } = props;\n  if (hideAnswers) { return null; }\n\n  const { id } = question;\n\n  const feedback: { index: number, html: string }[] = [];\n\n  const chosenAnswer = [answer_id];\n\n  const sortedAnswersByIdOrder = (idOrder: ID[]) => {\n    const { answers } = question;\n    return answers.slice().sort((a, b) => idOrder.indexOf(a.id) - idOrder.indexOf(b.id));\n  }\n\n  const questionAnswerProps = {\n    qid: id || `auto-${idCounter++}`,\n    correctAnswerId: correct_answer_id,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    chosenAnswer,\n    onChangeAnswer: onChangeAnswer,\n    type,\n    answered_count,\n    disabled: !choicesEnabled,\n    show_all_feedback,\n    onKeyPress\n  };\n\n  const answers = answerIdOrder ? sortedAnswersByIdOrder(answerIdOrder) : question.answers;\n\n  const answersHtml = answers.map((answer, i) => {\n    const additionalProps: { answer: AnswerType, iter: number, key: string }\n      = { answer, iter: i, key: `${questionAnswerProps.qid}-option-${i}` };\n    const answerProps = Object.assign({}, additionalProps, questionAnswerProps);\n\n    if (answer.id === incorrectAnswerId && feedback_html) {\n      feedback.push({ index: i, html: feedback_html })\n    } else if (answer.id === correct_answer_id && correct_answer_feedback_html) {\n      feedback.push({ index: i, html: correct_answer_feedback_html })\n    }\n\n    return (\n      <Answer {...answerProps} />\n    );\n  });\n\n  feedback.forEach((item, i) => {\n    const spliceIndex = item.index + i + 1;\n    answersHtml.splice(spliceIndex, 0, (\n      <Feedback key={spliceIndex} contentRenderer={props.contentRenderer}>\n        {item.html}\n      </Feedback>\n    ));\n  });\n\n  return (\n    <div className=\"answers-table\">\n      {instructions}\n      {answersHtml}\n    </div>\n  );\n}\n","import { css } from 'styled-components';\n\nconst palette = {\n  red: \"#ca2026\",\n  danger: \"#c2002f\",\n  darkRed: \"#c22032\",\n  lightRed: \"#e298a0\",\n  green: \"#77af42\",\n  lightGreen: \"#8bc753\",\n  darkGreen: \"#63a524\",\n  paleYellow: \"#ffffbb\",\n  teal: \"#0dc0de\",\n  blue: \"#007da4\",\n  lightBlue: \"#34bdd8\",\n  neutralLightBlue: \"#0dc0dc\",\n  tangerine: \"#ffbd3e\",\n  gray: \"#5e5e5e\",\n  darkGray: \"#757575\",\n  pale: \"#d5d5d5\",\n  light: \"#e4e4e4\",\n  white: \"#ffffff\",\n  neutralLightest: \"#f9f9f9\", // nearly white\n  neutralCool: \"#f6f7f8\", // cool bright gray\n  neutralBright: \"#f5f5f5\", // bright gray\n  neutralLighter: \"#f1f1f1\", // light gray\n  neutralLight: \"#e5e5e5\", // light gray\n  neutralMedium: \"#a0a0a0\", // light gray\n  neutral: \"#818181\", // gray\n  neutralThin: \"#6f6f6f\", // medium gray\n  neutralDark: \"#5f6163\", // dark gray\n  neutralDarker: \"#424242\", // very dark gray\n  black: \"#000000\",\n  orange: \"#D4450C\"\n};\n\nexport const colors = {\n  palette: palette,\n  answer: {\n    color: palette.lightBlue,\n    correct: {\n      color: palette.green,\n      background: \"#77af42\",\n    },\n    incorrect: {\n      color: palette.red,\n      background: palette.red,\n    },\n    checked: palette.lightBlue,\n    hover: palette.neutralDark,\n    label: {\n      color: palette.neutralMedium,\n      colorHover: palette.neutralDark,\n      colorSelected: palette.lightBlue,\n    },\n    feedback: {\n      arrowOuterColor: \"rgba(0, 0, 0, 0.25)\",\n      popover: {\n        borderColor: \"rgba(0, 0, 0, 0.2)\",\n      },\n    },\n  },\n  card: {\n    background: \"#daf3f8\",\n  },\n  button: {\n    background: palette.orange,\n    backgroundHover: \"#E74B0D\",\n    backgroundActive: \"#C5400B\"\n  },\n  freeResponse: {\n    color: palette.neutralDark,\n    background: palette.neutralLighter,\n  },\n};\n\nexport const layouts = {\n  answer: {\n    verticalSpacing: \"1.5rem\",\n    horizontalSpacing: \"1rem\",\n    horizontalBuffer: \"2.5rem\",\n    bubbleSize: \"4rem\",\n    labelSpacing: \"6.5rem\",\n    feedback: {\n      arrow: {\n        width: \"20px\",\n        height: \"15px\",\n      },\n      popover: {\n        horizontalSpacing: \"2rem\",\n        verticalSpacing: \"2rem\",\n        horizontalBuffer: \"4rem\",\n        borderWidth: \"1px\",\n        maxWidth: \"370px\",\n      }\n    },\n  },\n};\n\nexport const BREAKPOINTS = {\n  mobile: 600,\n  tablet: 999,\n  desktop: 1000,\n  large: 1600,\n};\n\nexport const breakpoints = {\n  mobile(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n  },\n  tablet(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.tablet}px) { ${css(...args)} }`;\n  },\n  desktop(...args: Parameters<typeof css>) {\n    return css`@media(min-width: ${BREAKPOINTS.desktop}px) { ${css(...args)} }`;\n  },\n  only: {\n    mobile(...args: Parameters<typeof css>) {\n      return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n    },\n  },\n  margins: {\n    mobile: '8px',\n    tablet: '24px',\n  },\n};\n\nexport const transitions = {\n  answer: \"0.1s ease-in-out\",\n}\n\nexport const mixins = {\n  answer: () => css`\n    .answer-label {\n      display: flex;\n    }\n    color: ${colors.answer.label.color};\n    .answer-letter {\n      width: ${layouts.answer.bubbleSize};\n      height: ${layouts.answer.bubbleSize};\n      min-width: ${layouts.answer.bubbleSize};\n      min-height: ${layouts.answer.bubbleSize};\n      border-radius: calc(${layouts.answer.bubbleSize} / 2);\n      border-width: 2px;\n      border-style: solid;\n      border-color: #c6c6c6;\n      color: ${colors.answer.label.colorHover};\n      transition: color ${transitions.answer}, border-color ${transitions.answer}, background-color ${transitions.answer};\n      background-color: ${colors.palette.white};\n    }\n  `,\n  answerColor: (values: { color: string, background: string }) => css`\n    color: ${values.color};\n    .answer-letter {\n       border-color: ${values.color};\n       background-color: ${values.background};\n       color: ${colors.palette.white};\n    }\n  `,\n  answerChecked: () => mixins.answerColor({ color: colors.answer.checked, background: colors.answer.checked }),\n  answerCorrect: () => mixins.answerColor(colors.answer.correct),\n  answerIncorrect: () => mixins.answerColor(colors.answer.incorrect),\n  answerHover: () => css`\n    color: ${colors.answer.label.colorHover};\n    .answer-letter {\n      border-color: ${colors.answer.label.colorSelected};\n    }\n  `,\n  answerCorrectText: () => css`\n    content: 'correct answer';\n    color: ${colors.answer.label.color};\n    margin-left: calc(-1.25 * ${layouts.answer.bubbleSize});\n    width: calc(1.25 * ${layouts.answer.bubbleSize});\n    text-align: center;\n    font-size: 1.2rem;\n    // em used here for line-height for compatibility with IE\n    // http://caniuse.com/#feat=rem -- rem ignored in pseudo elements\n    line-height: 1em;\n    margin-top: 0.8rem;\n  `,\n  answerCorrectAnswer: () => css`\n    color: ${colors.answer.correct.color};\n    .answer-letter {\n      border-color: ${colors.answer.correct.color};\n      color: ${colors.answer.correct.color};\n    }\n    &::before {\n     ${mixins.answerCorrectText()}\n      @media screen and (max-width: ${BREAKPOINTS.tablet}px) {\n        display: none;\n      }\n    }\n    @media screen and (max-width:  ${BREAKPOINTS.tablet}px) {\n      .answer-letter-wrapper {\n        display: flex;\n        flex-direction: column;\n        &::after {\n          ${mixins.answerCorrectText()}\n          width: $openstax-answer-bubble-size !important;\n          margin-left: 0;\n        }\n      }\n    }\n  `,\n  resetText: () => css`\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.6;\n    text-align: left;\n    text-align: start;\n    text-decoration: none;\n    text-shadow: none;\n    text-transform: none;\n    letter-spacing: normal;\n    word-break: normal;\n    word-spacing: normal;\n    white-space: normal;\n    line-break: auto;\n  `,\n  stepCardPadding: () => css`\n    padding: 48px 140px;\n\n    ${breakpoints.tablet`\n      padding: ${breakpoints.margins.tablet} ${breakpoints.margins.tablet};\n    `}\n\n    ${breakpoints.mobile`\n      padding: calc(${breakpoints.margins.mobile} * 2) ${breakpoints.margins.mobile};\n    `}\n  `,\n};\n\nconst theme = {\n  colors: colors,\n  layouts: layouts,\n  transitions: transitions,\n  breakpoints: breakpoints,\n};\n\nexport default theme;\n","import styled from 'styled-components';\nimport { mixins, colors, layouts, transitions } from '../theme';\nimport { AnswersTable } from './AnswersTable';\nimport classnames from 'classnames';\nimport { ID, ExerciseQuestionData, Task } from 'src/types';\nimport { ReactNode } from 'react';\nimport { Content } from './Content';\n\nconst StyledQuestion = styled.div`\n&.step-card-body {\n  ${mixins.stepCardPadding()};\n}\n\n&.openstax-question {\n  font-size: 2rem;\n\n  .detailed-solution {\n    margin-bottom: 1rem;\n    .header {\n      display: inline;\n      margin-right: 0.5rem;\n      color: #5e6062;\n      font-weight: bold;\n      flex-basis: 0;\n    }\n    .solution {\n      display: inline;\n      color: #6f6f6f;\n    }\n  }\n\n  img {\n    display: block;\n    margin: auto;\n    max-width: 100%;\n  }\n\n  .question-stem {\n    margin-bottom: 0;\n  }\n\n  .answers-table {\n    margin-bottom: 20px;\n    font-size: 17px;\n    line-height: 25px;\n  }\n\n  .instructions {\n    font-size: 1.4rem;\n    font-style: italic;\n    margin-top: 10px;\n    color: ${colors.palette.neutral};\n    margin: 0;\n\n    i {\n      margin-left: 5px;\n    }\n\n    .text-info {\n      color: ${colors.palette.neutralLightBlue};\n      padding-left: 5px;\n      cursor: pointer;\n      font-style: normal;\n    }\n  }\n\n  .multiple-choice-prompt {\n    font-weight: 600;\n  }\n\n  .free-response {\n    padding: ${layouts.answer.horizontalSpacing} ${layouts.answer.horizontalBuffer};\n    margin: ${layouts.answer.verticalSpacing} 0 ${layouts.answer.horizontalSpacing} ${layouts.answer.verticalSpacing};\n    border-left: ${layouts.answer.horizontalSpacing} solid ${colors.palette.neutralLighter};\n    font-style: italic;\n  }\n\n  &:not(.openstax-question-preview) {\n    .answers-answer {\n      width: initial;\n      &:not(.disabled){\n        .answer-label:focus{\n          background-color: ${colors.palette.neutralLightest};\n        }\n      }\n      ${mixins.answer()};\n    }\n\n    .answer-answer {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      margin-left: ${layouts.answer.horizontalSpacing};\n      * {\n        margin: 0;\n      }\n    }\n\n    .answer-letter {\n      text-align: center;\n      padding: 0;\n    }\n\n\n    .answer-label {\n      font-weight: normal;\n      width: 100%;\n      padding: ${layouts.answer.verticalSpacing} 0 0 0;\n      margin: 0;\n\n      transition: color ${transitions.answer};\n    }\n\n    // a selectable answer\n    .answer-input-box:not([disabled]) ~ .answer-label {\n      cursor: pointer;\n\n      &:hover {\n        ${mixins.answerHover()}\n      }\n    }\n\n    // a selected answer\n    &:not(.has-correct-answer) {\n      .answer-input-box {\n        display: none;\n\n        &:checked {\n          + .answer-label,\n          + .answer-label:hover {\n            ${mixins.answerChecked()};\n          }\n        }\n      }\n\n      .answer-checked{\n        .answer-label {\n          ${mixins.answerChecked()};\n        }\n      }\n    }\n\n    // answer that has been checked\n    &.has-correct-answer {\n      .answer-checked {\n        &:not(.answer-correct) {\n          .answer-label {\n            ${mixins.answerIncorrect()};\n          }\n        }\n\n        &.answer-correct {\n          .answer-label {\n            ${mixins.answerCorrect()};\n          }\n        }\n      }\n\n      .answer-correct:not(.answer-checked) {\n        .answer-label {\n          ${mixins.answerCorrectAnswer()}\n        }\n      }\n    }\n\n    &.has-incorrect-answer {\n      .answer-incorrect, .answer-checked.answer-incorrect {\n        .answer-label {\n          ${mixins.answerIncorrect()}\n        }\n      }\n    }\n\n    .question-feedback {\n      ${mixins.resetText()}\n\n      z-index: 1;\n      position: relative;\n      border: ${layouts.answer.feedback.popover.borderWidth} solid ${colors.answer.feedback.popover.borderColor};\n      background-color: ${colors.palette.white};\n      background-clip: padding-box;\n      border-radius: 0.3rem;\n      max-width: ${layouts.answer.feedback.popover.maxWidth};\n      margin: calc(${layouts.answer.feedback.arrow.height} - 5px) 0 ${layouts.answer.horizontalSpacing} calc(-1 * (2 * ${layouts.answer.horizontalSpacing}));\n      box-shadow: 10px 0px 10px rgba(0, 0, 0, .25);\n      color: ${colors.palette.neutral};\n      font-size: 1.4rem;\n      font-style: italic;\n\n      .arrow {\n        position: absolute;\n        display: block;\n        width: ${layouts.answer.feedback.arrow.width};\n        height: ${layouts.answer.feedback.arrow.height};\n        margin-left: 30px;\n        top: calc((${layouts.answer.feedback.arrow.height} + ${layouts.answer.feedback.popover.borderWidth}) * -1);\n\n        &::before,\n        &::after {\n          position: absolute;\n          display: block;\n          content: \"\";\n          border-color: transparent;\n          border-style: solid;\n          border-width: 0 calc(${layouts.answer.feedback.arrow.width} / 2) ${layouts.answer.feedback.arrow.height} calc(${layouts.answer.feedback.arrow.width} / 2);\n        }\n        &::before {\n          top: 0;\n          border-bottom-color: ${colors.answer.feedback.popover.borderColor};\n        }\n        &::after {\n          top: ${layouts.answer.feedback.popover.borderWidth};\n          border-bottom-color: ${colors.palette.white};\n        }\n      }\n\n      .question-feedback-content {\n        padding: ${layouts.answer.feedback.popover.verticalSpacing} ${layouts.answer.feedback.popover.horizontalSpacing};\n      }\n    }\n  }\n\n  .openstax-answer {\n    border-top: 1px solid #d5d5d5;\n    margin: 10px 0;\n    padding: 10px 0;\n  }\n}\n`;\n\nexport interface QuestionProps {\n  question: ExerciseQuestionData,\n  answer_id?: ID;\n  task?: Task | null,\n  correct_answer_id: ID | null;\n  incorrectAnswerId: ID;\n  hideAnswers: boolean;\n  hidePreambles?: boolean,\n  exercise_uid?: string;\n  displayFormats: boolean,\n  className: string;\n  questionNumber: number;\n  displaySolution: boolean;\n  context?: string;\n  correct_answer_feedback_html?: string;\n  contentRenderer?: JSX.Element;\n  feedback_html: string;\n  onChange: () => void;\n  show_all_feedback?: boolean;\n  children?: ReactNode;\n  answerIdOrder?: ID[];\n  choicesEnabled?: boolean;\n}\n\nexport const Question = (props: QuestionProps) => {\n  let exerciseUid, solution;\n\n  const {\n    question, correct_answer_id, incorrectAnswerId, exercise_uid, className, questionNumber, context, task, hidePreambles\n  } = props;\n\n  const { stem_html, collaborator_solutions = [], formats, stimulus_html } = question;\n\n  const hasCorrectAnswer = !!correct_answer_id;\n  const hasIncorrectAnswer = !!incorrectAnswerId;\n\n  const taskIsDeleted = (task != null ? task.is_deleted : undefined)\n  const taskIsHomework = ((task != null ? task.type : undefined) === 'homework');\n\n  const classes = classnames('openstax-question', className, {\n    'has-correct-answer': hasCorrectAnswer && !(taskIsDeleted && taskIsHomework),\n    'has-incorrect-answer': hasIncorrectAnswer,\n  });\n\n  const hasSolution = () => {\n    const { displaySolution } = props;\n    const { collaborator_solutions = [] } = question;\n\n    return (\n      displaySolution &&\n      collaborator_solutions &&\n      collaborator_solutions.find(s => s['content_html'] !== undefined)\n    );\n  };\n\n  if (exercise_uid != null) {\n    exerciseUid = (\n      <div className=\"exercise-uid\">\n        {exercise_uid}\n      </div>\n    );\n  }\n\n  if (hasSolution()) {\n    solution =\n      <div className=\"detailed-solution\">\n        <div className=\"header\">\n          Detailed solution:\n        </div>\n        <Content\n          className=\"solution\"\n          block={true}\n          html={collaborator_solutions.map(s => s['content_html']).join('')} />\n      </div>;\n  }\n\n  return (\n    <StyledQuestion className={classes} data-question-number={questionNumber} data-test-id=\"question\">\n      <QuestionHtml type=\"context\" html={context} hidden={hidePreambles} />\n      <QuestionHtml type=\"stimulus\" html={stimulus_html} hidden={hidePreambles} />\n      <QuestionHtml type=\"stem\" html={stem_html} hidden={hidePreambles} questionNumber={questionNumber} />\n      {props.children}\n\n      <AnswersTable\n        {...props}\n        onChangeAnswer={props.onChange}\n        hasCorrectAnswer={hasCorrectAnswer} />\n\n      {solution}\n      {props.displayFormats ? <FormatsListing formats={formats} /> : undefined}\n      {exerciseUid}\n    </StyledQuestion>\n  );\n}\n\ninterface QuestionHtmlProps {\n  html?: string;\n  type: string;\n  hidden: QuestionProps['hidePreambles'];\n  questionNumber?: QuestionProps['questionNumber'];\n}\n\nexport const QuestionHtml = (props: QuestionHtmlProps) => {\n  const { html = '', type, hidden, questionNumber } = props;\n  if (hidden === true || !(html.length > 0)) { return null; }\n\n  return (\n    <Content\n      html={html}\n      data-question-number={questionNumber}\n      className={`question-${type}`}\n      block={true}\n    />\n  );\n};\n\nconst FormatsListing = ({ formats = [] }: { formats: ExerciseQuestionData['formats'] }) => {\n  return (\n    <div className=\"formats-listing\">\n      <div className=\"header\">Formats:</div>\n      {formats.map((format, i) => <span key={i}>{format}</span>)}\n    </div>\n  );\n};\n","import { colors } from \"../theme\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  background-color: ${colors.button.background};\n  color: ${colors.palette.white};\n  font-size: 1.6rem;\n  font-weight: 700;\n  line-height: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 4rem;\n  padding: 0 3rem;\n  border: 0;\n  border-radius: 5px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:not([disabled]) {\n    cursor: pointer;\n    &:hover {\n      background: ${colors.button.backgroundHover}\n    }\n    &:active {\n      background: ${colors.button.backgroundActive}\n    }\n  }\n  &:disabled {\n    opacity: 0.4;\n  }\n`;\n\ninterface ButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting?: never;\n  waitingText?: never;\n}\ninterface WaitingButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting: boolean;\n  waitingText: string;\n}\n\nconst Button = (props: ButtonProps | WaitingButtonProps) => {\n  const { disabled, isWaiting, waitingText, children, ...otherProps } = props;\n\n  return (\n    <StyledButton {...otherProps} disabled={isWaiting || disabled}>{(isWaiting && waitingText) || children}</StyledButton>\n  );\n}\n\nexport default Button;\n","import { colors, breakpoints, mixins } from \"../theme\";\nimport styled from \"styled-components\";\n\nexport const StepCardFooter = styled.div`\n    ${mixins.stepCardPadding()}\n    border-top: 1px solid ${colors.palette.pale};\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    font-size: 1.4rem;\n    line-height: 2rem;\n\n    > * {\n        flex-grow: 1;\n    }\n\n    button {\n        width: 160px;\n        height: 48px;\n    }\n\n    .points {\n        margin-bottom: 1.6rem; // Replace with https://caniuse.com/?search=gap soon\n\n        .attempts-left {\n            color: #F36B32;\n        }\n    }\n\n    .controls {\n        display: flex;\n        flex-flow: column wrap-reverse;\n        margin-left: 1.6rem; // Replace with https://caniuse.com/?search=gap soon\n\n        button + button {\n            margin: 0.8rem 0 0 0;\n        }\n    }\n\n    ${breakpoints.desktop`\n        padding: 32px 140px;\n        flex-wrap: nowrap;\n\n        .points {\n            max-width: 400px;\n        }\n\n        .controls {\n            flex-flow: row;\n            justify-content: flex-end;\n\n            button + button {\n                margin: 0 0 0 0.8rem;\n            }\n        }\n    `}\n`;\n","import { MouseEventHandler, ReactNode } from 'react';\nimport { countWords } from '../utils';\nimport styled, { css } from 'styled-components';\nimport { colors, mixins } from '../theme';\nimport { AvailablePoints, ExerciseQuestionData } from 'src/types';\nimport { QuestionHtml } from './Question';\nimport Button from './Button';\nimport { StepCardFooter } from './StepCardFooter';\n\nexport interface FreeResponseProps {\n  readOnly: boolean;\n  wordLimit: number;\n  infoRowChildren?: ReactNode;\n  pointsChildren?: ReactNode;\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  cancelHandler: MouseEventHandler<HTMLButtonElement>;\n  saveHandler: MouseEventHandler<HTMLButtonElement>;\n  defaultValue: string;\n  isSubmitDisabled: boolean;\n  questionNumber: number,\n  question: ExerciseQuestionData,\n  availablePoints: AvailablePoints,\n  textHasChanged: boolean;\n  submitBtnLabel: string;\n}\n\nconst TextAreaErrorStyle = css`\n  background-color: #f5e9ea;\n`;\n\nconst StyledFreeResponse = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n  }\n`;\n\nconst SyledQuestionStem = styled.div`\n  font-size: 2rem;\n  line-height: 1.68em;\n  position: relative;\n`;\n\nconst InfoRow = styled.div<{ hasChildren: boolean }>`\n  margin: 8px 0;\n  display: flex;\n  justify-content: ${props => props.hasChildren ? 'space-between' : 'flex-end'};\n  line-height: 1.6rem;\n\n  .word-limit-error-info {\n    color: ${colors.palette.danger};\n  }\n\n  div > span {\n    font-size: 12px;\n    line-height: 16px;\n\n    + span {\n      margin-left: 1rem;\n    }\n  }\n\n  .last-submitted + * {\n    margin-top: 0.8rem;\n  }\n\n  color: ${colors.palette.neutralThin};\n`;\n\nexport const FreeResponseTextArea = styled.textarea<{ isOverWordLimit: boolean } & FreeResponseProps>`\n  display: block;\n  font-family: inherit;\n  font-size: 1.8rem;\n  line-height: 3rem;\n  width: 100%;\n  min-height: 10.5em;\n  line-height: 1.5em;\n  margin: 2.5rem 0 0 0;\n  padding: 0.5em;\n  border: 1px solid ${colors.palette.neutral};\n  color: ${colors.palette.neutralDark};\n  ${props => props.isOverWordLimit && TextAreaErrorStyle};\n  ${props => props.isOverWordLimit && css`\n    border: 2px solid ${colors.palette.danger};\n  `}\n  background-color: ${props => props.readOnly && colors.palette.neutralCool};\n`;\nFreeResponseTextArea.displayName = 'OSFreeResponseTextArea';\n\nconst RevertButton = (props: {\n  disabled: boolean\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button {...props}>\n    Cancel\n  </Button>\n);\n\n\nexport const FreeResponseInput = (props: FreeResponseProps) => {\n  const {\n    availablePoints,\n    cancelHandler,\n    defaultValue,\n    infoRowChildren,\n    isSubmitDisabled,\n    pointsChildren,\n    question,\n    questionNumber,\n    saveHandler,\n    submitBtnLabel,\n    textHasChanged,\n    wordLimit,\n  } = props;\n\n  const isOverWordLimit = countWords(defaultValue) > wordLimit;\n\n  const questionProps = {};\n  if (questionNumber) { questionProps['data-question-number'] = questionNumber; }\n\n  return (\n    <StyledFreeResponse data-test-id=\"student-free-response\">\n      <div className=\"step-card-body\">\n        <SyledQuestionStem {...questionProps}>\n          {question.stem_html &&\n            <QuestionHtml type=\"stem\" html={question.stem_html} hidden={false} />}\n        </SyledQuestionStem>\n        <FreeResponseTextArea\n          {...props}\n          isOverWordLimit={isOverWordLimit}\n          data-test-id=\"free-response-box\"\n          placeholder=\"Enter your response...\"\n          aria-label=\"question response text box\"\n        />\n        <InfoRow hasChildren={!!infoRowChildren}>\n          {infoRowChildren}\n          <div>\n            <span>{countWords(defaultValue)} words</span>\n            {isOverWordLimit && <span className=\"word-limit-error-info\">Maximum {wordLimit} words</span>}\n          </div>\n        </InfoRow>\n      </div>\n      <StepCardFooter>\n        <div className=\"points\">\n          <strong>Points: {availablePoints}</strong>\n          {pointsChildren}\n        </div>\n        <div className=\"controls\">\n          <RevertButton disabled={!textHasChanged} onClick={cancelHandler} />\n          <Button\n            data-test-id=\"submit-answer-btn\"\n            disabled={isSubmitDisabled || isOverWordLimit}\n            onClick={saveHandler}\n          >\n            {submitBtnLabel}\n          </Button>\n        </div>\n      </StepCardFooter>\n    </StyledFreeResponse>\n  );\n}\n\nFreeResponseInput.displayName = 'OSFreeResponse';\n","import { ReactNode } from \"react\";\nimport { breakpoints, colors, mixins } from \"../theme\";\nimport { AvailablePoints, Step } from \"../types\";\nimport styled from \"styled-components\";\nimport cn from \"classnames\";\n\nexport const InnerStepCard = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  min-height: 400px;\n  border-radius: 0.25rem;\n  margin: 0 auto 5rem auto;\n  border: 1px solid ${colors.palette.light};\n  border-radius: 0.25rem;\n  background-color: white;\n\n  ${breakpoints.desktop`\n    max-width: 1000px;\n    min-width: 750px;\n  `}\n`;\n\nexport const OuterStepCard = styled.div`\n  padding: 2rem;\n\n  ${breakpoints.tablet`\n    padding: 0;\n  `}\n`;\n\nconst StepCardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 24px;\n  background: ${colors.card.background};\n  font-size: 1.8rem;\n  line-height: 3rem;\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n\n  div.question-info {\n    font-weight: bold;\n\n    .ox-icon-lock {\n        margin-right: 1rem;\n    }\n  }\n\n  .num-questions, .points, .separator {\n      display: none;\n  }\n\n  .exercise-id, .separator {\n      font-weight: normal;\n  }\n\n  .separator {\n      margin: 0 1rem;\n  }\n\n  .exercise-id {\n      height: 28px; // Fix baseline issue\n  }\n\n  button {\n    color: ${colors.palette.gray};\n  }\n\n  .openstax-exercise-badges {\n      margin: 0;\n      line-height: 2rem;\n      svg {\n          display: block;\n          &:not(.interactive) {\n              margin: 0 0 0 6px !important;\n          }\n      }\n  }\n\n  ${breakpoints.desktop`\n      button.ox-icon-angle-left, button.ox-icon-angle-right {\n          display: none;\n      }\n      .separator {\n          display: inherit;\n      }\n  `}\n\n    /*\n    1. Show the arrows to move to previous and next question.\n    2. Show the number of questions.\n    3. Override box-shadow of icons when turned into a button.\n    */\n    ${breakpoints.tablet`\n        font-size: 1.6rem;\n        line-height: 2.5rem;\n\n        svg.ox-icon {\n            display: inherit;\n            margin: 0;\n        }\n        button.ox-icon-angle-left {\n            margin-right: ${breakpoints.margins.tablet};\n        }\n        button.ox-icon-angle-right {\n            margin-left: ${breakpoints.margins.tablet};\n        }\n        .openstax-exercise-badges svg {\n            display: none;\n        }\n        .num-questions, points {\n            display: inherit;\n        }\n\n        .exercise-id {\n            display: none;\n        }\n\n        button[class^='ox-icon-angle']:hover {\n            box-shadow: none;\n        }\n  `}\n\n  ${breakpoints.mobile`\n      font-size: 1.4rem;\n      line-height: 2rem;\n      padding: 10px 8px;\n\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n  `}\n`;\nStepCardHeader.displayName = 'StepCardHeader';\n\nconst StepCardQuestion = styled.div<{ unpadded?: boolean }>`\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n  }\n\n    & + div .step-card-body {\n        padding-top: 0;\n    }\n\n    &.exercise-context, &.exercise-stimulus, &.exercise-stem {\n        padding-bottom: 0;\n    }\n\n    ${breakpoints.only.mobile`\n        && .question-feedback {\n            margin-left: 0;\n\n           .arrow { margin-left: 12px; }\n        }\n    `}\n\n    .reading-step & {\n        padding: 0;\n    }\n\n    ${breakpoints.desktop`\n        .video-step &, .interactive-step & {\n            .openstax-exercise-badges {\n              margin-right: 3.8rem;\n            }\n        }\n    `}\n\n    ${breakpoints.mobile`\n        .openstax-exercise-badges svg {\n            margin-right: ${breakpoints.margins.mobile};\n        }\n    `}\n\n    &&& {\n        .openstax-has-html .splash .frame-wrapper { margin-top: 0; }\n    }\n`;\n\ninterface SharedProps {\n  questionNumber: number;\n  numberOfQuestions: number;\n  leftHeaderChildren?: ReactNode;\n  rightHeaderChildren?: ReactNode;\n  headerTitleChildren?: ReactNode;\n}\n\nexport interface StepCardProps extends SharedProps {\n  unpadded: boolean;\n  className?: string;\n  children?: ReactNode;\n  stepType: Step['type'];\n  availablePoints: AvailablePoints;\n  questionId?: string;\n  multipartBadge?: ReactNode;\n  isHomework: boolean;\n}\n\nconst StepCard = ({\n  questionNumber,\n  numberOfQuestions,\n  stepType,\n  isHomework,\n  availablePoints,\n  unpadded, // currently does nothing; may need to restore if this causes tutor stepcard regression\n  className,\n  children,\n  questionId,\n  multipartBadge,\n  leftHeaderChildren,\n  rightHeaderChildren,\n  headerTitleChildren,\n  ...otherProps }: StepCardProps) => {\n  return (\n    <OuterStepCard {...otherProps}>\n      {multipartBadge}\n      <InnerStepCard className={className}>\n        {questionNumber && isHomework && stepType === 'exercise' &&\n          <StepCardHeader>\n            <div>\n              {leftHeaderChildren}\n              <div className=\"question-info\">\n                {headerTitleChildren}\n                <span>Question {questionNumber}</span>\n                <span className=\"num-questions\">&nbsp;/ {numberOfQuestions}</span>\n                <span className=\"separator\">|</span>\n                <span className=\"question-id\">ID: {questionId}</span>\n              </div>\n            </div>\n            <div>\n              <div className=\"points\">{availablePoints} Points</div>\n              {rightHeaderChildren}\n            </div>\n          </StepCardHeader>\n        }\n        <StepCardQuestion unpadded={unpadded}>{children}</StepCardQuestion>\n      </InnerStepCard>\n    </OuterStepCard>\n  )\n};\nStepCard.displayName = 'OSStepCard';\n\nexport interface TaskStepCardProps extends SharedProps {\n  className?: string;\n  children?: ReactNode;\n  step: Step;\n  questionNumber: number;\n  numberOfQuestions: number;\n}\n\nconst TaskStepCard = ({\n  step,\n  questionNumber,\n  numberOfQuestions,\n  children,\n  className,\n  ...otherProps\n}: TaskStepCardProps) =>\n(<StepCard {...otherProps}\n  unpadded={true}\n  questionNumber={questionNumber}\n  numberOfQuestions={numberOfQuestions}\n  stepType={step.type}\n  isHomework={step.task.type === 'homework'}\n  data-task-step-id={step.id}\n  availablePoints={step.available_points}\n  className={cn(`${step.type}-step`, className)}\n  questionId={step.uid}\n>\n  {children}\n</StepCard>);\n\nTaskStepCard.displayName = 'OSTaskStepCard';\n\nexport { StepCard, TaskStepCard };\n","import { AvailablePoints, ID, ExerciseQuestionData, Task } from \"../types\";\nimport Button from \"./Button\";\nimport { Content } from \"./Content\";\nimport { Question } from './Question';\nimport { StepCardFooter } from \"./StepCardFooter\";\n\nexport interface ExerciseQuestionProps {\n  task?: Task;\n  question: ExerciseQuestionData;\n  answer_id_order?: ID[];\n  questionNumber: number;\n  choicesEnabled: boolean;\n  hasMultipleAttempts: boolean;\n  onAnswerChange: () => void;\n  onAnswerSave: () => void;\n  onNextStep: () => void;\n  feedback_html: string;\n  correct_answer_feedback_html: string;\n  is_completed: boolean;\n  correct_answer_id: ID;\n  incorrectAnswerId: ID;\n  answerId?: ID;\n  attempts_remaining: number;\n  published_comments?: string;\n  detailedSolution?: string;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  canUpdateCurrentStep: boolean;\n  attempt_number: number;\n  apiIsPending: boolean;\n  displaySolution: boolean;\n  available_points: AvailablePoints;\n  exercise_uid: string;\n  free_response?: string;\n}\n\nconst AttemptsRemaining = ({ count }: { count: number }) => {\n  return (\n    <div>{count} attempt{count === 1 ? '' : 's'} left</div>\n  );\n}\n\nconst PublishedComments = ({ published_comments }: { published_comments?: string }) => {\n  if (!published_comments) { return null; }\n\n  return (\n    <div>\n      <strong>Feedback:</strong> {published_comments}\n    </div>\n  );\n}\n\nconst SaveButton = (props: {\n  disabled: boolean, isWaiting: boolean, attempt_number: number\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button\n    {...props}\n    waitingText=\"Saving…\"\n    isWaiting={props.isWaiting}\n    data-test-id=\"submit-answer-btn\"\n  >\n    {props.attempt_number == 0 ? 'Submit' : 'Re-submit'}\n  </Button>\n);\n\nconst NextButton = (props: {\n  canUpdateCurrentStep: boolean,\n  onNextStep: ExerciseQuestionProps['onNextStep']\n}) => {\n  return (\n    <Button onClick={props.onNextStep} data-test-id=\"continue-btn\">\n      {props.canUpdateCurrentStep ? 'Continue' : 'Next'}\n    </Button>\n  );\n}\n\nconst FreeResponseReview = ({ free_response }: Pick<ExerciseQuestionProps, \"free_response\">) => {\n  if (!free_response) { return null; }\n  return (\n    <>\n      <div className=\"free-response\">{free_response}</div>\n    </>\n  );\n}\n\nexport const ExerciseQuestion = (props: ExerciseQuestionProps) => {\n  const {\n    question, task, answer_id_order, onAnswerChange, feedback_html, correct_answer_feedback_html,\n    is_completed, correct_answer_id, incorrectAnswerId, choicesEnabled, questionNumber,\n    answerId, hasMultipleAttempts, attempts_remaining, published_comments, detailedSolution,\n    canAnswer, needsSaved, attempt_number, apiIsPending, onAnswerSave, onNextStep, canUpdateCurrentStep,\n    displaySolution, available_points, free_response\n  } = props;\n\n  return (\n    <div data-test-id=\"student-exercise-question\">\n      <Question\n        task={task}\n        question={question}\n        answerIdOrder={answer_id_order}\n        choicesEnabled={choicesEnabled}\n        answer_id={answerId}\n        questionNumber={questionNumber}\n        onChange={onAnswerChange}\n        feedback_html={feedback_html}\n        correct_answer_feedback_html={correct_answer_feedback_html}\n        correct_answer_id={is_completed ? correct_answer_id : null}\n        incorrectAnswerId={incorrectAnswerId}\n        className=\"step-card-body\"\n        hideAnswers={false}\n        displayFormats={false}\n        displaySolution={displaySolution}\n      >\n        <FreeResponseReview free_response={free_response} />\n      </Question>\n      <StepCardFooter className=\"step-card-footer\">\n        <div className=\"points\">\n          <strong>Points: {available_points}</strong>\n          <span className=\"attempts-left\">\n            {hasMultipleAttempts &&\n              attempts_remaining > 0 &&\n              <AttemptsRemaining count={attempts_remaining} />}\n          </span>\n          <PublishedComments published_comments={published_comments} />\n          {detailedSolution && (<div><strong>Detailed solution:</strong> <Content html={detailedSolution} /></div>)}\n        </div>\n        <div className=\"controls\">\n          {canAnswer && needsSaved ?\n            <SaveButton\n              disabled={apiIsPending || !answerId}\n              isWaiting={apiIsPending}\n              attempt_number={attempt_number}\n              onClick={onAnswerSave}\n            /> :\n            <NextButton onNextStep={onNextStep} canUpdateCurrentStep={canUpdateCurrentStep} />}\n        </div>\n      </StepCardFooter>\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport { Content } from './Content';\nimport { TaskStepCard } from './Card';\nimport { AvailablePoints, ExerciseData, ID, Step } from 'src/types';\nimport { ExerciseQuestion } from './ExerciseQuestion';\n\nconst StyledTaskStepCard = styled(TaskStepCard)`\n  font-size: 1.8rem;\n  line-height: 3rem;\n`;\n\nconst Preamble = ({ exercise }: { exercise: ExerciseData }) => {\n  return (\n    <>\n      {exercise.context &&\n        <Content className=\"step-card-body exercise-context\"\n          block html={exercise.context} />}\n\n      {exercise.stimulus_html &&\n        <Content className=\"step-card-body exercise-stimulus\"\n          block html={exercise.stimulus_html} />}\n    </>\n  );\n};\n\nexport interface ExerciseProps {\n  exercise: ExerciseData;\n  step: Step;\n  numberOfQuestions: number;\n  questionNumber: number;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  answer_id_order?: ID[];\n  hasMultipleAttempts: boolean;\n  onAnswerChange: () => void;\n  onAnswerSave: () => void;\n  onNextStep: () => void;\n  canUpdateCurrentStep: boolean;\n  attempt_number: number;\n  apiIsPending: boolean;\n  available_points: AvailablePoints;\n}\n\nexport const Exercise = ({\n  numberOfQuestions, questionNumber, step, exercise, canAnswer, needsSaved, ...props\n}: ExerciseProps) => (\n  <StyledTaskStepCard\n    step={step}\n    questionNumber={questionNumber}\n    numberOfQuestions={numberOfQuestions}\n  >\n    <Preamble exercise={exercise} />\n\n    {exercise.questions.map((q) =>\n      <ExerciseQuestion\n        {...props}\n        {...step}\n        exercise_uid={exercise.uid}\n        key={q.id}\n        question={q}\n        questionNumber={questionNumber}\n        choicesEnabled={canAnswer}\n        canAnswer={canAnswer}\n        needsSaved={needsSaved}\n        canUpdateCurrentStep={canAnswer}\n        displaySolution={true}\n        answerId={step.answer_id}\n      />\n    )}\n  </StyledTaskStepCard>\n);\n"],"names":["ALPHABET","MAX_CORRECTNESS","isAnswerCorrect","answer","correctAnswerId","id","isCorrect","correctness","isAnswerIncorrect","incorrectAnswerId","isAnswerChecked","chosenAnswer","Boolean","find","a","countWords","text","trimmedText","trim","words","match","length","Content","_ref","html","component","_ref$block","block","props","_objectWithoutPropertiesLoose","_excluded","undefined","React","cloneElement","_extends","_jsx","dangerouslySetInnerHTML","__html","SimpleFeedback","children","contentRenderer","className","classnames","Feedback","position","wrapperClasses","_jsxs","Answer","type","iter","disabled","onKeyPress","qid","hasCorrectAnswer","answered_count","show_all_feedback","body","feedback","selectedCount","isChecked","isIncorrect","correctIncorrectIcon","classes","cn","ariaLabel","onChangeAnswer","radioBox","checked","name","onChange","feedback_html","percent","selected_count","Math","round","content_html","_Fragment","htmlFor","onClick","role","displayName","defaultAnswerType","AnswersTable","idCounter","question","hideAnswers","_props$type","choicesEnabled","correct_answer_id","answer_id","correct_answer_feedback_html","_props$show_all_feedb","answerIdOrder","instructions","sortedAnswersByIdOrder","idOrder","answers","slice","sort","b","indexOf","questionAnswerProps","answersHtml","map","i","additionalProps","key","answerProps","Object","assign","push","index","forEach","item","spliceIndex","splice","palette","red","danger","darkRed","lightRed","green","lightGreen","darkGreen","paleYellow","teal","blue","lightBlue","neutralLightBlue","tangerine","gray","darkGray","pale","light","white","neutralLightest","neutralCool","neutralBright","neutralLighter","neutralLight","neutralMedium","neutral","neutralThin","neutralDark","neutralDarker","black","orange","colors","color","correct","background","incorrect","hover","label","colorHover","colorSelected","arrowOuterColor","popover","borderColor","card","button","backgroundHover","backgroundActive","freeResponse","layouts","verticalSpacing","horizontalSpacing","horizontalBuffer","bubbleSize","labelSpacing","arrow","width","height","borderWidth","maxWidth","BREAKPOINTS","mobile","tablet","desktop","large","breakpoints","css","_templateObject","_taggedTemplateLiteralLoose","apply","call","arguments","_templateObject2","_templateObject3","only","_templateObject4","margins","transitions","mixins","_templateObject5","answerColor","values","_templateObject6","answerChecked","answerCorrect","answerIncorrect","answerHover","_templateObject7","answerCorrectText","_templateObject8","answerCorrectAnswer","_templateObject9","resetText","_templateObject10","stepCardPadding","_templateObject11","_templateObject12","_templateObject13","StyledQuestion","styled","div","Question","exerciseUid","solution","exercise_uid","questionNumber","context","task","hidePreambles","stem_html","_question$collaborato","collaborator_solutions","formats","stimulus_html","hasIncorrectAnswer","taskIsDeleted","is_deleted","taskIsHomework","hasSolution","displaySolution","_question$collaborato2","s","join","QuestionHtml","hidden","displayFormats","FormatsListing","_props$html","_ref$formats","format","StyledButton","Button","isWaiting","waitingText","otherProps","StepCardFooter","TextAreaErrorStyle","StyledFreeResponse","SyledQuestionStem","InfoRow","hasChildren","FreeResponseTextArea","textarea","isOverWordLimit","readOnly","RevertButton","FreeResponseInput","availablePoints","cancelHandler","defaultValue","infoRowChildren","isSubmitDisabled","pointsChildren","saveHandler","submitBtnLabel","textHasChanged","wordLimit","questionProps","placeholder","InnerStepCard","OuterStepCard","StepCardHeader","StepCardQuestion","StepCard","numberOfQuestions","stepType","isHomework","unpadded","questionId","multipartBadge","leftHeaderChildren","rightHeaderChildren","headerTitleChildren","TaskStepCard","_ref2","step","_excluded2","available_points","uid","AttemptsRemaining","count","PublishedComments","published_comments","SaveButton","attempt_number","NextButton","onNextStep","canUpdateCurrentStep","FreeResponseReview","_ref3","free_response","ExerciseQuestion","answer_id_order","onAnswerChange","is_completed","answerId","hasMultipleAttempts","attempts_remaining","detailedSolution","canAnswer","needsSaved","apiIsPending","onAnswerSave","StyledTaskStepCard","Preamble","exercise","Exercise","questions","q","_createElement"],"mappings":"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"}