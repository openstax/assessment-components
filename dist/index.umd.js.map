{"version":3,"file":"index.umd.js","sources":["../src/components/Answer.tsx"],"sourcesContent":["import cn from 'classnames';\nimport { ReactNode } from 'react';\n\nconst ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\nconst isAnswerCorrect = function(answer: answerType, correctAnswerId: idType) {\n  // if answer does not have an id, check the isCorrect property.\n  if (!(answer.id || correctAnswerId)) {\n    return answer.isCorrect;\n  }\n  let isCorrect = answer.id === correctAnswerId;\n  if (answer.correctness != null) { isCorrect = (answer.correctness === '1.0'); }\n\n  return isCorrect;\n};\n\nconst isAnswerIncorrect = function(answer: answerType, incorrectAnswerId: idType) {\n  // Allow multiple attempts to show incorrectness without the correct_answer_id\n  return answer.id === incorrectAnswerId;\n};\n\nconst isAnswerChecked = (answer: answerType, chosenAnswer: AnswerProps['chosenAnswer']) =>\n  Boolean((chosenAnswer || []).find( a => a == answer.id));\n\ntype answerType = {\n  id: idType;\n  correctness: string;\n  isCorrect: boolean;\n  content_html: string;\n  selected_count?: number;\n};\ntype idType = string | number;\n\ninterface AnswerProps {\n  answer: answerType;\n  iter: number;\n  qid: idType;\n  type: 'teacher-review' | 'teacher-preview' | 'student' | 'student-mpp';\n  hasCorrectAnswer: boolean;\n  onChangeAnswer: () => void;\n  disabled: boolean;\n  chosenAnswer: (string | null | undefined)[];\n  correctAnswerId: idType;\n  incorrectAnswerId: idType;\n  answered_count: number;\n  show_all_feedback: boolean;\n  keyControl: string | number | [];\n  onKeyPress: () => void;\n  children?: ReactNode;\n  correctIncorrectIcon?: ReactNode,\n  radioBox?: ReactNode;\n  selectedCount: any;\n  isCorrect: any;\n  isIncorrect: any;\n  feedback?: any;\n}\n\nexport const Answer = (props: AnswerProps) => {\n  const {\n    type,\n    iter,\n    answer,\n    disabled,\n    onKeyPress,\n    qid,\n    chosenAnswer,\n    correctAnswerId,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    answered_count,\n    children,\n    feedback\n  } = props;\n\n  let body, selectedCount;\n\n  const isChecked = isAnswerChecked(answer, chosenAnswer);\n  const isCorrect = isAnswerCorrect(answer, correctAnswerId);\n  const isIncorrect = isAnswerIncorrect(answer, incorrectAnswerId);\n\n  const correctIncorrectIcon = (\n    <div className=\"correct-incorrect\">\n      {isCorrect && props.correctIncorrectIcon}\n    </div>\n  );\n\n  const classes = cn('answers-answer', {\n    'disabled': disabled,\n    'answer-checked': isChecked,\n    'answer-correct': isCorrect && type !== 'student-mpp',\n    'answer-incorrect': isAnswerIncorrect(answer, incorrectAnswerId),\n  });\n\n  let ariaLabel = `${isChecked ? 'Selected ' : ''}Choice ${ALPHABET[iter]}`;\n  // somewhat misleading - this means that there is a correct answer,\n  // not necessarily that this answer is correct\n  if (hasCorrectAnswer) {\n    ariaLabel += `(${isCorrect ? 'Correct' : 'Incorrect'} Answer)`;\n  }\n  ariaLabel += ':';\n\n  let onChangeAnswer, radioBox;\n\n  if (!hasCorrectAnswer\n    && (type !== 'teacher-review')\n    && (type !== 'teacher-preview')\n    && (type !== 'student-mpp')) {\n    ({ onChangeAnswer } = props);\n  }\n\n  if (onChangeAnswer) {\n    radioBox = (\n      <input\n        type=\"radio\"\n        className=\"answer-input-box\"\n        checked={isChecked}\n        id={`${qid}-option-${iter}`}\n        name={`${qid}-options`}\n        onChange={onChangeAnswer}\n        disabled={disabled}\n      />\n    );\n  }\n  if (type === 'teacher-review' && answer.selected_count) {\n    const percent = Math.round((answer.selected_count / answered_count) * 100) || 0;\n    selectedCount = (\n      <span\n        className=\"selected-count\"\n        data-percent={`${percent}`}\n      >\n        {answer.selected_count}\n      </span>\n    );\n  }\n\n  if (type === 'teacher-review') {\n    body = (\n      <div className=\"review-wrapper\">\n        <div className={cn('review-count', { 'green': isCorrect, 'red': !isCorrect })}>\n          {selectedCount}\n          <span className={cn('letter', { 'green': isCorrect, 'red': !isCorrect })}>\n            {ALPHABET[iter]}\n          </span>\n        </div>\n\n        <div className=\"answer-answer\">\n          <div className=\"answer-content\">\n            {children}\n          </div>\n          {feedback}\n        </div>\n      </div>\n    );\n  } else {\n    body = (\n      <>\n        {type === 'teacher-preview' && correctIncorrectIcon}\n        {selectedCount}\n        {radioBox}\n        <label\n          onKeyPress={onKeyPress}\n          htmlFor={`${qid}-option-${iter}`}\n          className=\"answer-label\">\n          <span className=\"answer-letter-wrapper\">\n            <button\n              onClick={onChangeAnswer}\n              aria-label={ariaLabel}\n              className=\"answer-letter\"\n              disabled={disabled || isIncorrect}\n              data-test-id={`answer-choice-${ALPHABET[iter]}`}\n            >\n              {ALPHABET[iter]}\n            </button>\n          </span>\n          <div className=\"answer-answer\">\n            <div className=\"answer-content\">\n              {children}\n            </div>\n            {feedback}\n          </div>\n        </label>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"openstax-answer\">\n      <section role=\"region\" className={classes}>\n        {body}\n      </section>\n    </div>\n  );\n}\nAnswer.displayName = 'OSAnswer';\n"],"names":["ALPHABET","isAnswerIncorrect","answer","incorrectAnswerId","id","Answer","props","body","selectedCount","onChangeAnswer","radioBox","type","iter","disabled","onKeyPress","qid","correctAnswerId","hasCorrectAnswer","answered_count","children","feedback","isChecked","chosenAnswer","find","a","isAnswerChecked","isCorrect","correctness","isAnswerCorrect","isIncorrect","correctIncorrectIcon","_jsx","jsx","className","classes","cn","ariaLabel","checked","name","onChange","selected_count","percent","Math","round","_jsxs","jsxs","green","red","_Fragment","htmlFor","onClick","role","displayName"],"mappings":"gcAGMA,EAAW,6BAaMC,EAAG,SAASC,EAAoBC,GAErD,OAAaD,EAACE,KAAOD,GAuCJE,EAAG,SAACC,GACrB,IAgBIC,EAAMC,EA2BVC,EAAoBC,EA1ClBC,EAaEL,EAbFK,KACAC,EAYEN,EAZFM,KACAV,EAWEI,EAXFJ,OACAW,EAUEP,EAVFO,SACAC,EASER,EATFQ,WACAC,EAQET,EARFS,IAEAC,EAMEV,EANFU,gBACAb,EAKEG,EALFH,kBACAc,EAIEX,EAJFW,iBACAC,EAGEZ,EAHFY,eACAC,EAEEb,EAFFa,SACAC,EACEd,EADFc,SAKaC,EAvDO,SAACnB,EAAoBoB,GAArB,gBACbA,GAAgB,IAAIC,KAAM,SAAAC,UAAMA,GAAItB,EAAOE,MAsDlCqB,CAAgBvB,EAJ9BI,EAPFgB,gBA5DoB,SAASpB,EAAoBc,GAEnD,IAAMd,EAAOE,KAAMY,EACjB,SAAcU,UAEhB,IAAIA,EAAYxB,EAAOE,KAAOY,EAG9B,OAF0B,MAAtBd,EAAOyB,cAAuBD,EAAoC,QAAvBxB,EAAOyB,eAkEpCC,CAAgB1B,EAAQc,GACzBa,EAAG5B,EAAkBC,EAAQC,GAExC2B,EACJC,EAAAC,IAAA,MAAA,CAAKC,UAAU,oBACZd,SAAAO,GAAapB,EAAMwB,uBAIXI,EAAGC,EAAAA,QAAG,iBAAkB,CACnCtB,SAAYA,EACZ,iBAAkBQ,EAClB,iBAAkBK,GAAsB,gBAATf,EAC/B,mBAAoBV,EAAkBC,EAAQC,KAG5CiC,GAAef,EAAY,YAAc,cAAYrB,EAASY,GA8BlE,GA3BIK,IACFmB,QAAiBV,EAAY,UAAY,yBAE3CU,GAAa,IAIRnB,GACU,mBAATN,GACS,oBAATA,GACS,gBAATA,IACDF,EAAmBH,EAAnBG,gBAGDA,IACFC,EACEqB,EAAAA,IAAA,QAAA,CACEpB,KAAK,QACLsB,UAAU,mBACVI,QAAShB,EACTjB,GAAOW,EAAcH,WAAAA,EACrB0B,KAASvB,EAAL,WACJwB,SAAU9B,EACVI,SAAUA,KAIH,mBAATF,GAA6BT,EAAOsC,eAAgB,CACtD,IAAMC,EAAUC,KAAKC,MAAOzC,EAAOsC,eAAiBtB,EAAkB,MAAQ,EAC9EV,EACEuB,MAAA,OAAA,CACEE,UAAU,iBACI,eAAA,GAAGQ,WAEhBvC,EAAOsC,iBAuDd,OAjDEjC,EADW,mBAATI,EAEAiC,EAAKC,KAAA,MAAA,CAAAZ,UAAU,iBAAgBd,SAAA,CAC7ByB,EAAAA,KAAK,MAAA,CAAAX,UAAWE,UAAG,eAAgB,CAAEW,MAASpB,EAAWqB,KAAQrB,IAC9DP,SAAA,CAAAX,EACDuB,MAAM,OAAA,CAAAE,UAAWE,EAAE,QAAC,SAAU,CAAEW,MAASpB,EAAWqB,KAAQrB,aACzD1B,EAASY,QAIdgC,EAAAA,KAAK,MAAA,CAAAX,UAAU,gBACbd,SAAA,CAAAY,EAAAA,IAAA,MAAA,CAAKE,UAAU,iBACZd,SAAAA,IAEFC,QAMLwB,OAAAI,EAAAA,SAAA,CAAA7B,SAAA,CACY,oBAATR,GAA8BmB,EAC9BtB,EACAE,EACDkC,OAAA,QAAA,CACE9B,WAAYA,EACZmC,QAAYlC,EAAcH,WAAAA,EAC1BqB,UAAU,eACVd,SAAA,CAAAY,MAAA,OAAA,CAAME,UAAU,wBACdd,SAAAY,EAAAA,IAAA,SAAA,CACEmB,QAASzC,eACG2B,EACZH,UAAU,gBACVpB,SAAUA,GAAYgB,EACR,eAAA,iBAAiB7B,EAASY,YAEvCZ,EAASY,OAGdgC,cAAKX,UAAU,gBACbd,SAAA,CAAAY,EAAAC,IAAA,MAAA,CAAKC,UAAU,iBACZd,SAAAA,IAEFC,aAQJY,IAAA,MAAA,CAAAC,UAAU,kBAAiBd,SAC9BY,iBAASoB,KAAK,SAASlB,UAAWC,EAAOf,SACtCZ,OAKTF,EAAO+C,YAAc"}