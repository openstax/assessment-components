{"version":3,"file":"index.umd.js","sources":["../src/utils.ts","../src/theme.ts","../src/hooks/useTypesetMath.ts","../src/components/Content.tsx","../src/components/Feedback.tsx","../src/components/Answer.tsx","../src/constants.ts","../src/components/AnswersTable.tsx","../src/components/Card.tsx","../src/components/StepCardFooter.tsx","../src/components/Button.tsx","../src/components/CompletionStatus.tsx","../src/components/Question.tsx","../src/components/FreeResponseInput.tsx","../src/components/ExerciseQuestion.tsx","../src/helpers/mathjax.ts","../src/components/ExerciseToolbar.tsx","../src/components/ExerciseHeaderIcons.tsx","../src/components/Exercise.tsx","../src/assets/flag.tsx","../src/components/ProgressBar.tsx","../src/components/Loader.tsx"],"sourcesContent":["import { Answer, ID } from '../src/types';\n\nexport const ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nconst MAX_CORRECTNESS = '1.0';\n\nexport const isAnswerCorrect = function(answer: Answer, correctAnswerId?: ID | null) {\n  // if answer does not have an id, check the isCorrect property.\n  if (!(answer.id || correctAnswerId)) {\n    return answer.isCorrect;\n  }\n  let isCorrect = answer.id === correctAnswerId;\n  if (answer.correctness != null) { isCorrect = (answer.correctness === MAX_CORRECTNESS); }\n\n  return isCorrect;\n};\n\nexport const isAnswerIncorrect = (answer: Answer, incorrectAnswerId?: ID) =>\n  // Allow multiple attempts to show incorrectness without the correct_answer_id\n  answer.id === incorrectAnswerId;\n\nexport const isAnswerChecked = (answer: Answer, answerId?: ID) =>\n   answer.id == answerId;\n\nexport function countWords(text: string) {\n  const trimmedText = text.trim();\n  //https://css-tricks.com/build-word-counter-app/\n  const words = trimmedText.match(/\\b[-?(\\w+)?]+\\b/gi);\n  if(!words) return 0;\n  return words.length;\n}\n\nexport const numberfyId = (id: ID) => typeof id === 'string' ? parseInt(id, 10) : id;\n","import { css } from 'styled-components';\n\nconst palette = {\n  red: \"#ca2026\",\n  danger: \"#c2002f\",\n  darkRed: \"#c22032\",\n  lightRed: \"#e298a0\",\n  green: \"#77af42\",\n  lightGreen: \"#8bc753\",\n  darkGreen: \"#63a524\",\n  paleYellow: \"#ffffbb\",\n  teal: \"#0dc0de\",\n  blue: \"#007da4\",\n  mediumBlue: \"#026AA1\",\n  lightBlue: \"#34bdd8\",\n  neutralLightBlue: \"#0dc0dc\",\n  tangerine: \"#ffbd3e\",\n  gray: \"#5e5e5e\",\n  darkGray: \"#757575\",\n  pale: \"#d5d5d5\",\n  light: \"#e4e4e4\",\n  white: \"#ffffff\",\n  neutralLightest: \"#f9f9f9\", // nearly white\n  neutralCool: \"#f6f7f8\", // cool bright gray\n  neutralBright: \"#f5f5f5\", // bright gray\n  neutralLighter: \"#f1f1f1\", // light gray\n  neutralLight: \"#e5e5e5\", // light gray\n  neutralMedium: \"#a0a0a0\", // light gray\n  neutral: \"#818181\", // gray\n  neutralThin: \"#6f6f6f\", // medium gray\n  neutralDark: \"#5f6163\", // dark gray\n  neutralFeedback: \"#555\", // another dark gray\n  neutralDarker: \"#424242\", // very dark gray\n  black: \"#000000\",\n  orange: \"#D4450C\"\n};\n\nexport const colors = {\n  palette: palette,\n  answer: {\n    neutral: palette.neutralThin,\n    hover: '#026AA1',\n    checked: '#026AA1',\n    correct: '#0D7741',\n    incorrect: '#C22032'\n  },\n  popover: {\n    arrowOuterColor: \"rgba(0, 0, 0, 0.25)\",\n    borderColor: \"rgba(0, 0, 0, 0.2)\",\n  },\n  card: {\n    header: {\n     background: \"#daf3f8\"\n    },\n    body: {\n      background: \"#fdfdfd\"\n    }\n  },\n  button: {\n    background: palette.orange,\n    backgroundHover: \"#E74B0D\",\n    backgroundActive: \"#C5400B\"\n  },\n  freeResponse: {\n    color: palette.neutralDarker,\n    background:palette.neutralLighter,\n  },\n};\n\nexport const layouts = {\n  answer: {\n    verticalSpacing: \"1rem\",\n    horizontalSpacing: \"1rem\",\n    horizontalBuffer: \"2.5rem\",\n    bubbleSize: \"3.6rem\",\n    labelSpacing: \"6.5rem\",\n    feedback: {\n      popover: {\n        horizontalSpacing: \"1.1rem\",\n        verticalSpacing: \"0.9rem\",\n        maxWidth: \"370px\",\n      },\n    },\n  },\n  popover: {\n    arrow: {\n      width: \"16px\",\n      height: \"8px\",\n      edgeDistance: \"9px\",\n    },\n    horizontalSpacing: \"0.8rem\",\n    verticalSpacing: \"1rem\",\n    horizontalBuffer: \"4rem\",\n    borderWidth: \"1px\",\n    maxWidth: \"325px\",\n  },\n  card: {\n    spacing: '2rem'\n  }\n};\n\nexport const BREAKPOINTS = {\n  mobile: 600,\n  tablet: 999,\n  desktop: 1000,\n  large: 1600,\n};\n\nexport const breakpoints = {\n  mobile(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n  },\n  tablet(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.tablet}px) { ${css(...args)} }`;\n  },\n  desktop(...args: Parameters<typeof css>) {\n    return css`@media(min-width: ${BREAKPOINTS.desktop}px) { ${css(...args)} }`;\n  },\n  only: {\n    mobile(...args: Parameters<typeof css>) {\n      return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n    },\n  },\n  margins: {\n    mobile: '8px',\n    tablet: '24px',\n  },\n};\n\nexport const transitions = {\n  answer: \"0.1s ease-in-out\",\n}\n\nexport const mixins = {\n  answer: () => css`\n    .answer-label {\n      display: inline-flex;\n    }\n    color: ${palette.neutralDarker};\n    .answer-letter-wrapper::before {\n      width: ${layouts.answer.bubbleSize};\n      height: ${layouts.answer.bubbleSize};\n      min-width: ${layouts.answer.bubbleSize};\n      min-height: ${layouts.answer.bubbleSize};\n      border-radius: calc(${layouts.answer.bubbleSize} / 2);\n      border-width: 2px;\n      border-style: solid;\n      border-color: #c6c6c6;\n      color: ${colors.answer.neutral};\n      transition: color ${transitions.answer}, border-color ${transitions.answer}, background-color ${transitions.answer};\n      background-color: ${colors.palette.white};\n      font-family: \"Neue Helvetica W01\", Helvetica, Arial, sans-serif;\n      box-sizing: border-box;\n      font-weight: normal;\n    }\n  `,\n  answerColor: (\n    color: string, invertBubble = false\n  ) => css`\n    .answer-letter-wrapper::before {\n      color: ${invertBubble ? '#fff' : color};\n      border-color: ${color};\n      ${invertBubble ? `background-color: ${color};` : null}\n    }\n  `,\n  answerChecked: () => mixins.answerColor(colors.answer.checked, true),\n  answerCorrect: (checked?: boolean) => mixins.answerColor(colors.answer.correct, checked),\n  answerIncorrect: (checked?: boolean) => mixins.answerColor(colors.answer.incorrect, checked),\n  answerHover: () => css`\n    ${mixins.answerColor(colors.answer.hover)};\n    font-weight: bold;\n  `,\n  answerCorrectAnswer: () => mixins.answerColor(colors.answer.correct, false),\n  resetText: () => css`\n    font-family:  \"Neue Helvetica W01\", Helvetica, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.6;\n    text-align: left;\n    text-align: start;\n    text-decoration: none;\n    text-shadow: none;\n    text-transform: none;\n    letter-spacing: normal;\n    word-break: normal;\n    word-spacing: normal;\n    white-space: normal;\n    line-break: auto;\n  `,\n  stepCardPadding: () => css`\n    padding: 48px 140px;\n\n    ${breakpoints.tablet`\n      padding: ${breakpoints.margins.tablet} ${breakpoints.margins.tablet};\n    `}\n\n    ${breakpoints.mobile`\n      padding: calc(${breakpoints.margins.mobile} * 2) ${breakpoints.margins.mobile};\n    `}\n  `,\n  popover: () => css`\n    ${mixins.resetText()}\n\n    z-index: 1;\n    position: relative;\n    border: ${layouts.popover.borderWidth} solid ${colors.popover.borderColor};\n    background-color: ${colors.palette.white};\n    background-clip: padding-box;\n    max-width: ${layouts.popover.maxWidth};\n    margin: calc(${layouts.popover.arrow.height} - 14px) 0 ${layouts.answer.horizontalSpacing} 8px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n    color: ${colors.palette.neutralThin};\n    font-size: calc(1.4rem * var(--content-text-scale));\n\n    .arrow {\n      position: absolute;\n      display: block;\n      width: ${layouts.popover.arrow.width};\n      height: ${layouts.popover.arrow.height};\n      margin-left: ${layouts.popover.arrow.edgeDistance};\n      top: calc(${layouts.popover.arrow.height} * -1);\n\n      &::before,\n      &::after {\n        position: absolute;\n        display: block;\n        content: \"\";\n        border-color: transparent;\n        border-style: solid;\n        border-width: 0 calc(${layouts.popover.arrow.width} / 2) ${layouts.popover.arrow.height} calc(${layouts.popover.arrow.width} / 2);\n      }\n      &::before {\n        top: 0;\n        border-bottom-color: ${colors.popover.borderColor};\n      }\n      &::after {\n        top: ${layouts.popover.borderWidth};\n        border-bottom-color: ${colors.palette.white};\n      }\n    }\n\n    &.right {\n      right: calc(-${layouts.popover.arrow.edgeDistance} - ${layouts.popover.borderWidth});\n      .arrow { right: ${layouts.popover.arrow.edgeDistance}; }\n    }\n\n\n    > .content {\n      padding: ${layouts.popover.verticalSpacing} ${layouts.popover.horizontalSpacing};\n    }\n  `,\n  visuallyHidden: () => css`\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  `\n};\n\nconst theme = {\n  colors: colors,\n  layouts: layouts,\n  transitions: transitions,\n  breakpoints: breakpoints,\n};\n\nexport default theme;\n","import React from \"react\";\n\nexport const TypesetMathContext = React.createContext<() => void>(() => { throw new Error('context not initialized') });\nexport const useTypesetMath = () => React.useContext(TypesetMathContext);\n","import React from \"react\";\nimport { useTypesetMath } from \"../hooks/useTypesetMath\";\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\ntype ComponentType = keyof JSX.IntrinsicElements | React.JSXElementConstructor<any>;\n\nexport interface ContentProps<T extends ComponentType | undefined> {\n  className?: string;\n  component?: T extends undefined ? undefined :\n    T extends ComponentType ? React.ReactComponentElement<T>:\n    never;\n  html: string;\n  block?: boolean;\n}\n\nexport const Content = (<T extends ComponentType | undefined>(\n  {html, component, block = false, ...props}: ContentProps<T>\n) => {\n  const typesetMath = useTypesetMath();\n\n  React.useEffect(() => {\n    typesetMath();\n  }, [typesetMath, html])\n\n  if (component !== undefined) {\n    return React.cloneElement(component, {html, ...props});\n  }\n  if (block) {\n    return <div dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  } else {\n    return <span dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  }\n});\n","import classnames from 'classnames';\nimport { Content } from './Content';\n\ninterface FeedbackProps {\n  position?: 'top' | 'bottom' | 'left' | 'right';\n  children: string;\n  className?: string;\n  contentRenderer?: JSX.Element;\n  id: string\n}\n\nconst SimpleFeedback = (props: Pick<FeedbackProps, 'children' | 'className' | 'contentRenderer'>) => (\n  <aside>\n    <Content\n      component={props.contentRenderer}\n      className={classnames('question-feedback-content', 'has-html', props.className)}\n      html={props.children}\n      block={true} />\n  </aside>\n);\n\nconst Feedback = ({ id, ...props }: FeedbackProps) => {\n  const position = props.position || 'bottom';\n  const wrapperClasses = classnames('question-feedback', position);\n\n  return (\n    <aside id={id} className={wrapperClasses}>\n      <div className=\"arrow\" aria-label=\"Answer Feedback\" />\n      <SimpleFeedback {...props}>\n        {props.children}\n      </SimpleFeedback>\n    </aside>\n  );\n};\n\nexport { Feedback, SimpleFeedback };\n","import cn from 'classnames';\nimport { ReactNode } from 'react';\nimport { ALPHABET, isAnswerChecked, isAnswerCorrect, isAnswerIncorrect } from '../utils';\nimport { Answer as AnswerType, ID } from '../types';\nimport { Content } from './Content';\nimport { SimpleFeedback } from './Feedback';\nimport styled from 'styled-components';\nimport { colors } from '../theme';\n\nconst StyledAnswerIndicator = styled.div<{ state: boolean }>`\n  color: ${props => props.state ? colors.answer.correct : colors.answer.incorrect};\n  text-transform: uppercase;\n  font-size: calc(1.1rem * var(--content-text-scale));\n  font-weight: bold;\n`;\n\nconst AnswerIndicator = (\n  { isCorrect, isIncorrect }: { isCorrect?: boolean; isIncorrect?: boolean }\n) => {\n  if (!isCorrect && !isIncorrect) {\n    return null;\n  }\n  const state = isCorrect || isIncorrect === false;\n\n  return <StyledAnswerIndicator state={state}>\n    {state ? 'Correct' : 'Incorrect'} Answer\n  </StyledAnswerIndicator>\n};\n\nexport interface AnswerProps {\n  answer: AnswerType;\n  iter: number;\n  qid: ID;\n  type: 'teacher-review' | 'teacher-preview' | 'student' | 'student-mpp';\n  hasCorrectAnswer?: boolean;\n  onChangeAnswer?: (answer: AnswerType) => void;\n  disabled: boolean;\n  answerId?: ID;\n  correctAnswerId?: ID | null;\n  incorrectAnswerId?: ID;\n  onKeyPress?: () => void;\n  answered_count?: number;\n  correctIncorrectIcon?: ReactNode,\n  radioBox?: ReactNode;\n  contentRenderer?: JSX.Element;\n  show_all_feedback?: boolean;\n  tableFeedbackEnabled?: boolean;\n  feedbackId?: string;\n}\n\ntype AnswerAnswerProps = Pick<\n  AnswerBodyProps,\n  'answer' |\n  'contentRenderer' |\n  'show_all_feedback' |\n  'tableFeedbackEnabled' |\n  'isCorrect' |\n  'isIncorrect'\n>;\n\nconst AnswerAnswer = (props: AnswerAnswerProps) => {\n  const {\n    answer: { content_html, feedback_html },\n    contentRenderer,\n    show_all_feedback,\n    tableFeedbackEnabled,\n    isCorrect,\n    isIncorrect,\n  } = props;\n  return (\n    <div className=\"answer-answer\">\n      <AnswerIndicator isCorrect={isCorrect} isIncorrect={isIncorrect} />\n      <Content className=\"answer-content\" component={contentRenderer} html={content_html} />\n      {show_all_feedback && feedback_html && !tableFeedbackEnabled &&\n        <SimpleFeedback key=\"question-mc-feedback\" contentRenderer={contentRenderer}>\n          {feedback_html}\n        </SimpleFeedback>}\n    </div>\n  )\n}\n\ninterface AnswerBodyProps extends AnswerProps {\n  isCorrect?: boolean;\n  isSelected?: boolean;\n  isIncorrect?: boolean;\n}\n\nconst TeacherReview = (props: AnswerBodyProps) => {\n  const {\n    answer,\n    answered_count,\n    isCorrect,\n    contentRenderer,\n    iter,\n    show_all_feedback,\n    tableFeedbackEnabled,\n  } = props;\n  const percent = answer.selected_count && answered_count\n    ? Math.round((answer.selected_count / answered_count) * 100)\n    : 0;\n  return (\n    <div className=\"review-wrapper\">\n      <div className={cn('review-count', { 'green': isCorrect, 'red': !isCorrect })}>\n        <span\n          className=\"selected-count\"\n          data-percent={`${percent}`}\n        >\n          {answer.selected_count}\n        </span>\n        <span className={cn('letter', { 'green': isCorrect, 'red': !isCorrect })}>\n          {ALPHABET[iter]}\n        </span>\n      </div>\n      <AnswerAnswer \n        answer={answer}\n        contentRenderer={contentRenderer}\n        show_all_feedback={show_all_feedback}\n        tableFeedbackEnabled={tableFeedbackEnabled} />\n    </div>\n  );\n}\n\nconst AnswerChoice = (props: AnswerBodyProps) => {\n  const {\n    type,\n    iter,\n    answer,\n    disabled,\n    onKeyPress,\n    qid,\n    contentRenderer,\n    correctIncorrectIcon,\n    feedbackId,\n    isSelected,\n    isCorrect,\n    isIncorrect,\n    hasCorrectAnswer,\n    show_all_feedback,\n    tableFeedbackEnabled,\n  } = props;\n  const ariaLabel = `${isSelected ? 'Selected ' : ''}Choice ${ALPHABET[iter]}:`;\n  let onChangeAnswer: AnswerProps['onChangeAnswer'];\n\n  const onChange = () => onChangeAnswer && onChangeAnswer(answer);\n\n  if (!hasCorrectAnswer\n    && (type !== 'teacher-review')\n    && (type !== 'teacher-preview')\n    && (type !== 'student-mpp')) {\n    ({ onChangeAnswer } = props);\n  }\n\n  return <>\n    {type === 'teacher-preview' &&\n      <div className=\"correct-incorrect\">\n        {isCorrect && correctIncorrectIcon}\n      </div>}\n    <input\n      type=\"radio\"\n      className=\"answer-input-box\"\n      checked={isSelected}\n      id={`${qid}-option-${iter}`}\n      name={`${qid}-options`}\n      onChange={onChange}\n      disabled={disabled || !onChangeAnswer}\n      aria-details={feedbackId}\n    />\n    <label\n      onKeyPress={onKeyPress}\n      htmlFor={`${qid}-option-${iter}`}\n      className=\"answer-label\">\n      <span\n        className=\"answer-letter-wrapper\"\n        aria-label={ariaLabel}\n        data-answer-choice={ALPHABET[iter]}\n        data-test-id={`answer-choice-${ALPHABET[iter]}`}\n      >\n      </span>\n      <AnswerAnswer \n        answer={answer}\n        contentRenderer={contentRenderer}\n        show_all_feedback={show_all_feedback}\n        tableFeedbackEnabled={tableFeedbackEnabled}\n        isCorrect={isCorrect}\n        isIncorrect={isIncorrect} />\n    </label>\n  </>\n}\n\nconst AnswerBody = (props: AnswerBodyProps) => {\n  return props.type === 'teacher-review'\n    ? <TeacherReview {...props} />\n    : <AnswerChoice {...props} />\n}\n\nexport const Answer = (props: AnswerProps) => {\n  const {\n    type,\n    answer,\n    disabled,\n    answerId,\n    correctAnswerId,\n    incorrectAnswerId,\n  } = props;\n\n  const isChecked = isAnswerChecked(answer, answerId);\n  const isCorrect = isAnswerCorrect(answer, correctAnswerId);\n  const isIncorrect = isAnswerIncorrect(answer, incorrectAnswerId);\n  // When rendering a previous response, we can determine if it was this answer.\n  // If there is no incorrectAnswerId, that means only a correct answer is present, check isCorrect.\n  // If an incorrectAnswerId is present (there is only ever one, if multiple attempts are enabled,\n  // it is the latest one) checking isIncorrect works because incorrectAnswerId is only set for\n  // a missed attempt, meaning if an attempt is missed and then successfully re-attempted,\n  // incorrectAnswerId will be empty.\n  const isPreviousResponse = answerId === undefined && (!incorrectAnswerId && isCorrect || isIncorrect);\n\n  const isSelected = isChecked || isPreviousResponse;\n  const classes = cn('answers-answer', {\n    'disabled': disabled,\n    'answer-selected': isSelected,\n    'answer-correct': isCorrect && type !== 'student-mpp',\n    'answer-incorrect': incorrectAnswerId && isAnswerIncorrect(answer, incorrectAnswerId),\n  });\n\n  return (\n    <div className=\"openstax-answer\">\n      <section className={classes}>\n        <AnswerBody\n          {...props}\n          isCorrect={isCorrect}\n          isSelected={isSelected}\n          isIncorrect={isIncorrect} />\n      </section>\n    </div>\n  );\n}\nAnswer.displayName = 'OSAnswer';\n","import { AnswerDisplayType } from './types';\n\nexport const defaultAnswerType: AnswerDisplayType = 'student';\n","import { defaultAnswerType } from \"../constants\";\nimport { Answer as AnswerType, AnswerDisplayType, ID, ExerciseQuestionData } from \"src/types\";\nimport { Answer } from \"./Answer\";\nimport { Feedback } from \"./Feedback\";\n\nexport interface AnswersTableProps {\n  question: ExerciseQuestionData;\n  type?: AnswerDisplayType;\n  answer_id?: ID;\n  correct_answer_id?: ID | null;\n  incorrectAnswerId?: ID;\n  answerIdOrder?: ID[],\n  feedback_html: string;\n  correct_answer_feedback_html?: string;\n  answered_count?: number;\n  show_all_feedback?: boolean;\n  tableFeedbackEnabled?: boolean;\n  onChangeAnswer: () => void;\n  hideAnswers: boolean;\n  hasCorrectAnswer?: boolean;\n  onChangeAttempt?: () => void;\n  choicesEnabled?: boolean;\n  onKeyPress?: () => void;\n  contentRenderer?: JSX.Element;\n  instructions?: JSX.Element;\n}\n\nexport const AnswersTable = (props: AnswersTableProps) => {\n  let idCounter = 0;\n\n  const {\n    question, hideAnswers, type = defaultAnswerType, answered_count, choicesEnabled, correct_answer_id,\n    incorrectAnswerId, answer_id, feedback_html, correct_answer_feedback_html,\n    show_all_feedback = false, tableFeedbackEnabled, hasCorrectAnswer, onChangeAnswer, onKeyPress, answerIdOrder, instructions\n  } = props;\n  if (hideAnswers) { return null; }\n\n  const { id } = question;\n\n  const feedback: { index: number, html: string, id: string }[] = [];\n\n  const sortedAnswersByIdOrder = (idOrder: ID[]) => {\n    const { answers } = question;\n    return answers.slice().sort((a, b) => idOrder.indexOf(a.id) - idOrder.indexOf(b.id));\n  }\n\n  const questionAnswerProps = {\n    qid: id || `auto-${idCounter++}`,\n    answerId: answer_id,\n    correctAnswerId: correct_answer_id,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    onChangeAnswer: onChangeAnswer,\n    type,\n    answered_count,\n    disabled: !choicesEnabled,\n    show_all_feedback,\n    tableFeedbackEnabled,\n    onKeyPress\n  };\n\n  const answers = answerIdOrder ? sortedAnswersByIdOrder(answerIdOrder) : question.answers;\n\n  const answersHtml = answers.map((answer, i) => {\n    const additionalProps: { answer: AnswerType, iter: number, key: string }\n      = {\n        answer: {\n          ...answer,\n          question_id: typeof question.id === 'string' ? parseInt(question.id, 10) : question.id\n         },\n      iter: i,\n      key: `${questionAnswerProps.qid}-option-${i}`,\n    };\n    const answerProps = Object.assign({}, additionalProps, questionAnswerProps);\n    let html: string | undefined;\n    let feedbackId: string | undefined;\n\n    if (show_all_feedback && answer.feedback_html && tableFeedbackEnabled) {\n      html = answer.feedback_html;\n    } else if (answer.id === incorrectAnswerId && feedback_html) {\n      html = feedback_html;\n    } else if (answer.id === correct_answer_id && correct_answer_feedback_html) {\n      html = correct_answer_feedback_html;\n    }\n\n    if (html) {\n      feedbackId = `feedback-${questionAnswerProps.qid}-${i}`\n      feedback.push({ index: i, html, id: feedbackId });\n    }\n\n    return (\n      <Answer feedbackId={feedbackId} {...answerProps} />\n    );\n  });\n\n  feedback.forEach((item, i) => {\n    const spliceIndex = item.index + i + 1;\n    answersHtml.splice(spliceIndex, 0, (\n      <Feedback id={item.id} key={spliceIndex} contentRenderer={props.contentRenderer}>\n        {item.html}\n      </Feedback>\n    ));\n  });\n\n  return (\n    <div role=\"radiogroup\" aria-label=\"Answer choices\" className=\"answers-table\">\n      {instructions}\n      {answersHtml}\n    </div>\n  );\n}\n","import { ReactNode } from \"react\";\nimport { breakpoints, colors, layouts, mixins } from \"../theme\";\nimport { AvailablePoints, StepBase, StepWithData } from \"../types\";\nimport styled from \"styled-components\";\nimport cn from \"classnames\";\n\nexport const InnerStepCard = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  min-height: 400px;\n  margin: 0 auto 5rem auto;\n  border: 1px solid ${colors.palette.light};\n  border-radius: 0.25rem;\n  background-color: white;\n  overflow: hidden;\n\n  ${breakpoints.desktop`\n    max-width: 1000px;\n  `}\n`;\n\nexport const OuterStepCard = styled.div`\n  padding: ${layouts.card.spacing};\n\n  ${breakpoints.mobile`\n    padding: 0;\n  `}\n`;\n\nconst StepCardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 24px;\n  background: ${colors.card.header.background};\n  font-size: 1.8rem;\n  line-height: 3rem;\n  letter-spacing: -0.72px;\n\n  div.question-info {\n    display: flex;\n    align-items: baseline;\n    font-weight: bold;\n\n    .question-id {\n      font-weight: normal;\n    }\n    .ox-icon-lock {\n        margin-right: 1rem;\n    }\n  }\n\n  .num-questions, .points {\n      display: none;\n  }\n\n  .exercise-id, .separator {\n      font-weight: normal;\n  }\n\n  .separator {\n      margin: 0 0.4rem;\n  }\n\n  .exercise-id {\n      height: 28px; // Fix baseline issue\n  }\n\n  button {\n    color: ${colors.palette.gray};\n  }\n\n  .openstax-exercise-badges {\n      margin: 0;\n      line-height: 2rem;\n      svg {\n          display: block;\n          &:not(.interactive) {\n              margin: 0 0 0 6px !important;\n          }\n      }\n  }\n\n  ${breakpoints.desktop`\n      button.ox-icon-angle-left, button.ox-icon-angle-right {\n          display: none;\n      }\n      .separator {\n          display: inherit;\n      }\n  `}\n\n    /*\n    1. Show the arrows to move to previous and next question.\n    2. Show the number of questions.\n    3. Override box-shadow of icons when turned into a button.\n    */\n    ${breakpoints.tablet`\n        font-size: 1.6rem;\n        line-height: 2.5rem;\n\n        svg.ox-icon {\n            display: inherit;\n            margin: 0;\n        }\n        button.ox-icon-angle-left {\n            margin-right: ${breakpoints.margins.tablet};\n        }\n        button.ox-icon-angle-right {\n            margin-left: ${breakpoints.margins.tablet};\n        }\n        .openstax-exercise-badges svg {\n            display: none;\n        }\n        .num-questions, points {\n            display: inherit;\n        }\n\n        .exercise-id {\n            display: none;\n        }\n\n        button[class^='ox-icon-angle']:hover {\n            box-shadow: none;\n        }\n  `}\n\n  ${breakpoints.mobile`\n      font-size: 1.4rem;\n      line-height: 2rem;\n      padding: 10px 8px;\n\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n  `}\n`;\nStepCardHeader.displayName = 'StepCardHeader';\n\nconst StepCardQuestion = styled.div<{ unpadded?: boolean }>`\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n    overflow: auto;\n    background: ${colors.card.body.background};\n\n    &.exercise-stimulus {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n  }\n\n    & + div .step-card-body {\n        padding-top: 0;\n    }\n\n    &.exercise-context, &.exercise-stimulus, &.exercise-stem {\n        padding-bottom: 0;\n    }\n\n    ${breakpoints.only.mobile`\n        && .question-feedback {\n            margin-left: 0;\n\n           .arrow { margin-left: 12px; }\n        }\n    `}\n\n    .reading-step & {\n        padding: 0;\n    }\n\n    ${breakpoints.desktop`\n        .video-step &, .interactive-step & {\n            .openstax-exercise-badges {\n              margin-right: 3.8rem;\n            }\n        }\n    `}\n\n    ${breakpoints.mobile`\n        .openstax-exercise-badges svg {\n            margin-right: ${breakpoints.margins.mobile};\n        }\n    `}\n\n    &&& {\n        .openstax-has-html .splash .frame-wrapper { margin-top: 0; }\n    }\n`;\n\ninterface SharedProps {\n  questionNumber: number;\n  numberOfQuestions: number;\n  showTotalQuestions: boolean;\n  leftHeaderChildren?: ReactNode;\n  rightHeaderChildren?: ReactNode;\n  headerTitleChildren?: ReactNode;\n}\n\nexport interface StepCardProps extends SharedProps {\n  unpadded: boolean;\n  className?: string;\n  children?: ReactNode;\n  stepType: StepWithData['type'];\n  availablePoints?: AvailablePoints;\n  questionId?: string;\n  multipartBadge?: ReactNode;\n  isHomework: boolean;\n}\n\nconst StepCard = ({\n  questionNumber,\n  numberOfQuestions,\n  showTotalQuestions,\n  stepType,\n  isHomework,\n  availablePoints,\n  unpadded, // currently does nothing; may need to restore if this causes tutor stepcard regression\n  className,\n  children,\n  questionId,\n  multipartBadge,\n  leftHeaderChildren,\n  rightHeaderChildren,\n  headerTitleChildren,\n  ...otherProps }: StepCardProps) => {\n\n  const formattedQuestionNumber = numberOfQuestions > 1\n    ? `Questions ${questionNumber} - ${questionNumber + numberOfQuestions - 1}`\n    : `Question ${questionNumber}`;\n\n  return (\n    <OuterStepCard {...otherProps}>\n      {multipartBadge}\n      <InnerStepCard className={className}>\n        {questionNumber && isHomework && stepType === 'exercise' &&\n          <StepCardHeader>\n            <div>\n              {leftHeaderChildren}\n              <h2 className=\"question-info\">\n                {headerTitleChildren}\n                <span>{formattedQuestionNumber}</span>\n                {showTotalQuestions ? <span className=\"num-questions\">&nbsp;/ {numberOfQuestions}</span> : null}\n                <span className=\"separator\">|</span>\n                <span className=\"question-id\">ID: {questionId}</span>\n              </h2>\n            </div>\n            {availablePoints || rightHeaderChildren ? <div>\n              {availablePoints && <div className=\"points\">{availablePoints} Points</div>}\n              {rightHeaderChildren}\n            </div> : null}\n          </StepCardHeader>\n        }\n        <StepCardQuestion unpadded={unpadded}>{children}</StepCardQuestion>\n      </InnerStepCard>\n    </OuterStepCard>\n  )\n};\nStepCard.displayName = 'OSStepCard';\n\nexport interface TaskStepCardProps extends SharedProps {\n  className?: string;\n  children?: ReactNode;\n  step: StepBase | StepWithData;\n  questionNumber: number;\n  numberOfQuestions: number;\n}\n\nconst TaskStepCard = ({\n  step,\n  questionNumber,\n  numberOfQuestions,\n  children,\n  className,\n  ...otherProps\n}: TaskStepCardProps) =>\n(<StepCard {...otherProps}\n  unpadded={true}\n  questionNumber={questionNumber}\n  numberOfQuestions={numberOfQuestions}\n  stepType={'type' in step ? step.type : 'exercise'}\n  isHomework={'task' in step ? (step.task === undefined || step.task.type === 'homework') : true}\n  data-task-step-id={step.id}\n  // uncomment next line to display available points on exercise questions\n  // availablePoints={step.available_points}\n  className={cn(`${('type' in step ? step.type : 'exercise')}-step`, className)}\n  questionId={step.uid}\n>\n  {children}\n</StepCard>);\n\nTaskStepCard.displayName = 'OSTaskStepCard';\n\nexport { StepCard, TaskStepCard };\n","import { colors, breakpoints, mixins } from \"../theme\";\nimport styled from \"styled-components\";\n\nexport const StepCardFooter = styled.div`\n    ${mixins.stepCardPadding()}\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    font-size: calc(1.4rem * var(--content-text-scale));\n    line-height: calc(2rem * var(--content-text-scale));\n    background: ${colors.card.body.background};\n    overflow: auto;\n\n    > * {\n        flex-grow: 1;\n    }\n\n    button {\n        width: 160px;\n        height: 48px;\n    }\n\n    .step-card-footer-inner {\n        border-top: 1px solid ${colors.palette.pale};\n        padding-top: 32px;\n        display: flex;\n        justify-content: space-between;\n        gap: 1.6rem;\n\n        ${breakpoints.mobile`\n            flex-wrap: wrap;\n        `}\n    }\n\n    .points {\n        .attempts-left {\n          color: #B03808;\n          font-weight: bold;\n        }\n    }\n\n    .controls {\n        display: flex;\n        flex-flow: column wrap-reverse;\n\n        button + button {\n            margin: 0.8rem 0 0 0;\n        }\n    }\n\n    ${breakpoints.desktop`\n        padding: 0 140px 32px 140px;\n        flex-wrap: nowrap;\n\n        .points {\n            max-width: 400px;\n        }\n\n        .controls {\n            flex-flow: row;\n            justify-content: flex-end;\n\n            button + button {\n                margin: 0 0 0 0.8rem;\n            }\n        }\n    `}\n`;\n","import { colors } from \"../theme\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  background-color: ${colors.button.background};\n  color: ${colors.palette.white};\n  font-size: 1.6rem;\n  font-weight: 700;\n  line-height: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 4rem;\n  padding: 0 3rem;\n  border: 0;\n  border-radius: 5px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:not([disabled]) {\n    cursor: pointer;\n    &:hover {\n      background: ${colors.button.backgroundHover}\n    }\n    &:active {\n      background: ${colors.button.backgroundActive}\n    }\n  }\n  &:disabled {\n    opacity: 0.4;\n  }\n`;\n\ninterface ButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting?: never;\n  waitingText?: never;\n}\ninterface WaitingButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting: boolean;\n  waitingText: string;\n}\n\nconst Button = (props: ButtonProps | WaitingButtonProps) => {\n  const { disabled, isWaiting, waitingText, children, ...otherProps } = props;\n\n  return (\n    <StyledButton {...otherProps} disabled={isWaiting || disabled}>{(isWaiting && waitingText) || children}</StyledButton>\n  );\n}\n\nexport default Button;\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport { InnerStepCard } from \"./Card\";\nimport Button from \"./Button\";\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --content-text-scale: 1;\n  }\n`;\n\nexport interface CompletionStatusProps {\n  numberOfQuestions: number;\n  numberCompleted: number;\n  handleClick: () => void;\n  className?: string;\n}\n\nconst CompletionStatusCard = styled(InnerStepCard)`\n  padding: 88px 72px;\n  font-size: calc(1.8rem * var(--content-text-scale));\n  line-height: calc(3rem * var(--content-text-scale));\n  display: block;\n\n  button {\n    min-width: 160px;\n    height: 48px;\n  }\n\n  p {\n    margin: 16px 0 20px 0;\n  }\n`;\n\nconst CompletionHeader = styled.h2`\n  font-size: calc(2.4rem * var(--content-text-scale));\n  margin: 0;\n`;\n\nexport const CompletionStatus = styled(({\n  numberOfQuestions, numberCompleted, handleClick, className\n}: CompletionStatusProps) => {\n\n  const allCompleted = numberOfQuestions === numberCompleted;\n  const someCompleted = numberCompleted > 0;\n  const buttonText = allCompleted ? 'Next' : (\n      someCompleted ? 'Continue' : 'Start'\n  );\n\n  return <>\n    <GlobalStyle />\n    <CompletionStatusCard className={className}>\n      <CompletionHeader>{allCompleted ? 'You are done.' : (someCompleted ? 'Quiz is partially complete.' : 'No questions have been answered.')}</CompletionHeader>\n      <p>{allCompleted ? 'Great job answering all the questions.' : (someCompleted ? `You've completed ${numberCompleted} of ${numberOfQuestions} questions.` : 'Begin working on the quiz.')}</p>\n      <Button data-test-id={`${buttonText.split(' ')[0].toLowerCase()}-btn`} onClick={() => handleClick()}>\n        {buttonText}\n      </Button>\n    </CompletionStatusCard>\n  </>\n})``;\n","import styled from 'styled-components';\nimport { mixins, colors, layouts, transitions } from '../theme';\nimport { AnswersTable } from './AnswersTable';\nimport classnames from 'classnames';\nimport { ID, ExerciseQuestionData, Task } from 'src/types';\nimport React, { ReactNode } from 'react';\nimport { Content } from './Content';\n\nconst StyledQuestion = styled.div`\n&.step-card-body {\n  ${mixins.stepCardPadding()};\n}\n\n&.openstax-question {\n  border-top: 1px solid ${colors.palette.pale};\n  font-size: calc(1.8rem * var(--content-text-scale));\n\n  .detailed-solution {\n    margin-bottom: 1rem;\n    .header {\n      display: inline;\n      margin-right: 0.5rem;\n      color: #5e6062;\n      font-weight: bold;\n      flex-basis: 0;\n    }\n    .solution {\n      display: inline;\n      color: #6f6f6f;\n    }\n  }\n\n  img {\n    display: block;\n    margin: auto;\n    max-width: 100%;\n  }\n\n  .question-stem {\n    margin-bottom: 0;\n  }\n\n  .answers-table {\n    margin-bottom: 20px;\n    font-size: calc(1.6rem * var(--content-text-scale));\n    line-height: calc(2rem * var(--content-text-scale));\n  }\n\n  .instructions {\n    font-size: 1.4rem;\n    font-style: italic;\n    margin-top: 10px;\n    color: ${colors.palette.neutral};\n    margin: 0;\n\n    i {\n      margin-left: 5px;\n    }\n\n    .text-info {\n      color: ${colors.palette.neutralLightBlue};\n      padding-left: 5px;\n      cursor: pointer;\n      font-style: normal;\n    }\n  }\n\n  .multiple-choice-prompt {\n    font-weight: 600;\n  }\n\n  .free-response {\n    padding: ${layouts.answer.horizontalSpacing} ${layouts.answer.horizontalBuffer};\n    margin: ${layouts.answer.verticalSpacing} 0 ${layouts.answer.horizontalSpacing} ${layouts.answer.verticalSpacing};\n    border-left: ${layouts.answer.horizontalSpacing} solid ${colors.palette.neutralLighter};\n    font-style: italic;\n  }\n\n  &:not(.openstax-question-preview) {\n    .answers-answer {\n      width: initial;\n      &:not(.disabled){\n        .answer-label:focus{\n          background-color: ${colors.palette.neutralLightest};\n        }\n      }\n      &.answer-selected {\n        font-weight: bold;\n      }\n      ${mixins.answer()};\n    }\n\n    .answer-answer {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      margin-left: ${layouts.answer.horizontalSpacing};\n      * {\n        margin: 0;\n      }\n    }\n\n    .answer-letter-wrapper::before {\n      content: attr(data-answer-choice);\n      text-align: center;\n      padding: 0;\n      font-size: 1.6rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .answer-label {\n      width: 100%;\n      padding: ${layouts.answer.verticalSpacing} 0 0 0;\n      margin: 0;\n      transition: color ${transitions.answer};\n    }\n\n    // a selectable answer\n    .answer-input-box:not([disabled]) ~ .answer-label {\n      cursor: pointer;\n\n      &:hover {\n        ${mixins.answerHover()}\n      }\n    }\n\n    .answer-input-box {\n      ${mixins.visuallyHidden()}\n    }\n\n    // a selected answer\n    &:not(.has-correct-answer) {\n      .answer-input-box {\n        &:checked {\n          + .answer-label,\n          + .answer-label:hover {\n            ${mixins.answerChecked()};\n          }\n        }\n\n        &:focus-visible {\n          + .answer-label .answer-letter-wrapper::before {\n            outline-style: solid;\n            outline-width: 2px;\n            outline-offset: 2px;\n            outline-color: ${colors.answer.checked};\n          }\n        }\n      }\n\n      .answer-selected {\n        .answer-label, .answer-label:hover {\n          ${mixins.answerChecked()};\n        }\n      }\n    }\n\n    // answer that has been checked\n    &.has-correct-answer {\n      .answer-selected {\n        &:not(.answer-correct) {\n          .answer-label {\n            ${mixins.answerIncorrect()};\n          }\n        }\n\n        &.answer-correct {\n          .answer-label {\n            ${mixins.answerCorrect(true)};\n          }\n        }\n      }\n\n      .answer-correct:not(.answer-selected) {\n        .answer-label {\n          ${mixins.answerCorrectAnswer()}\n        }\n      }\n    }\n\n    &.has-incorrect-answer {\n      .answer-incorrect {\n        .answer-label, .answer-label:hover {\n          ${mixins.answerIncorrect()}\n        }\n        &.answer-selected.answer-incorrect {\n          ${mixins.answerIncorrect(true)}\n        }\n      }\n    }\n\n    .question-feedback {\n      ${mixins.popover()}\n      max-width: ${layouts.answer.feedback.popover.maxWidth};\n      .question-feedback-content {\n        padding: ${layouts.answer.feedback.popover.verticalSpacing} ${layouts.answer.feedback.popover.horizontalSpacing};\n      }\n    }\n  }\n\n  .openstax-answer {\n    border-top: 1px solid #d5d5d5;\n    margin: 10px 0;\n    padding: 6px 8px;\n  }\n}\n`;\n\nexport interface QuestionProps {\n  question: ExerciseQuestionData,\n  answer_id?: ID;\n  task?: Task | null,\n  correct_answer_id: ID | null;\n  incorrectAnswerId: ID;\n  hideAnswers: boolean;\n  hidePreambles?: boolean,\n  exercise_uid?: string;\n  displayFormats: boolean,\n  className: string;\n  questionNumber: number;\n  displaySolution: boolean;\n  context?: string;\n  correct_answer_feedback_html?: string;\n  contentRenderer?: JSX.Element;\n  feedback_html: string;\n  onChange: () => void;\n  show_all_feedback?: boolean;\n  tableFeedbackEnabled?: boolean;\n  children?: ReactNode;\n  answerIdOrder?: ID[];\n  choicesEnabled?: boolean;\n}\n\nexport const Question = React.forwardRef((props: QuestionProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n  let exerciseUid, solution;\n\n  const {\n    question, correct_answer_id, incorrectAnswerId, exercise_uid, className, questionNumber, context, task, hidePreambles\n  } = props;\n\n  const { stem_html, collaborator_solutions = [], formats, stimulus_html } = question;\n\n  const hasCorrectAnswer = !!correct_answer_id;\n  const hasIncorrectAnswer = !!incorrectAnswerId;\n\n  const taskIsDeleted = (task != null ? task.is_deleted : undefined)\n  const taskIsHomework = ((task != null ? task.type : undefined) === 'homework');\n\n  const classes = classnames('openstax-question', className, {\n    'has-correct-answer': hasCorrectAnswer && !(taskIsDeleted && taskIsHomework),\n    'has-incorrect-answer': hasIncorrectAnswer,\n  });\n\n  const hasSolution = () => {\n    const { displaySolution } = props;\n    const { collaborator_solutions = [] } = question;\n\n    return (\n      displaySolution &&\n      collaborator_solutions &&\n      collaborator_solutions.find(s => s['content_html'] !== undefined)\n    );\n  };\n\n  if (exercise_uid != null) {\n    exerciseUid = (\n      <div className=\"exercise-uid\">\n        {exercise_uid}\n      </div>\n    );\n  }\n\n  if (hasSolution()) {\n    solution =\n      <div className=\"detailed-solution\">\n        <div className=\"header\">\n          Detailed solution:\n        </div>\n        <Content\n          className=\"solution\"\n          block={true}\n          html={collaborator_solutions.map(s => s['content_html']).join('')} />\n      </div>;\n  }\n\n  return (\n    <StyledQuestion ref={ref} className={classes} data-question-number={questionNumber} data-test-id=\"question\">\n      <QuestionHtml type=\"context\" html={context} hidden={hidePreambles} />\n      <QuestionHtml type=\"stimulus\" html={stimulus_html} hidden={hidePreambles} />\n      <QuestionHtml type=\"stem\" html={stem_html} hidden={hidePreambles} questionNumber={questionNumber} />\n      {props.children}\n\n      <AnswersTable\n        {...props}\n        onChangeAnswer={props.onChange}\n        hasCorrectAnswer={hasCorrectAnswer} />\n\n      {solution}\n      {props.displayFormats ? <FormatsListing formats={formats} /> : undefined}\n      {exerciseUid}\n    </StyledQuestion>\n  );\n});\n\ninterface QuestionHtmlProps {\n  html?: string;\n  type: string;\n  hidden: QuestionProps['hidePreambles'];\n  questionNumber?: QuestionProps['questionNumber'];\n}\n\nexport const QuestionHtml = (props: QuestionHtmlProps) => {\n  const { html = '', type, hidden, questionNumber } = props;\n  if (hidden === true || !(html.length > 0)) { return null; }\n\n  return (\n    <Content\n      html={html}\n      data-question-number={questionNumber}\n      className={`question-${type}`}\n      block={true}\n    />\n  );\n};\n\nconst FormatsListing = ({ formats = [] }: { formats: ExerciseQuestionData['formats'] }) => {\n  return (\n    <div className=\"formats-listing\">\n      <div className=\"header\">Formats:</div>\n      {formats.map((format, i) => <span key={i}>{format}</span>)}\n    </div>\n  );\n};\n","import { MouseEventHandler, ReactNode } from 'react';\nimport { countWords } from '../utils';\nimport styled, { css } from 'styled-components';\nimport { colors, mixins } from '../theme';\nimport { AvailablePoints, ExerciseQuestionData } from 'src/types';\nimport { QuestionHtml } from './Question';\nimport Button from './Button';\nimport { StepCardFooter } from './StepCardFooter';\n\nexport interface FreeResponseProps {\n  readOnly: boolean;\n  wordLimit: number;\n  infoRowChildren?: ReactNode;\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  cancelHandler: MouseEventHandler<HTMLButtonElement>;\n  saveHandler: MouseEventHandler<HTMLButtonElement>;\n  defaultValue: string;\n  isSubmitDisabled: boolean;\n  questionNumber: number,\n  question: ExerciseQuestionData,\n  availablePoints?: AvailablePoints,\n  textHasChanged: boolean;\n  submitBtnLabel: string;\n}\n\nconst TextAreaErrorStyle = css`\n  background-color: #f5e9ea;\n`;\n\nconst StyledFreeResponse = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n  }\n`;\n\nconst SyledQuestionStem = styled.div`\n  font-size: 2rem;\n  line-height: 1.68em;\n  position: relative;\n`;\n\nconst InfoRow = styled.div<{ hasChildren: boolean }>`\n  margin: 8px 0;\n  display: flex;\n  justify-content: ${props => props.hasChildren ? 'space-between' : 'flex-end'};\n  line-height: 1.6rem;\n\n  .word-limit-error-info {\n    color: ${colors.palette.danger};\n  }\n\n  div > span {\n    font-size: 12px;\n    line-height: 16px;\n\n    + span {\n      margin-left: 1rem;\n    }\n  }\n\n  .last-submitted + * {\n    margin-top: 0.8rem;\n  }\n\n  color: ${colors.palette.neutralThin};\n`;\n\nexport const FreeResponseTextArea = styled.textarea<{ isOverWordLimit: boolean } & FreeResponseProps>`\n  display: block;\n  font-family: inherit;\n  font-size: 1.8rem;\n  line-height: 3rem;\n  width: 100%;\n  min-height: 10.5em;\n  line-height: 1.5em;\n  margin: 2.5rem 0 0 0;\n  padding: 0.5em;\n  border: 1px solid ${colors.palette.neutral};\n  color: ${colors.palette.neutralDark};\n  ${props => props.isOverWordLimit && TextAreaErrorStyle};\n  ${props => props.isOverWordLimit && css`\n    border: 2px solid ${colors.palette.danger};\n  `}\n  background-color: ${props => props.readOnly && colors.palette.neutralCool};\n`;\nFreeResponseTextArea.displayName = 'OSFreeResponseTextArea';\n\nconst RevertButton = (props: {\n  disabled: boolean\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button {...props}>\n    Cancel\n  </Button>\n);\n\n\nexport const FreeResponseInput = (props: FreeResponseProps) => {\n  const {\n    availablePoints,\n    cancelHandler,\n    defaultValue,\n    infoRowChildren,\n    isSubmitDisabled,\n    question,\n    questionNumber,\n    saveHandler,\n    submitBtnLabel,\n    textHasChanged,\n    wordLimit,\n  } = props;\n\n  const isOverWordLimit = countWords(defaultValue) > wordLimit;\n\n  const questionProps = {};\n  if (questionNumber) { questionProps['data-question-number'] = questionNumber; }\n\n  return (\n    <StyledFreeResponse data-test-id=\"student-free-response\">\n      <div className=\"step-card-body\">\n        <SyledQuestionStem {...questionProps}>\n          {question.stem_html &&\n            <QuestionHtml type=\"stem\" html={question.stem_html} hidden={false} />}\n        </SyledQuestionStem>\n        <FreeResponseTextArea\n          {...props}\n          isOverWordLimit={isOverWordLimit}\n          data-test-id=\"free-response-box\"\n          placeholder=\"Enter your response...\"\n          aria-label=\"question response text box\"\n        />\n        <InfoRow hasChildren={!!infoRowChildren}>\n          {infoRowChildren}\n          <div>\n            <span>{countWords(defaultValue)} words</span>\n            {isOverWordLimit && <span className=\"word-limit-error-info\">Maximum {wordLimit} words</span>}\n          </div>\n        </InfoRow>\n      </div>\n      <StepCardFooter>\n      {availablePoints\n        ? <div className=\"points\" role=\"status\"><strong>Points: {availablePoints}</strong></div>\n        : null}\n        <div className=\"controls\">\n          <RevertButton disabled={!textHasChanged} onClick={cancelHandler} />\n          <Button\n            data-test-id=\"submit-answer-btn\"\n            disabled={isSubmitDisabled || isOverWordLimit}\n            onClick={saveHandler}\n          >\n            {submitBtnLabel}\n          </Button>\n        </div>\n      </StepCardFooter>\n    </StyledFreeResponse>\n  );\n}\n\nFreeResponseInput.displayName = 'OSFreeResponse';\n","import React from \"react\";\nimport { numberfyId } from \"../../src/utils\";\nimport { AvailablePoints, ID, ExerciseQuestionData, Task } from \"../types\";\nimport Button from \"./Button\";\nimport { Content } from \"./Content\";\nimport { ExerciseBaseProps } from \"./Exercise\";\nimport { Question } from './Question';\nimport { StepCardFooter } from \"./StepCardFooter\";\n\nexport interface ExerciseQuestionProps {\n  task?: Task;\n  question: ExerciseQuestionData;\n  answer_id_order?: ID[];\n  questionNumber: number;\n  choicesEnabled: boolean;\n  hasMultipleAttempts: boolean;\n  onAnswerChange: () => void;\n  onAnswerSave: ExerciseBaseProps['onAnswerSave'];\n  onNextStep: ExerciseBaseProps['onNextStep'];\n  feedback_html: string;\n  correct_answer_feedback_html: string;\n  is_completed: boolean;\n  correct_answer_id: ID;\n  incorrectAnswerId: ID;\n  answer_id?: ID;\n  attempts_remaining: number;\n  published_comments?: string;\n  detailedSolution?: string;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  canUpdateCurrentStep: boolean;\n  attempt_number: number;\n  apiIsPending: boolean;\n  displaySolution: boolean;\n  available_points?: AvailablePoints;\n  exercise_uid: string;\n  free_response?: string;\n  show_all_feedback?: boolean;\n  tableFeedbackEnabled?: boolean;\n  hasFeedback?: ExerciseBaseProps['hasFeedback'];\n}\n\nconst AttemptsRemaining = ({ count }: { count: number }) => {\n  return (\n    <div>{count} attempt{count === 1 ? '' : 's'} left</div>\n  );\n}\n\nconst PublishedComments = ({ published_comments }: { published_comments?: string }) => {\n  if (!published_comments) { return null; }\n\n  return (\n    <div>\n      <strong>Feedback:</strong> {published_comments}\n    </div>\n  );\n}\n\nexport const SaveButton = (props: {\n  disabled: boolean, isWaiting: boolean, attempt_number: number, willContinue: boolean\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button\n    {...props}\n    waitingText=\"Saving…\"\n    isWaiting={props.isWaiting}\n    data-test-id=\"submit-answer-btn\"\n  >\n    {props.willContinue\n      ? 'Submit & continue'\n      : (props.attempt_number == 0 ? 'Submit' : 'Re-submit')}\n  </Button>\n);\n\nexport const NextButton = (props: {\n  canUpdateCurrentStep: boolean,\n} & React.ComponentPropsWithoutRef<'button'>) => {\n  return (\n    <Button {...props} data-test-id=\"continue-btn\">\n      {props.canUpdateCurrentStep ? 'Continue' : 'Next'}\n    </Button>\n  );\n}\n\nconst FreeResponseReview = ({ free_response }: Pick<ExerciseQuestionProps, \"free_response\">) => {\n  if (!free_response) { return null; }\n  return (\n    <>\n      <div className=\"free-response\">{free_response}</div>\n    </>\n  );\n}\n\nexport const ExerciseQuestion = React.forwardRef((props: ExerciseQuestionProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n  const {\n    question, task, answer_id_order, onAnswerChange, feedback_html, correct_answer_feedback_html,\n    is_completed, correct_answer_id, incorrectAnswerId, choicesEnabled, questionNumber,\n    answer_id, hasMultipleAttempts, attempts_remaining, published_comments, detailedSolution,\n    canAnswer, needsSaved, attempt_number, apiIsPending, onAnswerSave, onNextStep, canUpdateCurrentStep,\n    displaySolution, available_points, free_response, show_all_feedback, tableFeedbackEnabled,\n    hasFeedback\n  } = props;\n\n  const [shouldContinue, setShouldContinue] = React.useState(false)\n  React.useEffect(() => {\n    if (shouldContinue && is_completed) {\n      onNextStep(questionNumber - 1);\n      setShouldContinue(false);\n    }\n  }, [onNextStep, questionNumber, shouldContinue, is_completed]);\n\n  return (\n    <div data-test-id=\"student-exercise-question\">\n      <Question\n        ref={ref}\n        task={task}\n        question={question}\n        answerIdOrder={answer_id_order}\n        choicesEnabled={choicesEnabled}\n        answer_id={answer_id}\n        questionNumber={questionNumber}\n        onChange={onAnswerChange}\n        feedback_html={feedback_html}\n        correct_answer_feedback_html={correct_answer_feedback_html}\n        correct_answer_id={is_completed ? correct_answer_id : null}\n        incorrectAnswerId={incorrectAnswerId}\n        className=\"step-card-body\"\n        hideAnswers={false}\n        displayFormats={false}\n        displaySolution={displaySolution}\n        show_all_feedback={show_all_feedback}\n        tableFeedbackEnabled={tableFeedbackEnabled}\n      >\n        <FreeResponseReview free_response={free_response} />\n      </Question>\n      <StepCardFooter className=\"step-card-footer\">\n        <div className=\"step-card-footer-inner\">\n          <div className=\"points\" role=\"status\">\n            {available_points ? <strong>Points: {available_points}</strong> : null}\n            <span className=\"attempts-left\">\n              {hasMultipleAttempts &&\n                attempts_remaining > 0 &&\n                <AttemptsRemaining count={attempts_remaining} />}\n            </span>\n            <PublishedComments published_comments={published_comments} />\n            {detailedSolution && (<div><strong>Detailed solution:</strong> <Content html={detailedSolution} /></div>)}\n          </div>\n          <div className=\"controls\">\n            {(canAnswer && needsSaved) || shouldContinue ?\n              <SaveButton\n                disabled={apiIsPending || !answer_id || shouldContinue}\n                isWaiting={apiIsPending || shouldContinue}\n                attempt_number={attempt_number}\n                onClick={() => {\n                  onAnswerSave(numberfyId(question.id));\n                  if (!hasFeedback) {\n                    setShouldContinue(true);\n                  }\n                }}\n                willContinue={!hasFeedback}\n              /> :\n              <NextButton onClick={() => onNextStep(questionNumber - 1)} canUpdateCurrentStep={canUpdateCurrentStep} />}\n          </div>\n        </div>\n      </StepCardFooter>\n    </div>\n  );\n})\n","import { debounce, once } from 'lodash';\nimport { isEmpty, memoize } from 'lodash/fp.js';\nimport WeakMap from 'weak-map';\n\ndeclare global {\n  interface Window {\n    MathJax?: any;\n    __debugMathJax?: boolean;\n  }\n}\n\nconst MATH_MARKER_BLOCK  = '\\u200c\\u200c\\u200c'; // zero-width non-joiner\nconst MATH_MARKER_INLINE = '\\u200b\\u200b\\u200b'; // zero-width space\n\nconst MATH_RENDERED_CLASS = 'math-rendered';\nconst MATH_MARKED_CLASS = 'math-marked';\nconst MATH_DATA_SELECTOR = `[data-math]:not(.${MATH_RENDERED_CLASS})`;\nconst MATH_ML_SELECTOR   = `math:not(.${MATH_RENDERED_CLASS})`;\nconst COMBINED_MATH_SELECTOR = `${MATH_DATA_SELECTOR}, ${MATH_ML_SELECTOR}`;\nconst MATHJAX_CONFIG = {\n  extensions: [],\n  showProcessingMessages: false,\n  skipStartupTypeset: true,\n  styles: {\n    '#MathJax_MSIE_Frame': {\n      left: '', right: 0, visibility: 'hidden',\n    },\n    '#MathJax_Message': {\n      left: '', right: 0, visibility: 'hidden',\n    },\n  },\n  tex2jax: {\n    displayMath: [[MATH_MARKER_BLOCK, MATH_MARKER_BLOCK]],\n    inlineMath:  [[MATH_MARKER_INLINE, MATH_MARKER_INLINE]],\n  },\n};\n\nconst findProcessedMath = (root: Element): Element[] => Array.from(root.querySelectorAll('.MathJax math'));\nconst findUnprocessedMath = (root: Element): Element[] => {\n  const processedMath = findProcessedMath(root);\n  return Array.from(root.querySelectorAll('math')).filter((node) => processedMath.indexOf(node) === -1);;\n};\n\nconst findLatexNodes = (root: Element): Element[] => {\n  const latexNodes: Element[] = [];\n  for (const node of Array.from(root.querySelectorAll(MATH_DATA_SELECTOR))) {\n    const formula = node.getAttribute('data-math');\n\n    // Set textContent once so that resolveOrWait calls don't\n    // undo a MathJax pass before rendered class is applied\n    if (!node.classList.contains(MATH_MARKED_CLASS)) {\n      node.textContent = (node.tagName.toLowerCase() === 'div')\n        ? `${MATH_MARKER_BLOCK}${formula}${MATH_MARKER_BLOCK}`\n        : `${MATH_MARKER_INLINE}${formula}${MATH_MARKER_INLINE}`;\n      node.classList.add(MATH_MARKED_CLASS);\n    }\n    latexNodes.push(node);\n  }\n\n  return latexNodes;\n};\n\nconst typesetLatexNodes = (latexNodes: Element[], windowImpl: Window) => () => {\n  if (isEmpty(latexNodes)) {\n    return;\n  }\n\n  windowImpl.MathJax.Hub.Queue(\n    () => windowImpl.MathJax.Hub.Typeset(latexNodes),\n    markLatexNodesRendered(latexNodes)\n  );\n};\n\nconst typesetMathMLNodes = (root: Element, windowImpl: Window) => () => {\n  const mathMLNodes = findUnprocessedMath(root);\n\n  if (isEmpty(mathMLNodes)) {\n    return;\n  }\n\n  // style the entire document because mathjax is unable to style individual math elements\n  windowImpl.MathJax.Hub.Queue(\n    () => windowImpl.MathJax.Hub.Typeset(root)\n  );\n};\n\nconst markLatexNodesRendered = (latexNodes: Element[]) => () => {\n  // Queue a call to mark the found nodes as rendered so are ignored if typesetting is called repeatedly\n  // uses className += instead of classList because IE\n  const result = [];\n  for (const node of latexNodes) {\n    result.push(node.className += ` ${MATH_RENDERED_CLASS}`);\n  }\n};\n\n// Search document for math and [data-math] elements and then typeset them\nfunction typesetDocument(root: Element, windowImpl: Window) {\n  const latexNodes = findLatexNodes(root);\n\n  windowImpl.MathJax.Hub.Queue(\n    typesetLatexNodes(latexNodes, windowImpl),\n    typesetMathMLNodes(root, windowImpl)\n  );\n}\n\nconst resolveOrWait = (root: Element, resolve: () => void, remainingTries = 5) => {\n  if (\n    remainingTries > 0\n    && (findLatexNodes(root).length || findUnprocessedMath(root).length)\n  ) {\n    setTimeout(() => {\n      resolveOrWait(root, resolve, remainingTries - 1);\n    }, 200);\n  } else {\n    resolve();\n  }\n};\n\nconst typesetDocumentPromise = (root: Element, windowImpl: Window): Promise<void> => new Promise((resolve) => {\n  typesetDocument(root, windowImpl);\n  windowImpl.MathJax.Hub.Queue(() => {\n    resolveOrWait(root, resolve);\n  });\n});\n\n// memoize'd getter for typeset document function so that each node's\n// typeset has its own debounce\nconst getTypesetDocument = memoize((root, windowImpl) => {\n  // Install a debounce around typesetting function so that it will only run once\n  // every Xms even if called multiple times in that period\n  return debounce(typesetDocumentPromise, 100, {\n    leading: true,\n    trailing: false,\n  }).bind(null, root, windowImpl);\n});\ngetTypesetDocument.cache = new WeakMap();\n\n// typesetMath is the main exported function.\n// It's called by components like HTML after they're rendered\nconst typesetMath = async (root: Element, windowImpl = window) => {\n  await startMathJax();\n\n  // check if MathJax is setup\n  if (!(windowImpl && windowImpl.MathJax && windowImpl.MathJax.Hub)) {\n    console.warn('Warning: Expected MathJax to be initialized.');\n    return Promise.resolve();\n  }\n\n  // schedule a Mathjax pass if there is at least one [data-math] or <math> element present\n  if (root.querySelector(COMBINED_MATH_SELECTOR)) {\n    return getTypesetDocument(root, windowImpl)();\n  }\n\n  return Promise.resolve();\n};\n\nconst startMathJax: (windowImpl?: Window) => Promise<void> = once((windowImpl: Window = window) => new Promise((resolve) => {\n  const configuredCallback = () => {\n    // there doesn't seem to be a config option for this\n    windowImpl.MathJax.HTML.Cookie.prefix = 'mathjax';\n    // proceed with mathjax initi\n    windowImpl.MathJax.Hub.Configured();\n    windowImpl.MathJax.Hub.Register.StartupHook('End', () => {\n      resolve();\n    });\n  };\n\n  if (!document.getElementById('MathJax-Script')) {\n    const script = document.createElement('script');\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_HTMLorMML-full&delayStartupUntil=configured';\n    script.id = 'MathJax-Script';\n    script.async = true;\n    document.head.appendChild(script);\n  }\n\n  if (windowImpl.MathJax && windowImpl.MathJax.Hub) {\n    windowImpl.MathJax.Hub.Config(MATHJAX_CONFIG);\n    // Does not seem to work when passed to Config\n    windowImpl.MathJax.Hub.processSectionDelay = 0;\n    configuredCallback();\n  } else {\n    // If the MathJax.js file has not loaded yet:\n    // Call MathJax.Configured once MathJax loads and\n    // loads this config JSON since the CDN URL\n    // says to `delayStartupUntil=configured`\n    (MATHJAX_CONFIG as any).AuthorInit = configuredCallback;\n    windowImpl.MathJax = MATHJAX_CONFIG;\n  }\n}));\n\nexport {\n  typesetMath,\n  startMathJax,\n};\n","import { colors, layouts, breakpoints } from \"../../src/theme\";\nimport styled, { css } from \"styled-components\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBookOpen, faTriangleExclamation } from \"@fortawesome/free-solid-svg-icons\";\nimport { ExerciseIcons } from \"./Exercise\";\n\nexport const StyledToolbar = styled.div<{\n  mobile: boolean;\n  desktop: boolean;\n}>`\n  position: absolute;\n  background: #fff;\n  width: 4.5rem;\n  border: 1px solid ${colors.palette.light};\n  background: #fff;\n  margin: ${layouts.card.spacing} 0 0 ${layouts.card.spacing};\n  z-index: 1;\n\n  > * {\n    height: 4.7rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${colors.palette.neutral};\n    background: #fff;\n    text-decoration: none;\n\n    &:after {\n      border-bottom: 1px solid #f1f1f1;\n    }\n\n    svg {\n      width: 4.3rem;\n      height: 1.6rem;\n      transition: color 150ms;\n    }\n\n    span {\n      display: none;\n      flex-grow: 1;\n      font-size: 1.4rem;\n      color: ${colors.palette.neutralDarker};\n    }\n\n    &:hover {\n      box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 2px;\n      width: 20rem;\n\n      svg {\n        color: ${colors.palette.neutralDarker};\n      }\n\n      span {\n        display: block;\n      }\n    }\n  }\n\n  ${props => !props.desktop && css`\n    ${breakpoints.desktop`\n      display: none;\n    `}\n    ${breakpoints.tablet`\n      display: none;\n    `}\n  `}\n\n  ${props => props.mobile && breakpoints.mobile`\n    display: block;\n    position: relative;\n    width: auto;\n    display: flex;\n    flex-direction: row;\n    margin: 0;\n\n    &:not(:last-child) {\n      border-bottom: 0;\n    }\n\n    > * {\n      flex-direction: column;\n      flex-grow: 1;\n      align-items: center;\n      justify-content: center;\n      padding: 1rem 1.8rem 0.6rem;\n      height: auto;\n      min-height: 4.8rem;\n\n      &:hover {\n        width: auto;\n      }\n\n      span {\n        display: block;\n        font-size: 1rem;\n        margin-top: 0.2rem;\n        color: ${colors.palette.neutral};\n        text-align: center;\n      }\n\n      & + * {\n        border-left: 1px solid ${colors.palette.light};\n      }\n    }\n  `}\n`;\n\nexport const ExerciseToolbar = ({ icons }: { icons?: ExerciseIcons }) => {\n  if (!icons) {\n    return null;\n  }\n  const settings = Object.values(icons);\n  const mobile = settings.some(({ location }) => location?.toolbar?.mobile ?? true);\n  const desktop = settings.some(({ location }) => location?.toolbar?.desktop ?? false);\n  const topicUrl = icons.topic?.url;\n  const errataUrl = icons.errata?.url;\n\n  return <StyledToolbar {...{ mobile, desktop }}>\n    {topicUrl ? <a href={topicUrl} target=\"_blank\">\n      <FontAwesomeIcon icon={faBookOpen}></FontAwesomeIcon>\n      <span>View topic in textbook</span>\n    </a> : null}\n    {errataUrl ? <a href={errataUrl} target=\"_blank\">\n      <FontAwesomeIcon icon={faTriangleExclamation}></FontAwesomeIcon>\n      <span>Suggest a correction</span>\n    </a> : null}\n  </StyledToolbar>\n};\n","import styled, { css } from 'styled-components';\nimport { breakpoints, colors, mixins } from '../../src/theme';\nimport { ExerciseData } from '../../src/types';\nimport { faBookOpen } from '@fortawesome/free-solid-svg-icons/faBookOpen';\nimport { faTriangleExclamation } from '@fortawesome/free-solid-svg-icons/faTriangleExclamation';\nimport { faCircleInfo } from '@fortawesome/free-solid-svg-icons/faCircleInfo';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ExerciseIcons } from './Exercise';\n\ntype ExplanationType = 'multiple-choice' | 'two-step';\n\nconst TypeExplanations: { [key in ExplanationType]: string } = {\n  'multiple-choice': 'Select the best answer from the given list of distractors. Your instructor may or may not allow multiple attempts.',\n  'two-step': 'In a two-step question, OpenStax asks for your own answer first, then gives multiple-choice options to help you assess your learnings. \\\nRecalling the answer to a question from memory helps you to retain things longer.',\n}\n\nconst ItemWrapper = styled.div<{ mobile: boolean; desktop: boolean }>`\n  padding: 0.6rem 0.9rem;\n  .popover { display: none; }\n  &:hover {\n    svg path { fill: ${colors.palette.mediumBlue};}\n    .popover { display: flex; }\n  }\n  ${props => !props.desktop && css`\n    ${breakpoints.desktop`\n      display: none;\n    `}\n    ${breakpoints.tablet`\n      display: none;\n    `}\n  `}\n  ${props => !props.mobile && breakpoints.mobile`\n    display: none;\n  `}\n`;\n\nconst InnerWrapper = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nconst Popover = styled.div`\n  ${mixins.popover}\n  top: 3rem;\n  width: 20rem;\n  position: absolute;\n  font-size: 1.2rem;\n  line-height: 1.8rem;\n`;\n\ninterface PopoverItemProps {\n  text: string;\n  children: JSX.Element;\n  wrapperProps?: {\n    as: keyof JSX.IntrinsicElements;\n    href?: string;\n    target?: string;\n  },\n  mobile: boolean;\n  desktop: boolean;\n}\n\nconst PopoverItem = (props: PopoverItemProps) => (\n  <ItemWrapper\n    {...props.wrapperProps}\n    mobile={props.mobile}\n    desktop={props.desktop}\n    aria-label={props.text}\n  >\n    <InnerWrapper>\n      {props.children}\n      <Popover className=\"popover right\">\n        <div className=\"arrow\"></div>\n        <div className=\"content\">{props.text}</div>\n      </Popover>\n    </InnerWrapper>\n  </ItemWrapper>\n);\n\nconst PopoverItemsWrapper = styled.div`\n  max-width: 200px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  color: ${colors.palette.darkGray};\n  height: 1em;\n`;\n\nexport const ExerciseHeaderIcons = ({ exercise, icons }: {\n  exercise: ExerciseData, icons: ExerciseIcons\n}) => {\n  const defaultHeaderLocation = { desktop: true, mobile: false };\n  const items = [];\n  const isMultipleChoice = exercise.questions.every((q) => q.answers.length > 0);\n  let typeExplanation;\n\n  if (isMultipleChoice && exercise.questions.find((q) => q.formats.includes('free-response'))) {\n    typeExplanation = TypeExplanations['two-step'];\n  } else if (isMultipleChoice) {\n    typeExplanation = TypeExplanations['multiple-choice'];\n  }\n\n  if (icons.topic) {\n    items.push(\n      <PopoverItem\n        key='topic'\n        text='View topic in textbook'\n        wrapperProps={{ as: 'a', href: icons.topic.url, target: '_blank' }}\n        {...icons.topic.location?.header || defaultHeaderLocation}\n      >\n        <StyledFontAwesomeIcon icon={faBookOpen}></StyledFontAwesomeIcon>\n      </PopoverItem>\n    );\n  }\n\n  if (icons.errata) {\n    items.push(\n      <PopoverItem\n        key='errata'\n        text='Suggest a correction'\n        wrapperProps={{ as: 'a', href: icons.errata.url, target: '_blank' }}\n        {...icons.errata.location?.header || defaultHeaderLocation}\n      >\n        <StyledFontAwesomeIcon icon={faTriangleExclamation}></StyledFontAwesomeIcon>\n      </PopoverItem>\n    )\n  }\n\n  if (icons.info && typeExplanation) {\n    items.push(\n      <PopoverItem\n        key='type'\n        text={typeExplanation}\n        {...icons.info.location?.header || defaultHeaderLocation}\n      >\n        <StyledFontAwesomeIcon icon={faCircleInfo} height='16px' width='16px'></StyledFontAwesomeIcon>\n      </PopoverItem>\n    )\n  }\n\n  return (\n    <PopoverItemsWrapper>\n      {items}\n    </PopoverItemsWrapper>\n  );\n};\n","import React from 'react';\nimport scrollToElement from 'scroll-to-element';\nimport styled, { createGlobalStyle, css } from 'styled-components';\nimport { Answer, ExerciseData, ID, QuestionState, StepBase, StepWithData } from '../../src/types';\nimport { InnerStepCard, OuterStepCard, TaskStepCard, TaskStepCardProps } from './Card';\nimport { Content } from './Content';\nimport { ExerciseQuestion } from './ExerciseQuestion';\nimport { typesetMath } from '../helpers/mathjax';\nimport { ExerciseToolbar, StyledToolbar } from './ExerciseToolbar';\nimport { breakpoints } from '../theme';\nimport { ExerciseHeaderIcons } from './ExerciseHeaderIcons';\nimport { TypesetMathContext } from '../hooks/useTypesetMath';\n\nconst StyledTaskStepCard = styled(TaskStepCard)`\n  font-size: calc(1.8rem * var(--content-text-scale));\n  line-height: calc(2.8rem * var(--content-text-scale));\n`;\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --content-text-scale: 1;\n  }\n`;\n\nconst ToolbarWrapper = styled.div<{\n  desktopToolbarEnabled: boolean;\n  mobileToolbarEnabled: boolean;\n}>`\n  ${props => props.desktopToolbarEnabled && css`\n    ${breakpoints.desktop`\n      ${StyledTaskStepCard} {\n        margin-left: 6.8rem;\n      }\n    `}\n    ${breakpoints.tablet`\n      ${StyledTaskStepCard} {\n        margin-left: 4.8rem;\n      }\n    `}\n    ${breakpoints.mobile`\n      ${StyledTaskStepCard} {\n        margin-left: 0;\n      }\n    `}\n  `}\n\n  ${props => props.mobileToolbarEnabled && css`\n    ${breakpoints.mobile`\n      ${StyledToolbar} + ${OuterStepCard} ${InnerStepCard} {\n        border-top-left-radius: 0;\n        border-top-right-radius: 0;\n      }\n    `}\n  `}\n`;\n\nconst TaskStepCardWithToolbar = (props: React.PropsWithChildren<TaskStepCardProps> &\n  Pick<ExerciseBaseProps, 'exerciseIcons'> & {\n    desktopToolbarEnabled: boolean;\n    mobileToolbarEnabled: boolean;\n  }\n) => <ToolbarWrapper\n       desktopToolbarEnabled={props.desktopToolbarEnabled}\n       mobileToolbarEnabled={props.mobileToolbarEnabled}\n     >\n        <ExerciseToolbar icons={props.exerciseIcons} />\n    <StyledTaskStepCard {...props} />\n  </ToolbarWrapper>;\n\nconst Preamble = ({ exercise }: { exercise: ExerciseData }) => {\n  return (\n    <>\n      {exercise.context &&\n        <Content className=\"step-card-body exercise-context\"\n          block html={exercise.context} />}\n\n      {exercise.stimulus_html &&\n        <Content className=\"step-card-body exercise-stimulus\"\n          block html={exercise.stimulus_html} />}\n    </>\n  );\n};\n\ninterface ExerciseIconLocation {\n  desktop: boolean;\n  mobile: boolean;\n}\n\ninterface ExerciseIcon {\n  location?: {\n    /**\n     * @default {\n     *   desktop: true,\n     *   mobile: false\n     * }\n     **/\n    header?: ExerciseIconLocation;\n    /**\n     * @default {\n     *   desktop: false,\n     *   mobile: true\n     * }\n     **/\n    toolbar?: ExerciseIconLocation;\n  }\n}\n\nexport interface ExerciseIcons {\n  /** An object containing a URL for the errata form for this exercise and settings for rendering the icon. */\n  errata?: ExerciseIcon & { url: string };\n  /** An object containing a URL for textbook content relevant to the exercise and settings for rendering the icon. */\n  topic?: ExerciseIcon & { url: string };\n  /** An object of settings for rendering the info icon that describes the exercise type (multiple-choice, two-step, etc.) */\n  info?: ExerciseIcon;\n}\n\nexport interface ExerciseBaseProps {\n  /** An object containing a Step ID and Exercise UID */\n  step: StepBase;\n  /** An exercise object from the Exercises API */\n  exercise: ExerciseData;\n  numberOfQuestions: number;\n  /** The current question index. For multipart questions this is the first question number.  */\n  questionNumber: number;\n  /** A boolean that enables showing the amount of attempts remaining. */\n  hasMultipleAttempts: boolean;\n  /** A callback with the question_id when the Submit/Re-submit button is clicked. */\n  onAnswerSave: (question_id: number) => void;\n  /** A callback with the current question index when the Next/Continue button is clicked. */\n  onNextStep: (currentIndex: number) => void;\n  /** A boolean that enables always showing every answer feedback_html field. */\n  show_all_feedback?: boolean;\n  /** The question number to scroll into view when the component renders. */\n  scrollToQuestion?: number;\n  /** An object containing data for how to render the following icons:\n   * - An errata icon linking to the errata/feedback form\n   * - An info icon describing the exercise type (multiple-choice, two-step, etc.)\n   * - A topic icon linking to the relevant textbook location\n   */\n  exerciseIcons?: ExerciseIcons;\n  hasFeedback?: boolean;\n}\n\nexport interface ExerciseWithStepDataProps extends ExerciseBaseProps {\n  /** A Tutor Step object */\n  step: StepWithData;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  apiIsPending: boolean;\n  onAnswerChange: (answer: Answer) => void;\n  canUpdateCurrentStep: boolean;\n  answer_id_order?: ID[];\n}\n\nexport interface ExerciseWithQuestionStatesProps extends ExerciseBaseProps {\n  questionStates: { [key: ID]: QuestionState };\n  /** A callback with the IDs of the answer and question */\n  onAnswerChange: (answer: Omit<Answer, 'id'> & { id: number, question_id: number }) => void;\n}\n\nexport const Exercise = styled(({\n  numberOfQuestions, questionNumber, step, exercise, show_all_feedback, scrollToQuestion, exerciseIcons, ...props\n}: { className?: string } & (ExerciseWithStepDataProps | ExerciseWithQuestionStatesProps)) => {\n  const legacyStepRender = 'feedback_html' in step;\n  const questionsRef = React.useRef<Array<HTMLDivElement>>([]);\n  const container = React.useRef<HTMLDivElement>(null);\n\n  const typesetExercise = React.useCallback(() => {\n    if (container.current) {\n      typesetMath(container.current);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const el = scrollToQuestion && questionsRef.current[scrollToQuestion];\n    if (el) {\n      scrollToElement(el);\n    }\n  }, [scrollToQuestion, exercise]);\n\n  const desktopToolbarEnabled = Object.values(exerciseIcons || {}).some(({ location }) => location?.toolbar?.desktop);\n  const mobileToolbarEnabled = Object.values(exerciseIcons || {}).some(({ location }) => location?.toolbar?.mobile);\n\n  return <TypesetMathContext.Provider value={typesetExercise}>\n    <GlobalStyle />\n    <TaskStepCardWithToolbar\n      step={step}\n      questionNumber={questionNumber}\n      numberOfQuestions={legacyStepRender ? numberOfQuestions : exercise.questions.length}\n      rightHeaderChildren={exerciseIcons ? <ExerciseHeaderIcons exercise={exercise} icons={exerciseIcons} /> : null}\n      showTotalQuestions={legacyStepRender}\n      desktopToolbarEnabled={desktopToolbarEnabled}\n      mobileToolbarEnabled={mobileToolbarEnabled}\n      {...(exerciseIcons ? { exerciseIcons: exerciseIcons } : null)}\n      className={props.className}\n    >\n      <div ref={container}>\n        <Preamble exercise={exercise} />\n\n        {exercise.questions.map((q, i) => {\n          const state = { ...(legacyStepRender ? step : props['questionStates'][q.id]) };\n          return (\n            <ExerciseQuestion\n              {...props}\n              {...{...state, available_points: undefined}}\n              ref={(el: HTMLDivElement) => questionsRef.current[questionNumber + i] = el}\n              exercise_uid={exercise.uid}\n              key={q.id}\n              question={q}\n              questionNumber={questionNumber + i}\n              choicesEnabled={state.canAnswer}\n              displaySolution={true}\n              detailedSolution={state.solution?.content_html}\n              show_all_feedback={show_all_feedback}\n              tableFeedbackEnabled={show_all_feedback && !legacyStepRender}\n              canUpdateCurrentStep={\n                // misleading prop name, we want to show a continue button for completed questions\n                // that aren't the last question, which requires this prop to be true\n                'canUpdateCurrentStep' in props ?\n                  props.canUpdateCurrentStep : !(i + 1 === exercise.questions.length)\n              }\n            />\n          )\n        }\n        )}\n      </div>\n    </TaskStepCardWithToolbar>\n  </TypesetMathContext.Provider>;\n})`\n`;\n","const SvgComponent = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M14.556 2.09149C15.2296 1.78355 16 2.26721 16 2.99824V10.5951C16 10.9241 15.8362 11.2328 15.5605 11.4188C14.4229 12.1864 13.2007 12.6956 11.6715 12.6956C9.53267 12.6956 8.12768 11.6087 6.42651 11.6087C4.81213 11.6087 3.69241 11.923 2.79365 12.3V15.25C2.79365 15.6642 2.45254 16 2.03175 16H1.52381C1.10302 16 0.761905 15.6642 0.761905 15.25V3.18577C0.301492 2.86952 0 2.34455 0 1.74999C0 0.75924 0.836349 -0.0391985 1.852 0.00148899C2.75575 0.0376765 3.49578 0.75049 3.55203 1.63912C3.56854 1.8998 3.52632 2.1488 3.43819 2.37543C4.09648 2.13699 4.80613 1.99999 5.59835 1.99999C7.73718 1.99999 9.14216 3.08696 10.8433 3.08696C12.1289 3.08696 13.4659 2.5899 14.556 2.09149ZM2.79365 4.20718V6.40999C3.71429 6.07656 4.41841 5.85281 5.13016 5.75656V3.51999C4.38413 3.5878 3.84635 3.82593 2.79365 4.20718ZM9.80317 4.49437C8.96454 4.34837 8.21949 4.05752 7.46667 3.82749V5.93437C8.23413 6.14393 8.9767 6.44824 9.80317 6.63156V4.49437ZM5.13016 5.75656V7.94531C6.1713 7.85224 6.84159 7.92546 7.46667 8.06406V5.93437C6.66517 5.71452 5.98791 5.6399 5.13016 5.75656ZM7.46667 10.2012C8.30279 10.3466 9.04546 10.6365 9.80317 10.8681V8.76156C9.03248 8.55074 8.29397 8.24749 7.46667 8.06406V10.2012ZM2.79365 10.6906C3.54349 10.4284 4.31079 10.2581 5.13016 10.1731V7.94531C4.30127 8.01874 3.62667 8.19656 2.79365 8.48781V10.6906ZM14.4762 3.76562C13.8 4.04218 12.9971 4.31687 12.1397 4.4678V6.71499C13.0067 6.57874 13.7279 6.27437 14.4762 5.96843V3.76562ZM14.4762 10.3269V8.12406C13.7717 8.56781 12.9276 8.83062 12.1397 8.93718V11.1741C12.9356 11.0997 13.679 10.8291 14.4762 10.3269ZM9.80317 6.63156V8.76156C10.6179 8.9845 11.283 9.05349 12.1397 8.93718V6.71499C11.3143 6.84584 10.5542 6.79862 9.80317 6.63156Z\" fill=\"currentColor\"/>\n  </svg>\n);\nexport default SvgComponent;\n","import styled, { css } from 'styled-components';\nimport { colors, breakpoints } from '../theme';\nimport FlagIcon from '../assets/flag';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons/faCheck';\nimport { faXmark } from '@fortawesome/free-solid-svg-icons/faXmark';\nimport { faQuestion } from '@fortawesome/free-solid-svg-icons';\n\nconst ProgressBarWrapper = styled.nav`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 1rem;\n  padding: 2rem;\n\n  ${breakpoints.mobile`\n    padding: 1.6rem 0.8rem;\n  `}\n`;\n\nconst StyledItemWrapper = styled.span`\n  display: flex;\n  align-items: center;\n  position: relative;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst handleVariant = (variant: ProgressBarItemVariant) => {\n  switch (variant) {\n    case 'isStatus':\n      return css`\n        background-color: ${colors.palette.neutralBright};\n      `;\n    case 'isCorrect':\n      return css`\n        color: ${colors.answer.correct};\n        background-color: #E8F4D8;\n      `;\n    case 'isIncorrect':\n      return css`\n        color: ${colors.answer.incorrect};\n        background-color: #F8E8EA;\n      `;\n    default:\n      return css`\n        background-color: ${colors.palette.neutralBright};\n      `;\n  }\n};\n\nconst shadowCss = 'box-shadow: 0px 1px 4px 0px #00000066;';\n\nexport const StyledItem = styled.button<{ variant: ProgressBarItemVariant, isActive: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${props => props.isActive ? '4rem' : '3.2rem'};\n  height: ${props => props.isActive ? '4rem' : '3.2rem'};\n  border: 0;\n  border-radius: 50%;\n  margin: ${props => props.isActive ? '0' : '0 0.3rem'};\n  font-size: 1.4rem;\n  font-weight: bold;\n  cursor: pointer;\n  color: ${colors.palette.neutralDarker};\n  ${props => props.isActive ? css`\n    ${shadowCss}\n    & + [data-icon] {\n      bottom: 0;\n      right: 0;\n    }\n  ` : null}\n  ${props => handleVariant(props.variant)}\n  &:hover {\n    ${shadowCss}\n  }\n`;\n\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  background: ${props => props.color};\n  color: #fff;\n  position: absolute;\n  bottom: 0.4rem;\n  right: 0.3rem;\n  height: 0.8rem;\n  width: 0.8rem;\n  padding: 0.1rem;\n  font-size: 1.2rem;\n  border-radius: 50%;\n`;\n\nconst ItemIcon = ({ variant }: { variant: ProgressBarItemVariant }) => {\n  if (!variant || variant !== 'isCorrect' && variant !== 'isIncorrect' && variant !== 'isIncomplete') {\n    return null;\n  }\n\n  const variantData = {\n    isCorrect: {\n      icon: faCheck,\n      color: colors.answer.correct,\n      label: 'Correct',\n    },\n    isIncorrect: {\n      icon: faXmark,\n      color: colors.answer.incorrect,\n      label: 'Incorrect',\n    },\n    isIncomplete: {\n      icon: faQuestion,\n      color: colors.answer.neutral,\n      label: 'Incomplete'\n    }\n  }[variant];\n\n  return <StyledFontAwesomeIcon\n    icon={variantData.icon}\n    color={variantData.color}\n    height='16px'\n    width='16px'\n    aria-label={variantData.label}\n    aria-hidden={undefined}\n  />;\n}\n\nexport interface ProgressBarProps<S extends {variant: ProgressBarItemVariant}> {\n  steps: S[];\n  activeIndex: number | null;\n  goToStep: (index: number, step: S) => void;\n}\n\nexport interface ProgressBarItemProps<S> {\n  index: number;\n  isActive: boolean;\n  step: S;\n  goToStep: (index: number, step: S) => void;\n}\n\nexport type ProgressBarItemVariant = 'isCorrect' | 'isIncorrect' | 'isStatus' | 'isIncomplete' | null;\n\nexport const ProgressBarItem = <S extends {variant: ProgressBarItemVariant}>({index, isActive, step, goToStep}: ProgressBarItemProps<S>) =>\n  <StyledItemWrapper>\n    <StyledItem\n      variant={step.variant}\n      isActive={isActive}\n      onClick={() => goToStep(index, step)}\n      aria-current={isActive ? 'location' : 'false'}\n      aria-label={step.variant === 'isStatus' ? 'Assignment status' : `Question ${index + 1}` }\n    >\n      {step.variant === 'isStatus' ? <FlagIcon /> : index + 1}\n    </StyledItem>\n    <ItemIcon variant={step.variant} />\n  </StyledItemWrapper>;\n\nexport const ProgressBar = <S extends {variant: ProgressBarItemVariant}>({ steps, activeIndex, goToStep }: ProgressBarProps<S>) =>\n  <ProgressBarWrapper aria-label=\"Breadcrumbs\">\n    {steps.map((step, index) => <ProgressBarItem\n      key={index}\n      index={index}\n      isActive={index === activeIndex}\n      step={step}\n      goToStep={goToStep}\n    />)}\n  </ProgressBarWrapper>;\n","import { BulletList } from \"react-content-loader\";\nimport { colors } from \"../../src/theme\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  max-width: 1000px;\n  @media(min-width: 960px) {\n    // Around the height of a multiple choice with 4 options\n    min-height: 53.8rem;\n  }\n  padding: 2rem;\n  margin: 2rem;\n  border: 1px solid ${colors.palette.light};\n  border-radius: 0.25rem;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  > svg {\n    max-width: 600px;\n    flex-grow: 1;\n  }\n`;\n\nexport const Loader = () => <Wrapper><BulletList uniqueKey=\"OSLoader\" /></Wrapper>;\n"],"names":["ALPHABET","isAnswerIncorrect","answer","incorrectAnswerId","id","countWords","text","words","trim","match","length","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","TypesetMathContext","React","createContext","Error","Content","_ref","html","component","_ref$block","block","props","_objectWithoutPropertiesLoose","_excluded","typesetMath","useContext","useEffect","undefined","cloneElement","_extends","_jsx","jsx","dangerouslySetInnerHTML","__html","SimpleFeedback","children","contentRenderer","className","classnames","Feedback","wrapperClasses","position","_jsxs","palette","red","danger","darkRed","lightRed","green","lightGreen","darkGreen","paleYellow","teal","blue","mediumBlue","lightBlue","neutralLightBlue","tangerine","gray","darkGray","pale","light","white","neutralLightest","neutralCool","neutralBright","neutralLighter","neutralLight","neutralMedium","neutral","neutralThin","neutralDark","neutralFeedback","neutralDarker","black","orange","colors","hover","checked","correct","incorrect","popover","arrowOuterColor","borderColor","card","header","background","body","button","backgroundHover","backgroundActive","freeResponse","color","layouts","BREAKPOINTS","breakpoints","css","_taggedTemplateLiteralLoose","apply","slice","call","arguments","desktop","transitions","mixins","answerColor","invertBubble","answerChecked","answerCorrect","answerIncorrect","answerHover","answerCorrectAnswer","resetText","stepCardPadding","visuallyHidden","StyledAnswerIndicator","styled","div","state","AnswerIndicator","isCorrect","isIncorrect","AnswerAnswer","_props$answer","content_html","feedback_html","show_all_feedback","tableFeedbackEnabled","TeacherReview","answered_count","iter","percent","selected_count","Math","round","cn","AnswerChoice","onChangeAnswer","type","disabled","onKeyPress","qid","feedbackId","isSelected","ariaLabel","hasCorrectAnswer","jsxs","_Fragment","Fragment","correctIncorrectIcon","name","onChange","htmlFor","AnswerBody","Answer","answerId","correctAnswerId","isChecked","isAnswerChecked","correctness","isAnswerCorrect","classes","displayName","AnswersTable","idCounter","question","_props$type","correct_answer_id","correct_answer_feedback_html","_props$show_all_feedb","answerIdOrder","instructions","hideAnswers","idOrder","feedback","questionAnswerProps","answer_id","choicesEnabled","answersHtml","answers","sort","a","b","indexOf","map","i","additionalProps","question_id","parseInt","key","answerProps","Object","assign","push","index","forEach","item","spliceIndex","splice","role","InnerStepCard","OuterStepCard","StepCardHeader","StepCardQuestion","StepCard","questionNumber","numberOfQuestions","showTotalQuestions","stepType","isHomework","availablePoints","unpadded","questionId","multipartBadge","leftHeaderChildren","rightHeaderChildren","headerTitleChildren","otherProps","TaskStepCard","_ref2","step","_excluded2","task","uid","StyledButton","Button","isWaiting","waitingText","GlobalStyle","createGlobalStyle","CompletionStatusCard","CompletionHeader","h2","CompletionStatus","numberCompleted","handleClick","allCompleted","someCompleted","buttonText","split","toLowerCase","onClick","StyledQuestion","Question","forwardRef","ref","exerciseUid","solution","exercise_uid","context","hidePreambles","stem_html","_question$collaborato","collaborator_solutions","formats","stimulus_html","is_deleted","_question$collaborato2","displaySolution","find","s","hasSolution","join","QuestionHtml","hidden","displayFormats","FormatsListing","_props$html","_ref$formats","format","StepCardFooter","TextAreaErrorStyle","StyledFreeResponse","SyledQuestionStem","InfoRow","hasChildren","FreeResponseTextArea","textarea","isOverWordLimit","readOnly","RevertButton","FreeResponseInput","cancelHandler","defaultValue","infoRowChildren","isSubmitDisabled","saveHandler","submitBtnLabel","textHasChanged","wordLimit","questionProps","placeholder","AttemptsRemaining","count","PublishedComments","published_comments","SaveButton","willContinue","attempt_number","NextButton","canUpdateCurrentStep","FreeResponseReview","_ref3","free_response","ExerciseQuestion","answer_id_order","onAnswerChange","is_completed","hasMultipleAttempts","attempts_remaining","detailedSolution","canAnswer","needsSaved","apiIsPending","onAnswerSave","onNextStep","available_points","hasFeedback","_React$useState","useState","shouldContinue","setShouldContinue","MATH_MARKER_BLOCK","MATH_MARKER_INLINE","MATH_MARKED_CLASS","MATHJAX_CONFIG","extensions","showProcessingMessages","skipStartupTypeset","styles","left","right","visibility","tex2jax","displayMath","inlineMath","findUnprocessedMath","root","processedMath","Array","from","querySelectorAll","findProcessedMath","filter","node","findLatexNodes","latexNodes","_i","_Array$from","formula","getAttribute","classList","contains","textContent","tagName","add","resolveOrWait","resolve","remainingTries","setTimeout","typesetDocumentPromise","windowImpl","Promise","MathJax","Hub","Queue","isEmpty","Typeset","_step","result","_iterator","_createForOfIteratorHelperLoose","done","value","markLatexNodesRendered","typesetLatexNodes","mathMLNodes","typesetMathMLNodes","typesetDocument","getTypesetDocument","memoize","debounce","leading","trailing","bind","cache","WeakMap","startMathJax","once","window","configuredCallback","HTML","Cookie","prefix","Configured","Register","StartupHook","document","getElementById","script","createElement","src","async","head","appendChild","Config","processSectionDelay","AuthorInit","StyledToolbar","mobile","ExerciseToolbar","_icons$topic","_icons$errata","icons","settings","values","some","_location$toolbar$mob","_location$toolbar","location","toolbar","_location$toolbar$des","_location$toolbar2","topicUrl","topic","url","errataUrl","errata","href","target","FontAwesomeIcon","icon","faBookOpen","faTriangleExclamation","ItemWrapper","InnerWrapper","Popover","PopoverItem","wrapperProps","PopoverItemsWrapper","StyledFontAwesomeIcon","ExerciseHeaderIcons","typeExplanation","_icons$topic$location","_icons$errata$locatio","_icons$info$location","exercise","defaultHeaderLocation","items","isMultipleChoice","questions","every","q","includes","as","info","faCircleInfo","height","width","StyledTaskStepCard","ToolbarWrapper","desktopToolbarEnabled","mobileToolbarEnabled","TaskStepCardWithToolbar","exerciseIcons","Preamble","Exercise","scrollToQuestion","legacyStepRender","questionsRef","useRef","container","typesetExercise","useCallback","current","then","querySelector","MATH_DATA_SELECTOR","console","warn","e","reject","el","scrollToElement","_ref4","Provider","_state$solution","_createElement","SvgComponent","viewBox","fill","xmlns","d","ProgressBarWrapper","nav","StyledItemWrapper","span","shadowCss","StyledItem","isActive","variant","handleVariant","ItemIcon","variantData","faCheck","label","faXmark","isIncomplete","faQuestion","ProgressBarItem","goToStep","FlagIcon","Wrapper","BulletList","uniqueKey","activeIndex","steps"],"mappings":"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"}