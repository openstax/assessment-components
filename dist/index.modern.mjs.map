{"version":3,"file":"index.modern.mjs","sources":["../src/utils.ts","../src/components/Content.tsx","../src/components/Feedback.tsx","../src/components/Answer.tsx","../src/constants.ts","../src/components/AnswersTable.tsx","../src/theme.ts","../src/components/Question.tsx","../src/components/Button.tsx","../src/components/StepCardFooter.tsx","../src/components/FreeResponseInput.tsx","../src/components/Card.tsx","../src/components/ExerciseQuestion.tsx","../src/components/Exercise.tsx"],"sourcesContent":["import { Answer, ChosenAnswer, ID } from '../src/types';\n\nexport const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\nconst MAX_CORRECTNESS = '1.0';\n\nexport const isAnswerCorrect = function(answer: Answer, correctAnswerId?: ID | null) {\n  // if answer does not have an id, check the isCorrect property.\n  if (!(answer.id || correctAnswerId)) {\n    return answer.isCorrect;\n  }\n  let isCorrect = answer.id === correctAnswerId;\n  if (answer.correctness != null) { isCorrect = (answer.correctness === MAX_CORRECTNESS); }\n\n  return isCorrect;\n};\n\nexport const isAnswerIncorrect = function(answer: Answer, incorrectAnswerId?: ID) {\n  // Allow multiple attempts to show incorrectness without the correct_answer_id\n  return answer.id === incorrectAnswerId;\n};\n\nexport const isAnswerChecked = (answer: Answer, chosenAnswer?: ChosenAnswer) =>\n  Boolean((chosenAnswer || []).find( a => a == answer.id));\n\nexport function countWords(text: string) {\n  const trimmedText = text.trim();\n  //https://css-tricks.com/build-word-counter-app/\n  const words = trimmedText.match(/\\b[-?(\\w+)?]+\\b/gi);\n  if(!words) return 0;\n  return words.length;\n}\n","import React from \"react\";\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\ntype ComponentType = keyof JSX.IntrinsicElements | React.JSXElementConstructor<any>;\n\nexport interface ContentProps<T extends ComponentType | undefined> {\n  className?: string;\n  component?: T extends undefined ? undefined :\n    T extends ComponentType ? React.ReactComponentElement<T>:\n    never;\n  html: string;\n  block?: boolean;\n}\n\nexport const Content = (<T extends ComponentType | undefined>(\n  {html, component, block = false, ...props}: ContentProps<T>\n) => {\n  if (component !== undefined) {\n    return React.cloneElement(component, {html, ...props});\n  }\n  if (block) {\n    return <div dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  } else {\n    return <span dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  }\n});\n","import classnames from 'classnames';\nimport { Content } from './Content';\n\ninterface FeedbackProps {\n  position?: 'top' | 'bottom' | 'left' | 'right';\n  children: string;\n  className?: string;\n  contentRenderer?: JSX.Element;\n}\n\nconst SimpleFeedback = (props: Pick<FeedbackProps, 'children' | 'className' | 'contentRenderer'>) => (\n  <aside>\n    <Content\n      component={props.contentRenderer}\n      className={classnames('question-feedback-content', 'has-html', props.className)}\n      html={props.children}\n      block={true} />\n  </aside>\n);\n\nconst Feedback = (props: FeedbackProps) => {\n  const position = props.position || 'bottom';\n  const wrapperClasses = classnames('question-feedback', position);\n\n  return (\n    <aside className={wrapperClasses}>\n      <div className=\"arrow\" aria-label=\"Answer Feedback\" />\n      <SimpleFeedback {...props}>\n        {props.children}\n      </SimpleFeedback>\n    </aside>\n  );\n};\n\nexport { Feedback, SimpleFeedback };\n","import cn from 'classnames';\nimport { ReactNode } from 'react';\nimport { ALPHABET, isAnswerChecked, isAnswerCorrect, isAnswerIncorrect } from '../utils';\nimport { Answer as AnswerType, ChosenAnswer, ID } from '../types';\nimport { Content } from './Content';\nimport { SimpleFeedback } from './Feedback';\n\nexport interface AnswerProps {\n  answer: AnswerType;\n  iter: number;\n  qid: ID;\n  type: 'teacher-review' | 'teacher-preview' | 'student' | 'student-mpp';\n  hasCorrectAnswer?: boolean;\n  onChangeAnswer: () => void;\n  disabled: boolean;\n  chosenAnswer: ChosenAnswer;\n  correctAnswerId?: ID | null;\n  incorrectAnswerId?: ID;\n  onKeyPress?: () => void;\n  answered_count?: number;\n  correctIncorrectIcon?: ReactNode,\n  radioBox?: ReactNode;\n  contentRenderer?: JSX.Element;\n  show_all_feedback?: boolean;\n}\n\nexport const Answer = (props: AnswerProps) => {\n  const {\n    type,\n    iter,\n    answer,\n    disabled,\n    onKeyPress,\n    qid,\n    chosenAnswer,\n    correctAnswerId,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    answered_count,\n    contentRenderer,\n    show_all_feedback\n  } = props;\n\n  let body, feedback, selectedCount;\n\n  const isChecked = isAnswerChecked(answer, chosenAnswer);\n  const isCorrect = isAnswerCorrect(answer, correctAnswerId);\n  const isIncorrect = isAnswerIncorrect(answer, incorrectAnswerId);\n\n  const correctIncorrectIcon = (\n    <div className=\"correct-incorrect\">\n      {isCorrect && props.correctIncorrectIcon}\n    </div>\n  );\n\n  const classes = cn('answers-answer', {\n    'disabled': disabled,\n    'answer-checked': isChecked,\n    'answer-correct': isCorrect && type !== 'student-mpp',\n    'answer-incorrect': incorrectAnswerId && isAnswerIncorrect(answer, incorrectAnswerId),\n  });\n\n  let ariaLabel = `${isChecked ? 'Selected ' : ''}Choice ${ALPHABET[iter]}`;\n  // somewhat misleading - this means that there is a correct answer,\n  // not necessarily that this answer is correct\n  if (hasCorrectAnswer) {\n    ariaLabel += `(${isCorrect ? 'Correct' : 'Incorrect'} Answer)`;\n  }\n  ariaLabel += ':';\n\n  let onChangeAnswer, radioBox;\n\n  if (!hasCorrectAnswer\n    && (type !== 'teacher-review')\n    && (type !== 'teacher-preview')\n    && (type !== 'student-mpp')) {\n    ({ onChangeAnswer } = props);\n  }\n\n  if (onChangeAnswer) {\n    radioBox = (\n      <input\n        type=\"radio\"\n        className=\"answer-input-box\"\n        checked={isChecked}\n        id={`${qid}-option-${iter}`}\n        name={`${qid}-options`}\n        onChange={onChangeAnswer}\n        disabled={disabled}\n      />\n    );\n  }\n\n  if (show_all_feedback && answer.feedback_html) {\n    feedback = (\n      <SimpleFeedback key=\"question-mc-feedback\" contentRenderer={contentRenderer}>\n        {answer.feedback_html}\n      </SimpleFeedback>\n    );\n  }\n\n  if (type === 'teacher-review') {\n    let percent = 0;\n    if (answer.selected_count && answered_count) {\n      percent = Math.round((answer.selected_count / answered_count) * 100);\n    }\n    selectedCount = (\n      <span\n        className=\"selected-count\"\n        data-percent={`${percent}`}\n      >\n        {answer.selected_count}\n      </span>\n    );\n\n    body = (\n      <div className=\"review-wrapper\">\n        <div className={cn('review-count', { 'green': isCorrect, 'red': !isCorrect })}>\n          {selectedCount}\n          <span className={cn('letter', { 'green': isCorrect, 'red': !isCorrect })}>\n            {ALPHABET[iter]}\n          </span>\n        </div>\n\n        <div className=\"answer-answer\">\n          <Content className=\"answer-content\" component={contentRenderer} html={answer.content_html} />\n          {feedback}\n        </div>\n      </div>\n    );\n  } else {\n    body = (\n      <>\n        {type === 'teacher-preview' && correctIncorrectIcon}\n        {selectedCount}\n        {radioBox}\n        <label\n          onKeyPress={onKeyPress}\n          htmlFor={`${qid}-option-${iter}`}\n          className=\"answer-label\">\n          <span className=\"answer-letter-wrapper\">\n            <button\n              onClick={onChangeAnswer}\n              aria-label={ariaLabel}\n              className=\"answer-letter\"\n              disabled={disabled || isIncorrect}\n              data-test-id={`answer-choice-${ALPHABET[iter]}`}\n            >\n              {ALPHABET[iter]}\n            </button>\n          </span>\n          <div className=\"answer-answer\">\n            <Content className=\"answer-content\" component={contentRenderer} html={answer.content_html} />\n            {feedback}\n          </div>\n        </label>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"openstax-answer\">\n      <section role=\"region\" className={classes}>\n        {body}\n      </section>\n    </div>\n  );\n}\nAnswer.displayName = 'OSAnswer';\n","import { AnswerDisplayType } from './types';\n\nexport const defaultAnswerType: AnswerDisplayType = 'student';\n","import { defaultAnswerType } from \"../constants\";\nimport { Answer as AnswerType, AnswerDisplayType, ID, ExerciseQuestionData } from \"src/types\";\nimport { Answer } from \"./Answer\";\nimport { Feedback } from \"./Feedback\";\n\nexport interface AnswersTableProps {\n  question: ExerciseQuestionData;\n  type?: AnswerDisplayType;\n  answer_id?: ID;\n  correct_answer_id?: ID | null;\n  incorrectAnswerId?: ID;\n  answerIdOrder?: ID[],\n  feedback_html: string;\n  correct_answer_feedback_html?: string;\n  answered_count?: number;\n  show_all_feedback?: boolean;\n  onChangeAnswer: () => void;\n  hideAnswers: boolean;\n  hasCorrectAnswer?: boolean;\n  onChangeAttempt?: () => void;\n  choicesEnabled?: boolean;\n  onKeyPress?: () => void;\n  contentRenderer?: JSX.Element;\n  instructions?: JSX.Element;\n}\n\nexport const AnswersTable = (props: AnswersTableProps) => {\n  let idCounter = 0;\n\n  const {\n    question, hideAnswers, type = defaultAnswerType, answered_count, choicesEnabled, correct_answer_id,\n    incorrectAnswerId, answer_id, feedback_html, correct_answer_feedback_html,\n    show_all_feedback = false, hasCorrectAnswer, onChangeAnswer, onKeyPress, answerIdOrder, instructions\n  } = props;\n  if (hideAnswers) { return null; }\n\n  const { id } = question;\n\n  const feedback: { index: number, html: string }[] = [];\n\n  const chosenAnswer = [answer_id];\n\n  const sortedAnswersByIdOrder = (idOrder: ID[]) => {\n    const { answers } = question;\n    return answers.slice().sort((a, b) => idOrder.indexOf(a.id) - idOrder.indexOf(b.id));\n  }\n\n  const questionAnswerProps = {\n    qid: id || `auto-${idCounter++}`,\n    correctAnswerId: correct_answer_id,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    chosenAnswer,\n    onChangeAnswer: onChangeAnswer,\n    type,\n    answered_count,\n    disabled: !choicesEnabled,\n    show_all_feedback,\n    onKeyPress\n  };\n\n  const answers = answerIdOrder ? sortedAnswersByIdOrder(answerIdOrder) : question.answers;\n\n  const answersHtml = answers.map((answer, i) => {\n    const additionalProps: { answer: AnswerType, iter: number, key: string }\n      = { answer, iter: i, key: `${questionAnswerProps.qid}-option-${i}` };\n    const answerProps = Object.assign({}, additionalProps, questionAnswerProps);\n\n    if (answer.id === incorrectAnswerId && feedback_html) {\n      feedback.push({ index: i, html: feedback_html })\n    } else if (answer.id === correct_answer_id && correct_answer_feedback_html) {\n      feedback.push({ index: i, html: correct_answer_feedback_html })\n    }\n\n    return (\n      <Answer {...answerProps} />\n    );\n  });\n\n  feedback.forEach((item, i) => {\n    const spliceIndex = item.index + i + 1;\n    answersHtml.splice(spliceIndex, 0, (\n      <Feedback key={spliceIndex} contentRenderer={props.contentRenderer}>\n        {item.html}\n      </Feedback>\n    ));\n  });\n\n  return (\n    <div className=\"answers-table\">\n      {instructions}\n      {answersHtml}\n    </div>\n  );\n}\n","import { css } from 'styled-components';\n\nconst palette = {\n  red: \"#ca2026\",\n  danger: \"#c2002f\",\n  darkRed: \"#c22032\",\n  lightRed: \"#e298a0\",\n  green: \"#77af42\",\n  lightGreen: \"#8bc753\",\n  darkGreen: \"#63a524\",\n  paleYellow: \"#ffffbb\",\n  teal: \"#0dc0de\",\n  blue: \"#007da4\",\n  lightBlue: \"#34bdd8\",\n  neutralLightBlue: \"#0dc0dc\",\n  tangerine: \"#ffbd3e\",\n  gray: \"#5e5e5e\",\n  darkGray: \"#757575\",\n  pale: \"#d5d5d5\",\n  light: \"#e4e4e4\",\n  white: \"#ffffff\",\n  neutralLightest: \"#f9f9f9\", // nearly white\n  neutralCool: \"#f6f7f8\", // cool bright gray\n  neutralBright: \"#f5f5f5\", // bright gray\n  neutralLighter: \"#f1f1f1\", // light gray\n  neutralLight: \"#e5e5e5\", // light gray\n  neutralMedium: \"#a0a0a0\", // light gray\n  neutral: \"#818181\", // gray\n  neutralThin: \"#6f6f6f\", // medium gray\n  neutralDark: \"#5f6163\", // dark gray\n  neutralDarker: \"#424242\", // very dark gray\n  black: \"#000000\",\n  orange: \"#D4450C\"\n};\n\nexport const colors = {\n  palette: palette,\n  answer: {\n    color: palette.lightBlue,\n    correct: {\n      color: palette.green,\n      background: \"#77af42\",\n    },\n    incorrect: {\n      color: palette.red,\n      background: palette.red,\n    },\n    checked: palette.lightBlue,\n    hover: palette.neutralDark,\n    label: {\n      color: palette.neutralMedium,\n      colorHover: palette.neutralDark,\n      colorSelected: palette.lightBlue,\n    },\n    feedback: {\n      arrowOuterColor: \"rgba(0, 0, 0, 0.25)\",\n      popover: {\n        borderColor: \"rgba(0, 0, 0, 0.2)\",\n      },\n    },\n  },\n  card: {\n    background: \"#daf3f8\",\n  },\n  button: {\n    background: palette.orange,\n    backgroundHover: \"#E74B0D\",\n    backgroundActive: \"#C5400B\"\n  },\n  freeResponse: {\n    color: palette.neutralDark,\n    background: palette.neutralLighter,\n  },\n};\n\nexport const layouts = {\n  answer: {\n    verticalSpacing: \"1.5rem\",\n    horizontalSpacing: \"1rem\",\n    horizontalBuffer: \"2.5rem\",\n    bubbleSize: \"4rem\",\n    labelSpacing: \"6.5rem\",\n    feedback: {\n      arrow: {\n        width: \"20px\",\n        height: \"15px\",\n      },\n      popover: {\n        horizontalSpacing: \"2rem\",\n        verticalSpacing: \"2rem\",\n        horizontalBuffer: \"4rem\",\n        borderWidth: \"1px\",\n        maxWidth: \"370px\",\n      }\n    },\n  },\n};\n\nexport const BREAKPOINTS = {\n  mobile: 600,\n  tablet: 999,\n  desktop: 1000,\n  large: 1600,\n};\n\nexport const breakpoints = {\n  mobile(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n  },\n  tablet(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.tablet}px) { ${css(...args)} }`;\n  },\n  desktop(...args: Parameters<typeof css>) {\n    return css`@media(min-width: ${BREAKPOINTS.desktop}px) { ${css(...args)} }`;\n  },\n  only: {\n    mobile(...args: Parameters<typeof css>) {\n      return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n    },\n  },\n  margins: {\n    mobile: '8px',\n    tablet: '24px',\n  },\n};\n\nexport const transitions = {\n  answer: \"0.1s ease-in-out\",\n}\n\nexport const mixins = {\n  answer: () => css`\n    .answer-label {\n      display: flex;\n    }\n    color: ${colors.answer.label.color};\n    .answer-letter {\n      width: ${layouts.answer.bubbleSize};\n      height: ${layouts.answer.bubbleSize};\n      min-width: ${layouts.answer.bubbleSize};\n      min-height: ${layouts.answer.bubbleSize};\n      border-radius: calc(${layouts.answer.bubbleSize} / 2);\n      border-width: 2px;\n      border-style: solid;\n      border-color: #c6c6c6;\n      color: ${colors.answer.label.colorHover};\n      transition: color ${transitions.answer}, border-color ${transitions.answer}, background-color ${transitions.answer};\n      background-color: ${colors.palette.white};\n    }\n  `,\n  answerColor: (values: { color: string, background: string }) => css`\n    color: ${values.color};\n    .answer-letter {\n       border-color: ${values.color};\n       background-color: ${values.background};\n       color: ${colors.palette.white};\n    }\n  `,\n  answerChecked: () => mixins.answerColor({ color: colors.answer.checked, background: colors.answer.checked }),\n  answerCorrect: () => mixins.answerColor(colors.answer.correct),\n  answerIncorrect: () => mixins.answerColor(colors.answer.incorrect),\n  answerHover: () => css`\n    color: ${colors.answer.label.colorHover};\n    .answer-letter {\n      border-color: ${colors.answer.label.colorSelected};\n    }\n  `,\n  answerCorrectText: () => css`\n    content: 'correct answer';\n    color: ${colors.answer.label.color};\n    margin-left: calc(-1.25 * ${layouts.answer.bubbleSize});\n    width: calc(1.25 * ${layouts.answer.bubbleSize});\n    text-align: center;\n    font-size: 1.2rem;\n    // em used here for line-height for compatibility with IE\n    // http://caniuse.com/#feat=rem -- rem ignored in pseudo elements\n    line-height: 1em;\n    margin-top: 0.8rem;\n  `,\n  answerCorrectAnswer: () => css`\n    color: ${colors.answer.correct.color};\n    .answer-letter {\n      border-color: ${colors.answer.correct.color};\n      color: ${colors.answer.correct.color};\n    }\n    &::before {\n     ${mixins.answerCorrectText()}\n      @media screen and (max-width: ${BREAKPOINTS.tablet}px) {\n        display: none;\n      }\n    }\n    @media screen and (max-width:  ${BREAKPOINTS.tablet}px) {\n      .answer-letter-wrapper {\n        display: flex;\n        flex-direction: column;\n        &::after {\n          ${mixins.answerCorrectText()}\n          width: $openstax-answer-bubble-size !important;\n          margin-left: 0;\n        }\n      }\n    }\n  `,\n  resetText: () => css`\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.6;\n    text-align: left;\n    text-align: start;\n    text-decoration: none;\n    text-shadow: none;\n    text-transform: none;\n    letter-spacing: normal;\n    word-break: normal;\n    word-spacing: normal;\n    white-space: normal;\n    line-break: auto;\n  `,\n  stepCardPadding: () => css`\n    padding: 48px 140px;\n\n    ${breakpoints.tablet`\n      padding: ${breakpoints.margins.tablet} ${breakpoints.margins.tablet};\n    `}\n\n    ${breakpoints.mobile`\n      padding: calc(${breakpoints.margins.mobile} * 2) ${breakpoints.margins.mobile};\n    `}\n  `,\n};\n\nconst theme = {\n  colors: colors,\n  layouts: layouts,\n  transitions: transitions,\n  breakpoints: breakpoints,\n};\n\nexport default theme;\n","import styled from 'styled-components';\nimport { mixins, colors, layouts, transitions } from '../theme';\nimport { AnswersTable } from './AnswersTable';\nimport classnames from 'classnames';\nimport { ID, ExerciseQuestionData, Task } from 'src/types';\nimport { ReactNode } from 'react';\nimport { Content } from './Content';\n\nconst StyledQuestion = styled.div`\n&.step-card-body {\n  ${mixins.stepCardPadding()};\n}\n\n&.openstax-question {\n  font-size: 2rem;\n\n  .detailed-solution {\n    margin-bottom: 1rem;\n    .header {\n      display: inline;\n      margin-right: 0.5rem;\n      color: #5e6062;\n      font-weight: bold;\n      flex-basis: 0;\n    }\n    .solution {\n      display: inline;\n      color: #6f6f6f;\n    }\n  }\n\n  img {\n    display: block;\n    margin: auto;\n    max-width: 100%;\n  }\n\n  .question-stem {\n    margin-bottom: 0;\n  }\n\n  .answers-table {\n    margin-bottom: 20px;\n    font-size: 17px;\n    line-height: 25px;\n  }\n\n  .instructions {\n    font-size: 1.4rem;\n    font-style: italic;\n    margin-top: 10px;\n    color: ${colors.palette.neutral};\n    margin: 0;\n\n    i {\n      margin-left: 5px;\n    }\n\n    .text-info {\n      color: ${colors.palette.neutralLightBlue};\n      padding-left: 5px;\n      cursor: pointer;\n      font-style: normal;\n    }\n  }\n\n  .multiple-choice-prompt {\n    font-weight: 600;\n  }\n\n  .free-response {\n    padding: ${layouts.answer.horizontalSpacing} ${layouts.answer.horizontalBuffer};\n    margin: ${layouts.answer.verticalSpacing} 0 ${layouts.answer.horizontalSpacing} ${layouts.answer.verticalSpacing};\n    border-left: ${layouts.answer.horizontalSpacing} solid ${colors.palette.neutralLighter};\n    font-style: italic;\n  }\n\n  &:not(.openstax-question-preview) {\n    .answers-answer {\n      width: initial;\n      &:not(.disabled){\n        .answer-label:focus{\n          background-color: ${colors.palette.neutralLightest};\n        }\n      }\n      ${mixins.answer()};\n    }\n\n    .answer-answer {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      margin-left: ${layouts.answer.horizontalSpacing};\n      * {\n        margin: 0;\n      }\n    }\n\n    .answer-letter {\n      text-align: center;\n      padding: 0;\n    }\n\n\n    .answer-label {\n      font-weight: normal;\n      width: 100%;\n      padding: ${layouts.answer.verticalSpacing} 0 0 0;\n      margin: 0;\n\n      transition: color ${transitions.answer};\n    }\n\n    // a selectable answer\n    .answer-input-box:not([disabled]) ~ .answer-label {\n      cursor: pointer;\n\n      &:hover {\n        ${mixins.answerHover()}\n      }\n    }\n\n    // a selected answer\n    &:not(.has-correct-answer) {\n      .answer-input-box {\n        display: none;\n\n        &:checked {\n          + .answer-label,\n          + .answer-label:hover {\n            ${mixins.answerChecked()};\n          }\n        }\n      }\n\n      .answer-checked{\n        .answer-label {\n          ${mixins.answerChecked()};\n        }\n      }\n    }\n\n    // answer that has been checked\n    &.has-correct-answer {\n      .answer-checked {\n        &:not(.answer-correct) {\n          .answer-label {\n            ${mixins.answerIncorrect()};\n          }\n        }\n\n        &.answer-correct {\n          .answer-label {\n            ${mixins.answerCorrect()};\n          }\n        }\n      }\n\n      .answer-correct:not(.answer-checked) {\n        .answer-label {\n          ${mixins.answerCorrectAnswer()}\n        }\n      }\n    }\n\n    &.has-incorrect-answer {\n      .answer-incorrect, .answer-checked.answer-incorrect {\n        .answer-label {\n          ${mixins.answerIncorrect()}\n        }\n      }\n    }\n\n    .question-feedback {\n      ${mixins.resetText()}\n\n      z-index: 1;\n      position: relative;\n      border: ${layouts.answer.feedback.popover.borderWidth} solid ${colors.answer.feedback.popover.borderColor};\n      background-color: ${colors.palette.white};\n      background-clip: padding-box;\n      border-radius: 0.3rem;\n      max-width: ${layouts.answer.feedback.popover.maxWidth};\n      margin: calc(${layouts.answer.feedback.arrow.height} - 5px) 0 ${layouts.answer.horizontalSpacing} calc(-1 * (2 * ${layouts.answer.horizontalSpacing}));\n      box-shadow: 10px 0px 10px rgba(0, 0, 0, .25);\n      color: ${colors.palette.neutral};\n      font-size: 1.4rem;\n      font-style: italic;\n\n      .arrow {\n        position: absolute;\n        display: block;\n        width: ${layouts.answer.feedback.arrow.width};\n        height: ${layouts.answer.feedback.arrow.height};\n        margin-left: 30px;\n        top: calc((${layouts.answer.feedback.arrow.height} + ${layouts.answer.feedback.popover.borderWidth}) * -1);\n\n        &::before,\n        &::after {\n          position: absolute;\n          display: block;\n          content: \"\";\n          border-color: transparent;\n          border-style: solid;\n          border-width: 0 calc(${layouts.answer.feedback.arrow.width} / 2) ${layouts.answer.feedback.arrow.height} calc(${layouts.answer.feedback.arrow.width} / 2);\n        }\n        &::before {\n          top: 0;\n          border-bottom-color: ${colors.answer.feedback.popover.borderColor};\n        }\n        &::after {\n          top: ${layouts.answer.feedback.popover.borderWidth};\n          border-bottom-color: ${colors.palette.white};\n        }\n      }\n\n      .question-feedback-content {\n        padding: ${layouts.answer.feedback.popover.verticalSpacing} ${layouts.answer.feedback.popover.horizontalSpacing};\n      }\n    }\n  }\n\n  .openstax-answer {\n    border-top: 1px solid #d5d5d5;\n    margin: 10px 0;\n    padding: 10px 0;\n  }\n}\n`;\n\nexport interface QuestionProps {\n  question: ExerciseQuestionData,\n  answer_id?: ID;\n  task?: Task | null,\n  correct_answer_id: ID | null;\n  incorrectAnswerId: ID;\n  hideAnswers: boolean;\n  hidePreambles?: boolean,\n  exercise_uid?: string;\n  displayFormats: boolean,\n  className: string;\n  questionNumber: number;\n  displaySolution: boolean;\n  context?: string;\n  correct_answer_feedback_html?: string;\n  contentRenderer?: JSX.Element;\n  feedback_html: string;\n  onChange: () => void;\n  show_all_feedback?: boolean;\n  children?: ReactNode;\n  answerIdOrder?: ID[];\n  choicesEnabled?: boolean;\n}\n\nexport const Question = (props: QuestionProps) => {\n  let exerciseUid, solution;\n\n  const {\n    question, correct_answer_id, incorrectAnswerId, exercise_uid, className, questionNumber, context, task, hidePreambles\n  } = props;\n\n  const { stem_html, collaborator_solutions = [], formats, stimulus_html } = question;\n\n  const hasCorrectAnswer = !!correct_answer_id;\n  const hasIncorrectAnswer = !!incorrectAnswerId;\n\n  const taskIsDeleted = (task != null ? task.is_deleted : undefined)\n  const taskIsHomework = ((task != null ? task.type : undefined) === 'homework');\n\n  const classes = classnames('openstax-question', className, {\n    'has-correct-answer': hasCorrectAnswer && !(taskIsDeleted && taskIsHomework),\n    'has-incorrect-answer': hasIncorrectAnswer,\n  });\n\n  const hasSolution = () => {\n    const { displaySolution } = props;\n    const { collaborator_solutions = [] } = question;\n\n    return (\n      displaySolution &&\n      collaborator_solutions &&\n      collaborator_solutions.find(s => s['content_html'] !== undefined)\n    );\n  };\n\n  if (exercise_uid != null) {\n    exerciseUid = (\n      <div className=\"exercise-uid\">\n        {exercise_uid}\n      </div>\n    );\n  }\n\n  if (hasSolution()) {\n    solution =\n      <div className=\"detailed-solution\">\n        <div className=\"header\">\n          Detailed solution:\n        </div>\n        <Content\n          className=\"solution\"\n          block={true}\n          html={collaborator_solutions.map(s => s['content_html']).join('')} />\n      </div>;\n  }\n\n  return (\n    <StyledQuestion className={classes} data-question-number={questionNumber} data-test-id=\"question\">\n      <QuestionHtml type=\"context\" html={context} hidden={hidePreambles} />\n      <QuestionHtml type=\"stimulus\" html={stimulus_html} hidden={hidePreambles} />\n      <QuestionHtml type=\"stem\" html={stem_html} hidden={hidePreambles} questionNumber={questionNumber} />\n      {props.children}\n\n      <AnswersTable\n        {...props}\n        onChangeAnswer={props.onChange}\n        hasCorrectAnswer={hasCorrectAnswer} />\n\n      {solution}\n      {props.displayFormats ? <FormatsListing formats={formats} /> : undefined}\n      {exerciseUid}\n    </StyledQuestion>\n  );\n}\n\ninterface QuestionHtmlProps {\n  html?: string;\n  type: string;\n  hidden: QuestionProps['hidePreambles'];\n  questionNumber?: QuestionProps['questionNumber'];\n}\n\nexport const QuestionHtml = (props: QuestionHtmlProps) => {\n  const { html = '', type, hidden, questionNumber } = props;\n  if (hidden === true || !(html.length > 0)) { return null; }\n\n  return (\n    <Content\n      html={html}\n      data-question-number={questionNumber}\n      className={`question-${type}`}\n      block={true}\n    />\n  );\n};\n\nconst FormatsListing = ({ formats = [] }: { formats: ExerciseQuestionData['formats'] }) => {\n  return (\n    <div className=\"formats-listing\">\n      <div className=\"header\">Formats:</div>\n      {formats.map((format, i) => <span key={i}>{format}</span>)}\n    </div>\n  );\n};\n","import { colors } from \"../theme\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  background-color: ${colors.button.background};\n  color: ${colors.palette.white};\n  font-size: 1.6rem;\n  font-weight: 700;\n  line-height: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 4rem;\n  padding: 0 3rem;\n  border: 0;\n  border-radius: 5px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:not([disabled]) {\n    cursor: pointer;\n    &:hover {\n      background: ${colors.button.backgroundHover}\n    }\n    &:active {\n      background: ${colors.button.backgroundActive}\n    }\n  }\n  &:disabled {\n    opacity: 0.4;\n  }\n`;\n\ninterface ButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting?: never;\n  waitingText?: never;\n}\ninterface WaitingButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting: boolean;\n  waitingText: string;\n}\n\nconst Button = (props: ButtonProps | WaitingButtonProps) => {\n  const { disabled, isWaiting, waitingText, children, ...otherProps } = props;\n\n  return (\n    <StyledButton {...otherProps} disabled={isWaiting || disabled}>{(isWaiting && waitingText) || children}</StyledButton>\n  );\n}\n\nexport default Button;\n","import { colors, breakpoints, mixins } from \"../theme\";\nimport styled from \"styled-components\";\n\nexport const StepCardFooter = styled.div`\n    ${mixins.stepCardPadding()}\n    border-top: 1px solid ${colors.palette.pale};\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    font-size: 1.4rem;\n    line-height: 2rem;\n\n    > * {\n        flex-grow: 1;\n    }\n\n    button {\n        width: 160px;\n        height: 48px;\n    }\n\n    .points {\n        margin-bottom: 1.6rem; // Replace with https://caniuse.com/?search=gap soon\n\n        .attempts-left {\n            color: #F36B32;\n        }\n    }\n\n    .controls {\n        display: flex;\n        flex-flow: column wrap-reverse;\n        margin-left: 1.6rem; // Replace with https://caniuse.com/?search=gap soon\n\n        button + button {\n            margin: 0.8rem 0 0 0;\n        }\n    }\n\n    ${breakpoints.desktop`\n        padding: 32px 140px;\n        flex-wrap: nowrap;\n\n        .points {\n            max-width: 400px;\n        }\n\n        .controls {\n            flex-flow: row;\n            justify-content: flex-end;\n\n            button + button {\n                margin: 0 0 0 0.8rem;\n            }\n        }\n    `}\n`;\n","import { MouseEventHandler, ReactNode } from 'react';\nimport { countWords } from '../utils';\nimport styled, { css } from 'styled-components';\nimport { colors, mixins } from '../theme';\nimport { AvailablePoints, ExerciseQuestionData } from 'src/types';\nimport { QuestionHtml } from './Question';\nimport Button from './Button';\nimport { StepCardFooter } from './StepCardFooter';\n\nexport interface FreeResponseProps {\n  readOnly: boolean;\n  wordLimit: number;\n  infoRowChildren?: ReactNode;\n  pointsChildren?: ReactNode;\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  cancelHandler: MouseEventHandler<HTMLButtonElement>;\n  saveHandler: MouseEventHandler<HTMLButtonElement>;\n  defaultValue: string;\n  isSubmitDisabled: boolean;\n  questionNumber: number,\n  question: ExerciseQuestionData,\n  availablePoints: AvailablePoints,\n  textHasChanged: boolean;\n  submitBtnLabel: string;\n}\n\nconst TextAreaErrorStyle = css`\n  background-color: #f5e9ea;\n`;\n\nconst StyledFreeResponse = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n  }\n`;\n\nconst SyledQuestionStem = styled.div`\n  font-size: 2rem;\n  line-height: 1.68em;\n  position: relative;\n`;\n\nconst InfoRow = styled.div<{ hasChildren: boolean }>`\n  margin: 8px 0;\n  display: flex;\n  justify-content: ${props => props.hasChildren ? 'space-between' : 'flex-end'};\n  line-height: 1.6rem;\n\n  .word-limit-error-info {\n    color: ${colors.palette.danger};\n  }\n\n  div > span {\n    font-size: 12px;\n    line-height: 16px;\n\n    + span {\n      margin-left: 1rem;\n    }\n  }\n\n  .last-submitted + * {\n    margin-top: 0.8rem;\n  }\n\n  color: ${colors.palette.neutralThin};\n`;\n\nexport const FreeResponseTextArea = styled.textarea<{ isOverWordLimit: boolean } & FreeResponseProps>`\n  display: block;\n  font-family: inherit;\n  font-size: 1.8rem;\n  line-height: 3rem;\n  width: 100%;\n  min-height: 10.5em;\n  line-height: 1.5em;\n  margin: 2.5rem 0 0 0;\n  padding: 0.5em;\n  border: 1px solid ${colors.palette.neutral};\n  color: ${colors.palette.neutralDark};\n  ${props => props.isOverWordLimit && TextAreaErrorStyle};\n  ${props => props.isOverWordLimit && css`\n    border: 2px solid ${colors.palette.danger};\n  `}\n  background-color: ${props => props.readOnly && colors.palette.neutralCool};\n`;\nFreeResponseTextArea.displayName = 'OSFreeResponseTextArea';\n\nconst RevertButton = (props: {\n  disabled: boolean\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button {...props}>\n    Cancel\n  </Button>\n);\n\n\nexport const FreeResponseInput = (props: FreeResponseProps) => {\n  const {\n    availablePoints,\n    cancelHandler,\n    defaultValue,\n    infoRowChildren,\n    isSubmitDisabled,\n    pointsChildren,\n    question,\n    questionNumber,\n    saveHandler,\n    submitBtnLabel,\n    textHasChanged,\n    wordLimit,\n  } = props;\n\n  const isOverWordLimit = countWords(defaultValue) > wordLimit;\n\n  const questionProps = {};\n  if (questionNumber) { questionProps['data-question-number'] = questionNumber; }\n\n  return (\n    <StyledFreeResponse data-test-id=\"student-free-response\">\n      <div className=\"step-card-body\">\n        <SyledQuestionStem {...questionProps}>\n          {question.stem_html &&\n            <QuestionHtml type=\"stem\" html={question.stem_html} hidden={false} />}\n        </SyledQuestionStem>\n        <FreeResponseTextArea\n          {...props}\n          isOverWordLimit={isOverWordLimit}\n          data-test-id=\"free-response-box\"\n          placeholder=\"Enter your response...\"\n          aria-label=\"question response text box\"\n        />\n        <InfoRow hasChildren={!!infoRowChildren}>\n          {infoRowChildren}\n          <div>\n            <span>{countWords(defaultValue)} words</span>\n            {isOverWordLimit && <span className=\"word-limit-error-info\">Maximum {wordLimit} words</span>}\n          </div>\n        </InfoRow>\n      </div>\n      <StepCardFooter>\n        <div className=\"points\">\n          <strong>Points: {availablePoints}</strong>\n          {pointsChildren}\n        </div>\n        <div className=\"controls\">\n          <RevertButton disabled={!textHasChanged} onClick={cancelHandler} />\n          <Button\n            data-test-id=\"submit-answer-btn\"\n            disabled={isSubmitDisabled || isOverWordLimit}\n            onClick={saveHandler}\n          >\n            {submitBtnLabel}\n          </Button>\n        </div>\n      </StepCardFooter>\n    </StyledFreeResponse>\n  );\n}\n\nFreeResponseInput.displayName = 'OSFreeResponse';\n","import { ReactNode } from \"react\";\nimport { breakpoints, colors, mixins } from \"../theme\";\nimport { AvailablePoints, Step } from \"../types\";\nimport styled from \"styled-components\";\nimport cn from \"classnames\";\n\nexport const InnerStepCard = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  min-height: 400px;\n  border-radius: 0.25rem;\n  margin: 0 auto 5rem auto;\n  border: 1px solid ${colors.palette.light};\n  border-radius: 0.25rem;\n  background-color: white;\n\n  ${breakpoints.desktop`\n    max-width: 1000px;\n    min-width: 750px;\n  `}\n`;\n\nexport const OuterStepCard = styled.div`\n  padding: 2rem;\n\n  ${breakpoints.tablet`\n    padding: 0;\n  `}\n`;\n\nconst StepCardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 24px;\n  background: ${colors.card.background};\n  font-size: 1.8rem;\n  line-height: 3rem;\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n\n  div.question-info {\n    font-weight: bold;\n\n    .ox-icon-lock {\n        margin-right: 1rem;\n    }\n  }\n\n  .num-questions, .points, .separator {\n      display: none;\n  }\n\n  .exercise-id, .separator {\n      font-weight: normal;\n  }\n\n  .separator {\n      margin: 0 1rem;\n  }\n\n  .exercise-id {\n      height: 28px; // Fix baseline issue\n  }\n\n  button {\n    color: ${colors.palette.gray};\n  }\n\n  .openstax-exercise-badges {\n      margin: 0;\n      line-height: 2rem;\n      svg {\n          display: block;\n          &:not(.interactive) {\n              margin: 0 0 0 6px !important;\n          }\n      }\n  }\n\n  ${breakpoints.desktop`\n      button.ox-icon-angle-left, button.ox-icon-angle-right {\n          display: none;\n      }\n      .separator {\n          display: inherit;\n      }\n  `}\n\n    /*\n    1. Show the arrows to move to previous and next question.\n    2. Show the number of questions.\n    3. Override box-shadow of icons when turned into a button.\n    */\n    ${breakpoints.tablet`\n        font-size: 1.6rem;\n        line-height: 2.5rem;\n\n        svg.ox-icon {\n            display: inherit;\n            margin: 0;\n        }\n        button.ox-icon-angle-left {\n            margin-right: ${breakpoints.margins.tablet};\n        }\n        button.ox-icon-angle-right {\n            margin-left: ${breakpoints.margins.tablet};\n        }\n        .openstax-exercise-badges svg {\n            display: none;\n        }\n        .num-questions, points {\n            display: inherit;\n        }\n\n        .exercise-id {\n            display: none;\n        }\n\n        button[class^='ox-icon-angle']:hover {\n            box-shadow: none;\n        }\n  `}\n\n  ${breakpoints.mobile`\n      font-size: 1.4rem;\n      line-height: 2rem;\n      padding: 10px 8px;\n\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n  `}\n`;\nStepCardHeader.displayName = 'StepCardHeader';\n\nconst StepCardQuestion = styled.div<{ unpadded?: boolean }>`\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n  }\n\n    & + div .step-card-body {\n        padding-top: 0;\n    }\n\n    &.exercise-context, &.exercise-stimulus, &.exercise-stem {\n        padding-bottom: 0;\n    }\n\n    ${breakpoints.only.mobile`\n        && .question-feedback {\n            margin-left: 0;\n\n           .arrow { margin-left: 12px; }\n        }\n    `}\n\n    .reading-step & {\n        padding: 0;\n    }\n\n    ${breakpoints.desktop`\n        .video-step &, .interactive-step & {\n            .openstax-exercise-badges {\n              margin-right: 3.8rem;\n            }\n        }\n    `}\n\n    ${breakpoints.mobile`\n        .openstax-exercise-badges svg {\n            margin-right: ${breakpoints.margins.mobile};\n        }\n    `}\n\n    &&& {\n        .openstax-has-html .splash .frame-wrapper { margin-top: 0; }\n    }\n`;\n\ninterface SharedProps {\n  questionNumber: number;\n  numberOfQuestions: number;\n  leftHeaderChildren?: ReactNode;\n  rightHeaderChildren?: ReactNode;\n  headerTitleChildren?: ReactNode;\n}\n\nexport interface StepCardProps extends SharedProps {\n  unpadded: boolean;\n  className?: string;\n  children?: ReactNode;\n  stepType: Step['type'];\n  availablePoints: AvailablePoints;\n  questionId?: string;\n  multipartBadge?: ReactNode;\n  isHomework: boolean;\n}\n\nconst StepCard = ({\n  questionNumber,\n  numberOfQuestions,\n  stepType,\n  isHomework,\n  availablePoints,\n  unpadded, // currently does nothing; may need to restore if this causes tutor stepcard regression\n  className,\n  children,\n  questionId,\n  multipartBadge,\n  leftHeaderChildren,\n  rightHeaderChildren,\n  headerTitleChildren,\n  ...otherProps }: StepCardProps) => {\n  return (\n    <OuterStepCard {...otherProps}>\n      {multipartBadge}\n      <InnerStepCard className={className}>\n        {questionNumber && isHomework && stepType === 'exercise' &&\n          <StepCardHeader>\n            <div>\n              {leftHeaderChildren}\n              <div className=\"question-info\">\n                {headerTitleChildren}\n                <span>Question {questionNumber}</span>\n                <span className=\"num-questions\">&nbsp;/ {numberOfQuestions}</span>\n                <span className=\"separator\">|</span>\n                <span className=\"question-id\">ID: {questionId}</span>\n              </div>\n            </div>\n            <div>\n              <div className=\"points\">{availablePoints} Points</div>\n              {rightHeaderChildren}\n            </div>\n          </StepCardHeader>\n        }\n        <StepCardQuestion unpadded={unpadded}>{children}</StepCardQuestion>\n      </InnerStepCard>\n    </OuterStepCard>\n  )\n};\nStepCard.displayName = 'OSStepCard';\n\nexport interface TaskStepCardProps extends SharedProps {\n  className?: string;\n  children?: ReactNode;\n  step: Step;\n  questionNumber: number;\n  numberOfQuestions: number;\n}\n\nconst TaskStepCard = ({\n  step,\n  questionNumber,\n  numberOfQuestions,\n  children,\n  className,\n  ...otherProps\n}: TaskStepCardProps) =>\n(<StepCard {...otherProps}\n  unpadded={true}\n  questionNumber={questionNumber}\n  numberOfQuestions={numberOfQuestions}\n  stepType={step.type}\n  isHomework={step.task.type === 'homework'}\n  data-task-step-id={step.id}\n  availablePoints={step.available_points}\n  className={cn(`${step.type}-step`, className)}\n  questionId={step.uid}\n>\n  {children}\n</StepCard>);\n\nTaskStepCard.displayName = 'OSTaskStepCard';\n\nexport { StepCard, TaskStepCard };\n","import { AvailablePoints, ID, ExerciseQuestionData, Task } from \"../types\";\nimport Button from \"./Button\";\nimport { Content } from \"./Content\";\nimport { Question } from './Question';\nimport { StepCardFooter } from \"./StepCardFooter\";\n\nexport interface ExerciseQuestionProps {\n  task?: Task;\n  question: ExerciseQuestionData;\n  answer_id_order?: ID[];\n  questionNumber: number;\n  choicesEnabled: boolean;\n  hasMultipleAttempts: boolean;\n  onAnswerChange: () => void;\n  onAnswerSave: () => void;\n  onNextStep: () => void;\n  feedback_html: string;\n  correct_answer_feedback_html: string;\n  is_completed: boolean;\n  correct_answer_id: ID;\n  incorrectAnswerId: ID;\n  answerId?: ID;\n  attempts_remaining: number;\n  published_comments?: string;\n  detailedSolution?: string;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  canUpdateCurrentStep: boolean;\n  attempt_number: number;\n  apiIsPending: boolean;\n  displaySolution: boolean;\n  available_points: AvailablePoints;\n  exercise_uid: string;\n  free_response?: string;\n}\n\nconst AttemptsRemaining = ({ count }: { count: number }) => {\n  return (\n    <div>{count} attempt{count === 1 ? '' : 's'} left</div>\n  );\n}\n\nconst PublishedComments = ({ published_comments }: { published_comments?: string }) => {\n  if (!published_comments) { return null; }\n\n  return (\n    <div>\n      <strong>Feedback:</strong> {published_comments}\n    </div>\n  );\n}\n\nconst SaveButton = (props: {\n  disabled: boolean, isWaiting: boolean, attempt_number: number\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button\n    {...props}\n    waitingText=\"Saving…\"\n    isWaiting={props.isWaiting}\n    data-test-id=\"submit-answer-btn\"\n  >\n    {props.attempt_number == 0 ? 'Submit' : 'Re-submit'}\n  </Button>\n);\n\nconst NextButton = (props: {\n  canUpdateCurrentStep: boolean,\n  onNextStep: ExerciseQuestionProps['onNextStep']\n}) => {\n  return (\n    <Button onClick={props.onNextStep} data-test-id=\"continue-btn\">\n      {props.canUpdateCurrentStep ? 'Continue' : 'Next'}\n    </Button>\n  );\n}\n\nconst FreeResponseReview = ({ free_response }: Pick<ExerciseQuestionProps, \"free_response\">) => {\n  if (!free_response) { return null; }\n  return (\n    <>\n      <div className=\"free-response\">{free_response}</div>\n    </>\n  );\n}\n\nexport const ExerciseQuestion = (props: ExerciseQuestionProps) => {\n  const {\n    question, task, answer_id_order, onAnswerChange, feedback_html, correct_answer_feedback_html,\n    is_completed, correct_answer_id, incorrectAnswerId, choicesEnabled, questionNumber,\n    answerId, hasMultipleAttempts, attempts_remaining, published_comments, detailedSolution,\n    canAnswer, needsSaved, attempt_number, apiIsPending, onAnswerSave, onNextStep, canUpdateCurrentStep,\n    displaySolution, available_points, free_response\n  } = props;\n\n  return (\n    <div data-test-id=\"student-exercise-question\">\n      <Question\n        task={task}\n        question={question}\n        answerIdOrder={answer_id_order}\n        choicesEnabled={choicesEnabled}\n        answer_id={answerId}\n        questionNumber={questionNumber}\n        onChange={onAnswerChange}\n        feedback_html={feedback_html}\n        correct_answer_feedback_html={correct_answer_feedback_html}\n        correct_answer_id={is_completed ? correct_answer_id : null}\n        incorrectAnswerId={incorrectAnswerId}\n        className=\"step-card-body\"\n        hideAnswers={false}\n        displayFormats={false}\n        displaySolution={displaySolution}\n      >\n        <FreeResponseReview free_response={free_response} />\n      </Question>\n      <StepCardFooter className=\"step-card-footer\">\n        <div className=\"points\">\n          <strong>Points: {available_points}</strong>\n          <span className=\"attempts-left\">\n            {hasMultipleAttempts &&\n              attempts_remaining > 0 &&\n              <AttemptsRemaining count={attempts_remaining} />}\n          </span>\n          <PublishedComments published_comments={published_comments} />\n          {detailedSolution && (<div><strong>Detailed solution:</strong> <Content html={detailedSolution} /></div>)}\n        </div>\n        <div className=\"controls\">\n          {canAnswer && needsSaved ?\n            <SaveButton\n              disabled={apiIsPending || !answerId}\n              isWaiting={apiIsPending}\n              attempt_number={attempt_number}\n              onClick={onAnswerSave}\n            /> :\n            <NextButton onNextStep={onNextStep} canUpdateCurrentStep={canUpdateCurrentStep} />}\n        </div>\n      </StepCardFooter>\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport { Content } from './Content';\nimport { TaskStepCard } from './Card';\nimport { AvailablePoints, ExerciseData, ID, Step } from 'src/types';\nimport { ExerciseQuestion } from './ExerciseQuestion';\n\nconst StyledTaskStepCard = styled(TaskStepCard)`\n  font-size: 1.8rem;\n  line-height: 3rem;\n`;\n\nconst Preamble = ({ exercise }: { exercise: ExerciseData }) => {\n  return (\n    <>\n      {exercise.context &&\n        <Content className=\"step-card-body exercise-context\"\n          block html={exercise.context} />}\n\n      {exercise.stimulus_html &&\n        <Content className=\"step-card-body exercise-stimulus\"\n          block html={exercise.stimulus_html} />}\n    </>\n  );\n};\n\nexport interface ExerciseProps {\n  exercise: ExerciseData;\n  step: Step;\n  numberOfQuestions: number;\n  questionNumber: number;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  answer_id_order?: ID[];\n  hasMultipleAttempts: boolean;\n  onAnswerChange: () => void;\n  onAnswerSave: () => void;\n  onNextStep: () => void;\n  canUpdateCurrentStep: boolean;\n  attempt_number: number;\n  apiIsPending: boolean;\n  available_points: AvailablePoints;\n}\n\nexport const Exercise = ({\n  numberOfQuestions, questionNumber, step, exercise, canAnswer, needsSaved, ...props\n}: ExerciseProps) => (\n  <StyledTaskStepCard\n    step={step}\n    questionNumber={questionNumber}\n    numberOfQuestions={numberOfQuestions}\n  >\n    <Preamble exercise={exercise} />\n\n    {exercise.questions.map((q) =>\n      <ExerciseQuestion\n        {...props}\n        {...step}\n        exercise_uid={exercise.uid}\n        key={q.id}\n        question={q}\n        questionNumber={questionNumber}\n        choicesEnabled={canAnswer}\n        canAnswer={canAnswer}\n        needsSaved={needsSaved}\n        canUpdateCurrentStep={canAnswer}\n        displaySolution={true}\n        answerId={step.answer_id}\n      />\n    )}\n  </StyledTaskStepCard>\n);\n"],"names":["ALPHABET","MAX_CORRECTNESS","isAnswerCorrect","answer","correctAnswerId","id","isCorrect","correctness","isAnswerIncorrect","incorrectAnswerId","isAnswerChecked","chosenAnswer","Boolean","find","a","countWords","text","trimmedText","trim","words","match","length","Content","_ref","html","component","block","props","_objectWithoutPropertiesLoose","_excluded","undefined","React","cloneElement","_extends","_jsx","dangerouslySetInnerHTML","__html","SimpleFeedback","children","contentRenderer","className","classnames","Feedback","position","wrapperClasses","_jsxs","Answer","type","iter","disabled","onKeyPress","qid","hasCorrectAnswer","answered_count","show_all_feedback","body","feedback","selectedCount","isChecked","isIncorrect","correctIncorrectIcon","classes","cn","ariaLabel","onChangeAnswer","radioBox","checked","name","onChange","feedback_html","percent","selected_count","Math","round","content_html","_Fragment","htmlFor","onClick","role","displayName","defaultAnswerType","AnswersTable","idCounter","question","hideAnswers","choicesEnabled","correct_answer_id","answer_id","correct_answer_feedback_html","answerIdOrder","instructions","sortedAnswersByIdOrder","idOrder","answers","slice","sort","b","indexOf","questionAnswerProps","answersHtml","map","i","additionalProps","key","answerProps","Object","assign","push","index","forEach","item","spliceIndex","splice","palette","red","danger","darkRed","lightRed","green","lightGreen","darkGreen","paleYellow","teal","blue","lightBlue","neutralLightBlue","tangerine","gray","darkGray","pale","light","white","neutralLightest","neutralCool","neutralBright","neutralLighter","neutralLight","neutralMedium","neutral","neutralThin","neutralDark","neutralDarker","black","orange","colors","color","correct","background","incorrect","hover","label","colorHover","colorSelected","arrowOuterColor","popover","borderColor","card","button","backgroundHover","backgroundActive","freeResponse","layouts","verticalSpacing","horizontalSpacing","horizontalBuffer","bubbleSize","labelSpacing","arrow","width","height","borderWidth","maxWidth","BREAKPOINTS","mobile","tablet","desktop","large","breakpoints","args","css","_t","_","_t2","_t3","only","_t4","margins","transitions","mixins","_t5","answerColor","values","_t6","answerChecked","answerCorrect","answerIncorrect","answerHover","_t7","answerCorrectText","_t8","answerCorrectAnswer","_t9","resetText","_t10","stepCardPadding","_t11","_t12","_t13","StyledQuestion","styled","div","Question","exerciseUid","solution","exercise_uid","questionNumber","context","task","hidePreambles","stem_html","collaborator_solutions","formats","stimulus_html","hasIncorrectAnswer","taskIsDeleted","is_deleted","taskIsHomework","hasSolution","displaySolution","s","join","QuestionHtml","hidden","displayFormats","FormatsListing","format","StyledButton","Button","isWaiting","waitingText","otherProps","StepCardFooter","TextAreaErrorStyle","StyledFreeResponse","SyledQuestionStem","InfoRow","hasChildren","FreeResponseTextArea","textarea","isOverWordLimit","readOnly","RevertButton","FreeResponseInput","availablePoints","cancelHandler","defaultValue","infoRowChildren","isSubmitDisabled","pointsChildren","saveHandler","submitBtnLabel","textHasChanged","wordLimit","questionProps","placeholder","InnerStepCard","OuterStepCard","StepCardHeader","StepCardQuestion","StepCard","numberOfQuestions","stepType","isHomework","unpadded","questionId","multipartBadge","leftHeaderChildren","rightHeaderChildren","headerTitleChildren","TaskStepCard","_ref2","step","_excluded2","available_points","uid","AttemptsRemaining","count","PublishedComments","published_comments","SaveButton","attempt_number","NextButton","onNextStep","canUpdateCurrentStep","FreeResponseReview","free_response","ExerciseQuestion","answer_id_order","onAnswerChange","is_completed","answerId","hasMultipleAttempts","attempts_remaining","detailedSolution","canAnswer","needsSaved","apiIsPending","onAnswerSave","StyledTaskStepCard","Preamble","exercise","Exercise","questions","q","_createElement"],"mappings":"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"}