{"version":3,"file":"index.cjs","sources":["../src/utils.ts","../src/components/Content.tsx","../src/components/Feedback.tsx","../src/components/Answer.tsx","../src/constants.ts","../src/components/AnswersTable.tsx","../src/theme.ts","../src/components/Question.tsx","../src/components/Button.tsx","../src/components/StepCardFooter.tsx","../src/components/FreeResponseInput.tsx","../src/components/Card.tsx","../src/components/ExerciseQuestion.tsx","../src/components/Exercise.tsx"],"sourcesContent":["import { Answer, ChosenAnswer, ID } from '../src/types';\n\nexport const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\nconst MAX_CORRECTNESS = '1.0';\n\nexport const isAnswerCorrect = function(answer: Answer, correctAnswerId?: ID | null) {\n  // if answer does not have an id, check the isCorrect property.\n  if (!(answer.id || correctAnswerId)) {\n    return answer.isCorrect;\n  }\n  let isCorrect = answer.id === correctAnswerId;\n  if (answer.correctness != null) { isCorrect = (answer.correctness === MAX_CORRECTNESS); }\n\n  return isCorrect;\n};\n\nexport const isAnswerIncorrect = function(answer: Answer, incorrectAnswerId?: ID) {\n  // Allow multiple attempts to show incorrectness without the correct_answer_id\n  return answer.id === incorrectAnswerId;\n};\n\nexport const isAnswerChecked = (answer: Answer, chosenAnswer?: ChosenAnswer) =>\n  Boolean((chosenAnswer || []).find( a => a == answer.id));\n\nexport function countWords(text: string) {\n  const trimmedText = text.trim();\n  //https://css-tricks.com/build-word-counter-app/\n  const words = trimmedText.match(/\\b[-?(\\w+)?]+\\b/gi);\n  if(!words) return 0;\n  return words.length;\n}\n","import React from \"react\";\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\ntype ComponentType = keyof JSX.IntrinsicElements | React.JSXElementConstructor<any>;\n\nexport interface ContentProps<T extends ComponentType | undefined> {\n  className?: string;\n  component?: T extends undefined ? undefined :\n    T extends ComponentType ? React.ReactComponentElement<T>:\n    never;\n  html: string;\n  block?: boolean;\n}\n\nexport const Content = (<T extends ComponentType | undefined>(\n  {html, component, block = false, ...props}: ContentProps<T>\n) => {\n  if (component !== undefined) {\n    return React.cloneElement(component, {html, ...props});\n  }\n  if (block) {\n    return <div dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  } else {\n    return <span dangerouslySetInnerHTML={{ __html: html }} {...props} />;\n  }\n});\n","import classnames from 'classnames';\nimport { Content } from './Content';\n\ninterface FeedbackProps {\n  position?: 'top' | 'bottom' | 'left' | 'right';\n  children: string;\n  className?: string;\n  contentRenderer?: JSX.Element;\n}\n\nconst SimpleFeedback = (props: Pick<FeedbackProps, 'children' | 'className' | 'contentRenderer'>) => (\n  <aside>\n    <Content\n      component={props.contentRenderer}\n      className={classnames('question-feedback-content', 'has-html', props.className)}\n      html={props.children}\n      block={true} />\n  </aside>\n);\n\nconst Feedback = (props: FeedbackProps) => {\n  const position = props.position || 'bottom';\n  const wrapperClasses = classnames('question-feedback', position);\n\n  return (\n    <aside className={wrapperClasses}>\n      <div className=\"arrow\" aria-label=\"Answer Feedback\" />\n      <SimpleFeedback {...props}>\n        {props.children}\n      </SimpleFeedback>\n    </aside>\n  );\n};\n\nexport { Feedback, SimpleFeedback };\n","import cn from 'classnames';\nimport { ReactNode } from 'react';\nimport { ALPHABET, isAnswerChecked, isAnswerCorrect, isAnswerIncorrect } from '../utils';\nimport { Answer as AnswerType, ChosenAnswer, ID } from '../types';\nimport { Content } from './Content';\nimport { SimpleFeedback } from './Feedback';\n\nexport interface AnswerProps {\n  answer: AnswerType;\n  iter: number;\n  qid: ID;\n  type: 'teacher-review' | 'teacher-preview' | 'student' | 'student-mpp';\n  hasCorrectAnswer?: boolean;\n  onChangeAnswer: () => void;\n  disabled: boolean;\n  chosenAnswer: ChosenAnswer;\n  correctAnswerId?: ID | null;\n  incorrectAnswerId?: ID;\n  onKeyPress?: () => void;\n  answered_count?: number;\n  correctIncorrectIcon?: ReactNode,\n  radioBox?: ReactNode;\n  contentRenderer?: JSX.Element;\n  show_all_feedback?: boolean;\n}\n\nexport const Answer = (props: AnswerProps) => {\n  const {\n    type,\n    iter,\n    answer,\n    disabled,\n    onKeyPress,\n    qid,\n    chosenAnswer,\n    correctAnswerId,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    answered_count,\n    contentRenderer,\n    show_all_feedback\n  } = props;\n\n  let body, feedback, selectedCount;\n\n  const isChecked = isAnswerChecked(answer, chosenAnswer);\n  const isCorrect = isAnswerCorrect(answer, correctAnswerId);\n  const isIncorrect = isAnswerIncorrect(answer, incorrectAnswerId);\n\n  const correctIncorrectIcon = (\n    <div className=\"correct-incorrect\">\n      {isCorrect && props.correctIncorrectIcon}\n    </div>\n  );\n\n  const classes = cn('answers-answer', {\n    'disabled': disabled,\n    'answer-checked': isChecked,\n    'answer-correct': isCorrect && type !== 'student-mpp',\n    'answer-incorrect': incorrectAnswerId && isAnswerIncorrect(answer, incorrectAnswerId),\n  });\n\n  let ariaLabel = `${isChecked ? 'Selected ' : ''}Choice ${ALPHABET[iter]}`;\n  // somewhat misleading - this means that there is a correct answer,\n  // not necessarily that this answer is correct\n  if (hasCorrectAnswer) {\n    ariaLabel += `(${isCorrect ? 'Correct' : 'Incorrect'} Answer)`;\n  }\n  ariaLabel += ':';\n\n  let onChangeAnswer, radioBox;\n\n  if (!hasCorrectAnswer\n    && (type !== 'teacher-review')\n    && (type !== 'teacher-preview')\n    && (type !== 'student-mpp')) {\n    ({ onChangeAnswer } = props);\n  }\n\n  if (onChangeAnswer) {\n    radioBox = (\n      <input\n        type=\"radio\"\n        className=\"answer-input-box\"\n        checked={isChecked}\n        id={`${qid}-option-${iter}`}\n        name={`${qid}-options`}\n        onChange={onChangeAnswer}\n        disabled={disabled}\n      />\n    );\n  }\n\n  if (show_all_feedback && answer.feedback_html) {\n    feedback = (\n      <SimpleFeedback key=\"question-mc-feedback\" contentRenderer={contentRenderer}>\n        {answer.feedback_html}\n      </SimpleFeedback>\n    );\n  }\n\n  if (type === 'teacher-review') {\n    let percent = 0;\n    if (answer.selected_count && answered_count) {\n      percent = Math.round((answer.selected_count / answered_count) * 100);\n    }\n    selectedCount = (\n      <span\n        className=\"selected-count\"\n        data-percent={`${percent}`}\n      >\n        {answer.selected_count}\n      </span>\n    );\n\n    body = (\n      <div className=\"review-wrapper\">\n        <div className={cn('review-count', { 'green': isCorrect, 'red': !isCorrect })}>\n          {selectedCount}\n          <span className={cn('letter', { 'green': isCorrect, 'red': !isCorrect })}>\n            {ALPHABET[iter]}\n          </span>\n        </div>\n\n        <div className=\"answer-answer\">\n          <Content className=\"answer-content\" component={contentRenderer} html={answer.content_html} />\n          {feedback}\n        </div>\n      </div>\n    );\n  } else {\n    body = (\n      <>\n        {type === 'teacher-preview' && correctIncorrectIcon}\n        {selectedCount}\n        {radioBox}\n        <label\n          onKeyPress={onKeyPress}\n          htmlFor={`${qid}-option-${iter}`}\n          className=\"answer-label\">\n          <span className=\"answer-letter-wrapper\">\n            <button\n              onClick={onChangeAnswer}\n              aria-label={ariaLabel}\n              className=\"answer-letter\"\n              disabled={disabled || isIncorrect}\n              data-test-id={`answer-choice-${ALPHABET[iter]}`}\n            >\n              {ALPHABET[iter]}\n            </button>\n          </span>\n          <div className=\"answer-answer\">\n            <Content className=\"answer-content\" component={contentRenderer} html={answer.content_html} />\n            {feedback}\n          </div>\n        </label>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"openstax-answer\">\n      <section role=\"region\" className={classes}>\n        {body}\n      </section>\n    </div>\n  );\n}\nAnswer.displayName = 'OSAnswer';\n","import { AnswerDisplayType } from './types';\n\nexport const defaultAnswerType: AnswerDisplayType = 'student';\n","import { defaultAnswerType } from \"../constants\";\nimport { Answer as AnswerType, AnswerDisplayType, ID, ExerciseQuestionData } from \"src/types\";\nimport { Answer } from \"./Answer\";\nimport { Feedback } from \"./Feedback\";\n\nexport interface AnswersTableProps {\n  question: ExerciseQuestionData;\n  type?: AnswerDisplayType;\n  answer_id?: ID;\n  correct_answer_id?: ID | null;\n  incorrectAnswerId?: ID;\n  answerIdOrder?: ID[],\n  feedback_html: string;\n  correct_answer_feedback_html?: string;\n  answered_count?: number;\n  show_all_feedback?: boolean;\n  onChangeAnswer: () => void;\n  hideAnswers: boolean;\n  hasCorrectAnswer?: boolean;\n  onChangeAttempt?: () => void;\n  choicesEnabled?: boolean;\n  onKeyPress?: () => void;\n  contentRenderer?: JSX.Element;\n  instructions?: JSX.Element;\n}\n\nexport const AnswersTable = (props: AnswersTableProps) => {\n  let idCounter = 0;\n\n  const {\n    question, hideAnswers, type = defaultAnswerType, answered_count, choicesEnabled, correct_answer_id,\n    incorrectAnswerId, answer_id, feedback_html, correct_answer_feedback_html,\n    show_all_feedback = false, hasCorrectAnswer, onChangeAnswer, onKeyPress, answerIdOrder, instructions\n  } = props;\n  if (hideAnswers) { return null; }\n\n  const { id } = question;\n\n  const feedback: { index: number, html: string }[] = [];\n\n  const chosenAnswer = [answer_id];\n\n  const sortedAnswersByIdOrder = (idOrder: ID[]) => {\n    const { answers } = question;\n    return answers.slice().sort((a, b) => idOrder.indexOf(a.id) - idOrder.indexOf(b.id));\n  }\n\n  const questionAnswerProps = {\n    qid: id || `auto-${idCounter++}`,\n    correctAnswerId: correct_answer_id,\n    incorrectAnswerId,\n    hasCorrectAnswer,\n    chosenAnswer,\n    onChangeAnswer: onChangeAnswer,\n    type,\n    answered_count,\n    disabled: !choicesEnabled,\n    show_all_feedback,\n    onKeyPress\n  };\n\n  const answers = answerIdOrder ? sortedAnswersByIdOrder(answerIdOrder) : question.answers;\n\n  const answersHtml = answers.map((answer, i) => {\n    const additionalProps: { answer: AnswerType, iter: number, key: string }\n      = { answer, iter: i, key: `${questionAnswerProps.qid}-option-${i}` };\n    const answerProps = Object.assign({}, additionalProps, questionAnswerProps);\n\n    if (answer.id === incorrectAnswerId && feedback_html) {\n      feedback.push({ index: i, html: feedback_html })\n    } else if (answer.id === correct_answer_id && correct_answer_feedback_html) {\n      feedback.push({ index: i, html: correct_answer_feedback_html })\n    }\n\n    return (\n      <Answer {...answerProps} />\n    );\n  });\n\n  feedback.forEach((item, i) => {\n    const spliceIndex = item.index + i + 1;\n    answersHtml.splice(spliceIndex, 0, (\n      <Feedback key={spliceIndex} contentRenderer={props.contentRenderer}>\n        {item.html}\n      </Feedback>\n    ));\n  });\n\n  return (\n    <div className=\"answers-table\">\n      {instructions}\n      {answersHtml}\n    </div>\n  );\n}\n","import { css } from 'styled-components';\n\nconst palette = {\n  red: \"#ca2026\",\n  danger: \"#c2002f\",\n  darkRed: \"#c22032\",\n  lightRed: \"#e298a0\",\n  green: \"#77af42\",\n  lightGreen: \"#8bc753\",\n  darkGreen: \"#63a524\",\n  paleYellow: \"#ffffbb\",\n  teal: \"#0dc0de\",\n  blue: \"#007da4\",\n  lightBlue: \"#34bdd8\",\n  neutralLightBlue: \"#0dc0dc\",\n  tangerine: \"#ffbd3e\",\n  gray: \"#5e5e5e\",\n  darkGray: \"#757575\",\n  pale: \"#d5d5d5\",\n  light: \"#e4e4e4\",\n  white: \"#ffffff\",\n  neutralLightest: \"#f9f9f9\", // nearly white\n  neutralCool: \"#f6f7f8\", // cool bright gray\n  neutralBright: \"#f5f5f5\", // bright gray\n  neutralLighter: \"#f1f1f1\", // light gray\n  neutralLight: \"#e5e5e5\", // light gray\n  neutralMedium: \"#a0a0a0\", // light gray\n  neutral: \"#818181\", // gray\n  neutralThin: \"#6f6f6f\", // medium gray\n  neutralDark: \"#5f6163\", // dark gray\n  neutralDarker: \"#424242\", // very dark gray\n  black: \"#000000\",\n  orange: \"#D4450C\"\n};\n\nexport const colors = {\n  palette: palette,\n  answer: {\n    color: palette.lightBlue,\n    correct: {\n      color: palette.green,\n      background: \"#77af42\",\n    },\n    incorrect: {\n      color: palette.red,\n      background: palette.red,\n    },\n    checked: palette.lightBlue,\n    hover: palette.neutralDark,\n    label: {\n      color: palette.neutralMedium,\n      colorHover: palette.neutralDark,\n      colorSelected: palette.lightBlue,\n    },\n    feedback: {\n      arrowOuterColor: \"rgba(0, 0, 0, 0.25)\",\n      popover: {\n        borderColor: \"rgba(0, 0, 0, 0.2)\",\n      },\n    },\n  },\n  card: {\n    background: \"#daf3f8\",\n  },\n  button: {\n    background: palette.orange,\n    backgroundHover: \"#E74B0D\",\n    backgroundActive: \"#C5400B\"\n  },\n  freeResponse: {\n    color: palette.neutralDark,\n    background: palette.neutralLighter,\n  },\n};\n\nexport const layouts = {\n  answer: {\n    verticalSpacing: \"1.5rem\",\n    horizontalSpacing: \"1rem\",\n    horizontalBuffer: \"2.5rem\",\n    bubbleSize: \"4rem\",\n    labelSpacing: \"6.5rem\",\n    feedback: {\n      arrow: {\n        width: \"20px\",\n        height: \"15px\",\n      },\n      popover: {\n        horizontalSpacing: \"2rem\",\n        verticalSpacing: \"2rem\",\n        horizontalBuffer: \"4rem\",\n        borderWidth: \"1px\",\n        maxWidth: \"370px\",\n      }\n    },\n  },\n};\n\nexport const BREAKPOINTS = {\n  mobile: 600,\n  tablet: 999,\n  desktop: 1000,\n  large: 1600,\n};\n\nexport const breakpoints = {\n  mobile(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n  },\n  tablet(...args: Parameters<typeof css>) {\n    return css`@media(max-width: ${BREAKPOINTS.tablet}px) { ${css(...args)} }`;\n  },\n  desktop(...args: Parameters<typeof css>) {\n    return css`@media(min-width: ${BREAKPOINTS.desktop}px) { ${css(...args)} }`;\n  },\n  only: {\n    mobile(...args: Parameters<typeof css>) {\n      return css`@media(max-width: ${BREAKPOINTS.mobile}px) { ${css(...args)} }`;\n    },\n  },\n  margins: {\n    mobile: '8px',\n    tablet: '24px',\n  },\n};\n\nexport const transitions = {\n  answer: \"0.1s ease-in-out\",\n}\n\nexport const mixins = {\n  answer: () => css`\n    .answer-label {\n      display: flex;\n    }\n    color: ${colors.answer.label.color};\n    .answer-letter {\n      width: ${layouts.answer.bubbleSize};\n      height: ${layouts.answer.bubbleSize};\n      min-width: ${layouts.answer.bubbleSize};\n      min-height: ${layouts.answer.bubbleSize};\n      border-radius: calc(${layouts.answer.bubbleSize} / 2);\n      border-width: 2px;\n      border-style: solid;\n      border-color: #c6c6c6;\n      color: ${colors.answer.label.colorHover};\n      transition: color ${transitions.answer}, border-color ${transitions.answer}, background-color ${transitions.answer};\n      background-color: ${colors.palette.white};\n    }\n  `,\n  answerColor: (values: { color: string, background: string }) => css`\n    color: ${values.color};\n    .answer-letter {\n       border-color: ${values.color};\n       background-color: ${values.background};\n       color: ${colors.palette.white};\n    }\n  `,\n  answerChecked: () => mixins.answerColor({ color: colors.answer.checked, background: colors.answer.checked }),\n  answerCorrect: () => mixins.answerColor(colors.answer.correct),\n  answerIncorrect: () => mixins.answerColor(colors.answer.incorrect),\n  answerHover: () => css`\n    color: ${colors.answer.label.colorHover};\n    .answer-letter {\n      border-color: ${colors.answer.label.colorSelected};\n    }\n  `,\n  answerCorrectText: () => css`\n    content: 'correct answer';\n    color: ${colors.answer.label.color};\n    margin-left: calc(-1.25 * ${layouts.answer.bubbleSize});\n    width: calc(1.25 * ${layouts.answer.bubbleSize});\n    text-align: center;\n    font-size: 1.2rem;\n    // em used here for line-height for compatibility with IE\n    // http://caniuse.com/#feat=rem -- rem ignored in pseudo elements\n    line-height: 1em;\n    margin-top: 0.8rem;\n  `,\n  answerCorrectAnswer: () => css`\n    color: ${colors.answer.correct.color};\n    .answer-letter {\n      border-color: ${colors.answer.correct.color};\n      color: ${colors.answer.correct.color};\n    }\n    &::before {\n     ${mixins.answerCorrectText()}\n      @media screen and (max-width: ${BREAKPOINTS.tablet}px) {\n        display: none;\n      }\n    }\n    @media screen and (max-width:  ${BREAKPOINTS.tablet}px) {\n      .answer-letter-wrapper {\n        display: flex;\n        flex-direction: column;\n        &::after {\n          ${mixins.answerCorrectText()}\n          width: $openstax-answer-bubble-size !important;\n          margin-left: 0;\n        }\n      }\n    }\n  `,\n  resetText: () => css`\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.6;\n    text-align: left;\n    text-align: start;\n    text-decoration: none;\n    text-shadow: none;\n    text-transform: none;\n    letter-spacing: normal;\n    word-break: normal;\n    word-spacing: normal;\n    white-space: normal;\n    line-break: auto;\n  `,\n  stepCardPadding: () => css`\n    padding: 48px 140px;\n\n    ${breakpoints.tablet`\n      padding: ${breakpoints.margins.tablet} ${breakpoints.margins.tablet};\n    `}\n\n    ${breakpoints.mobile`\n      padding: calc(${breakpoints.margins.mobile} * 2) ${breakpoints.margins.mobile};\n    `}\n  `,\n};\n\nconst theme = {\n  colors: colors,\n  layouts: layouts,\n  transitions: transitions,\n  breakpoints: breakpoints,\n};\n\nexport default theme;\n","import styled from 'styled-components';\nimport { mixins, colors, layouts, transitions } from '../theme';\nimport { AnswersTable } from './AnswersTable';\nimport classnames from 'classnames';\nimport { ID, ExerciseQuestionData, Task } from 'src/types';\nimport { ReactNode } from 'react';\nimport { Content } from './Content';\n\nconst StyledQuestion = styled.div`\n&.step-card-body {\n  ${mixins.stepCardPadding()};\n}\n\n&.openstax-question {\n  font-size: 2rem;\n\n  .detailed-solution {\n    margin-bottom: 1rem;\n    .header {\n      display: inline;\n      margin-right: 0.5rem;\n      color: #5e6062;\n      font-weight: bold;\n      flex-basis: 0;\n    }\n    .solution {\n      display: inline;\n      color: #6f6f6f;\n    }\n  }\n\n  img {\n    display: block;\n    margin: auto;\n    max-width: 100%;\n  }\n\n  .question-stem {\n    margin-bottom: 0;\n  }\n\n  .answers-table {\n    margin-bottom: 20px;\n    font-size: 17px;\n    line-height: 25px;\n  }\n\n  .instructions {\n    font-size: 1.4rem;\n    font-style: italic;\n    margin-top: 10px;\n    color: ${colors.palette.neutral};\n    margin: 0;\n\n    i {\n      margin-left: 5px;\n    }\n\n    .text-info {\n      color: ${colors.palette.neutralLightBlue};\n      padding-left: 5px;\n      cursor: pointer;\n      font-style: normal;\n    }\n  }\n\n  .multiple-choice-prompt {\n    font-weight: 600;\n  }\n\n  .free-response {\n    padding: ${layouts.answer.horizontalSpacing} ${layouts.answer.horizontalBuffer};\n    margin: ${layouts.answer.verticalSpacing} 0 ${layouts.answer.horizontalSpacing} ${layouts.answer.verticalSpacing};\n    border-left: ${layouts.answer.horizontalSpacing} solid ${colors.palette.neutralLighter};\n    font-style: italic;\n  }\n\n  &:not(.openstax-question-preview) {\n    .answers-answer {\n      width: initial;\n      &:not(.disabled){\n        .answer-label:focus{\n          background-color: ${colors.palette.neutralLightest};\n        }\n      }\n      ${mixins.answer()};\n    }\n\n    .answer-answer {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      margin-left: ${layouts.answer.horizontalSpacing};\n      * {\n        margin: 0;\n      }\n    }\n\n    .answer-letter {\n      text-align: center;\n      padding: 0;\n    }\n\n\n    .answer-label {\n      font-weight: normal;\n      width: 100%;\n      padding: ${layouts.answer.verticalSpacing} 0 0 0;\n      margin: 0;\n\n      transition: color ${transitions.answer};\n    }\n\n    // a selectable answer\n    .answer-input-box:not([disabled]) ~ .answer-label {\n      cursor: pointer;\n\n      &:hover {\n        ${mixins.answerHover()}\n      }\n    }\n\n    // a selected answer\n    &:not(.has-correct-answer) {\n      .answer-input-box {\n        display: none;\n\n        &:checked {\n          + .answer-label,\n          + .answer-label:hover {\n            ${mixins.answerChecked()};\n          }\n        }\n      }\n\n      .answer-checked{\n        .answer-label {\n          ${mixins.answerChecked()};\n        }\n      }\n    }\n\n    // answer that has been checked\n    &.has-correct-answer {\n      .answer-checked {\n        &:not(.answer-correct) {\n          .answer-label {\n            ${mixins.answerIncorrect()};\n          }\n        }\n\n        &.answer-correct {\n          .answer-label {\n            ${mixins.answerCorrect()};\n          }\n        }\n      }\n\n      .answer-correct:not(.answer-checked) {\n        .answer-label {\n          ${mixins.answerCorrectAnswer()}\n        }\n      }\n    }\n\n    &.has-incorrect-answer {\n      .answer-incorrect, .answer-checked.answer-incorrect {\n        .answer-label {\n          ${mixins.answerIncorrect()}\n        }\n      }\n    }\n\n    .question-feedback {\n      ${mixins.resetText()}\n\n      z-index: 1;\n      position: relative;\n      border: ${layouts.answer.feedback.popover.borderWidth} solid ${colors.answer.feedback.popover.borderColor};\n      background-color: ${colors.palette.white};\n      background-clip: padding-box;\n      border-radius: 0.3rem;\n      max-width: ${layouts.answer.feedback.popover.maxWidth};\n      margin: calc(${layouts.answer.feedback.arrow.height} - 5px) 0 ${layouts.answer.horizontalSpacing} calc(-1 * (2 * ${layouts.answer.horizontalSpacing}));\n      box-shadow: 10px 0px 10px rgba(0, 0, 0, .25);\n      color: ${colors.palette.neutral};\n      font-size: 1.4rem;\n      font-style: italic;\n\n      .arrow {\n        position: absolute;\n        display: block;\n        width: ${layouts.answer.feedback.arrow.width};\n        height: ${layouts.answer.feedback.arrow.height};\n        margin-left: 30px;\n        top: calc((${layouts.answer.feedback.arrow.height} + ${layouts.answer.feedback.popover.borderWidth}) * -1);\n\n        &::before,\n        &::after {\n          position: absolute;\n          display: block;\n          content: \"\";\n          border-color: transparent;\n          border-style: solid;\n          border-width: 0 calc(${layouts.answer.feedback.arrow.width} / 2) ${layouts.answer.feedback.arrow.height} calc(${layouts.answer.feedback.arrow.width} / 2);\n        }\n        &::before {\n          top: 0;\n          border-bottom-color: ${colors.answer.feedback.popover.borderColor};\n        }\n        &::after {\n          top: ${layouts.answer.feedback.popover.borderWidth};\n          border-bottom-color: ${colors.palette.white};\n        }\n      }\n\n      .question-feedback-content {\n        padding: ${layouts.answer.feedback.popover.verticalSpacing} ${layouts.answer.feedback.popover.horizontalSpacing};\n      }\n    }\n  }\n\n  .openstax-answer {\n    border-top: 1px solid #d5d5d5;\n    margin: 10px 0;\n    padding: 10px 0;\n  }\n}\n`;\n\nexport interface QuestionProps {\n  question: ExerciseQuestionData,\n  answer_id?: ID;\n  task?: Task | null,\n  correct_answer_id: ID | null;\n  incorrectAnswerId: ID;\n  hideAnswers: boolean;\n  hidePreambles?: boolean,\n  exercise_uid?: string;\n  displayFormats: boolean,\n  className: string;\n  questionNumber: number;\n  displaySolution: boolean;\n  context?: string;\n  correct_answer_feedback_html?: string;\n  contentRenderer?: JSX.Element;\n  feedback_html: string;\n  onChange: () => void;\n  show_all_feedback?: boolean;\n  children?: ReactNode;\n  answerIdOrder?: ID[];\n  choicesEnabled?: boolean;\n}\n\nexport const Question = (props: QuestionProps) => {\n  let exerciseUid, solution;\n\n  const {\n    question, correct_answer_id, incorrectAnswerId, exercise_uid, className, questionNumber, context, task, hidePreambles\n  } = props;\n\n  const { stem_html, collaborator_solutions = [], formats, stimulus_html } = question;\n\n  const hasCorrectAnswer = !!correct_answer_id;\n  const hasIncorrectAnswer = !!incorrectAnswerId;\n\n  const taskIsDeleted = (task != null ? task.is_deleted : undefined)\n  const taskIsHomework = ((task != null ? task.type : undefined) === 'homework');\n\n  const classes = classnames('openstax-question', className, {\n    'has-correct-answer': hasCorrectAnswer && !(taskIsDeleted && taskIsHomework),\n    'has-incorrect-answer': hasIncorrectAnswer,\n  });\n\n  const hasSolution = () => {\n    const { displaySolution } = props;\n    const { collaborator_solutions = [] } = question;\n\n    return (\n      displaySolution &&\n      collaborator_solutions &&\n      collaborator_solutions.find(s => s['content_html'] !== undefined)\n    );\n  };\n\n  if (exercise_uid != null) {\n    exerciseUid = (\n      <div className=\"exercise-uid\">\n        {exercise_uid}\n      </div>\n    );\n  }\n\n  if (hasSolution()) {\n    solution =\n      <div className=\"detailed-solution\">\n        <div className=\"header\">\n          Detailed solution:\n        </div>\n        <Content\n          className=\"solution\"\n          block={true}\n          html={collaborator_solutions.map(s => s['content_html']).join('')} />\n      </div>;\n  }\n\n  return (\n    <StyledQuestion className={classes} data-question-number={questionNumber} data-test-id=\"question\">\n      <QuestionHtml type=\"context\" html={context} hidden={hidePreambles} />\n      <QuestionHtml type=\"stimulus\" html={stimulus_html} hidden={hidePreambles} />\n      <QuestionHtml type=\"stem\" html={stem_html} hidden={hidePreambles} questionNumber={questionNumber} />\n      {props.children}\n\n      <AnswersTable\n        {...props}\n        onChangeAnswer={props.onChange}\n        hasCorrectAnswer={hasCorrectAnswer} />\n\n      {solution}\n      {props.displayFormats ? <FormatsListing formats={formats} /> : undefined}\n      {exerciseUid}\n    </StyledQuestion>\n  );\n}\n\ninterface QuestionHtmlProps {\n  html?: string;\n  type: string;\n  hidden: QuestionProps['hidePreambles'];\n  questionNumber?: QuestionProps['questionNumber'];\n}\n\nexport const QuestionHtml = (props: QuestionHtmlProps) => {\n  const { html = '', type, hidden, questionNumber } = props;\n  if (hidden === true || !(html.length > 0)) { return null; }\n\n  return (\n    <Content\n      html={html}\n      data-question-number={questionNumber}\n      className={`question-${type}`}\n      block={true}\n    />\n  );\n};\n\nconst FormatsListing = ({ formats = [] }: { formats: ExerciseQuestionData['formats'] }) => {\n  return (\n    <div className=\"formats-listing\">\n      <div className=\"header\">Formats:</div>\n      {formats.map((format, i) => <span key={i}>{format}</span>)}\n    </div>\n  );\n};\n","import { colors } from \"../theme\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  background-color: ${colors.button.background};\n  color: ${colors.palette.white};\n  font-size: 1.6rem;\n  font-weight: 700;\n  line-height: 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 4rem;\n  padding: 0 3rem;\n  border: 0;\n  border-radius: 5px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:not([disabled]) {\n    cursor: pointer;\n    &:hover {\n      background: ${colors.button.backgroundHover}\n    }\n    &:active {\n      background: ${colors.button.backgroundActive}\n    }\n  }\n  &:disabled {\n    opacity: 0.4;\n  }\n`;\n\ninterface ButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting?: never;\n  waitingText?: never;\n}\ninterface WaitingButtonProps extends React.ComponentPropsWithoutRef<'button'> {\n  isWaiting: boolean;\n  waitingText: string;\n}\n\nconst Button = (props: ButtonProps | WaitingButtonProps) => {\n  const { disabled, isWaiting, waitingText, children, ...otherProps } = props;\n\n  return (\n    <StyledButton {...otherProps} disabled={isWaiting || disabled}>{(isWaiting && waitingText) || children}</StyledButton>\n  );\n}\n\nexport default Button;\n","import { colors, breakpoints, mixins } from \"../theme\";\nimport styled from \"styled-components\";\n\nexport const StepCardFooter = styled.div`\n    ${mixins.stepCardPadding()}\n    border-top: 1px solid ${colors.palette.pale};\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    font-size: 1.4rem;\n    line-height: 2rem;\n\n    > * {\n        flex-grow: 1;\n    }\n\n    button {\n        width: 160px;\n        height: 48px;\n    }\n\n    .points {\n        margin-bottom: 1.6rem; // Replace with https://caniuse.com/?search=gap soon\n\n        .attempts-left {\n            color: #F36B32;\n        }\n    }\n\n    .controls {\n        display: flex;\n        flex-flow: column wrap-reverse;\n        margin-left: 1.6rem; // Replace with https://caniuse.com/?search=gap soon\n\n        button + button {\n            margin: 0.8rem 0 0 0;\n        }\n    }\n\n    ${breakpoints.desktop`\n        padding: 32px 140px;\n        flex-wrap: nowrap;\n\n        .points {\n            max-width: 400px;\n        }\n\n        .controls {\n            flex-flow: row;\n            justify-content: flex-end;\n\n            button + button {\n                margin: 0 0 0 0.8rem;\n            }\n        }\n    `}\n`;\n","import { MouseEventHandler, ReactNode } from 'react';\nimport { countWords } from '../utils';\nimport styled, { css } from 'styled-components';\nimport { colors, mixins } from '../theme';\nimport { AvailablePoints, ExerciseQuestionData } from 'src/types';\nimport { QuestionHtml } from './Question';\nimport Button from './Button';\nimport { StepCardFooter } from './StepCardFooter';\n\nexport interface FreeResponseProps {\n  readOnly: boolean;\n  wordLimit: number;\n  infoRowChildren?: ReactNode;\n  pointsChildren?: ReactNode;\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  cancelHandler: MouseEventHandler<HTMLButtonElement>;\n  saveHandler: MouseEventHandler<HTMLButtonElement>;\n  defaultValue: string;\n  isSubmitDisabled: boolean;\n  questionNumber: number,\n  question: ExerciseQuestionData,\n  availablePoints: AvailablePoints,\n  textHasChanged: boolean;\n  submitBtnLabel: string;\n}\n\nconst TextAreaErrorStyle = css`\n  background-color: #f5e9ea;\n`;\n\nconst StyledFreeResponse = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n  }\n`;\n\nconst SyledQuestionStem = styled.div`\n  font-size: 2rem;\n  line-height: 1.68em;\n  position: relative;\n`;\n\nconst InfoRow = styled.div<{ hasChildren: boolean }>`\n  margin: 8px 0;\n  display: flex;\n  justify-content: ${props => props.hasChildren ? 'space-between' : 'flex-end'};\n  line-height: 1.6rem;\n\n  .word-limit-error-info {\n    color: ${colors.palette.danger};\n  }\n\n  div > span {\n    font-size: 12px;\n    line-height: 16px;\n\n    + span {\n      margin-left: 1rem;\n    }\n  }\n\n  .last-submitted + * {\n    margin-top: 0.8rem;\n  }\n\n  color: ${colors.palette.neutralThin};\n`;\n\nexport const FreeResponseTextArea = styled.textarea<{ isOverWordLimit: boolean } & FreeResponseProps>`\n  display: block;\n  font-family: inherit;\n  font-size: 1.8rem;\n  line-height: 3rem;\n  width: 100%;\n  min-height: 10.5em;\n  line-height: 1.5em;\n  margin: 2.5rem 0 0 0;\n  padding: 0.5em;\n  border: 1px solid ${colors.palette.neutral};\n  color: ${colors.palette.neutralDark};\n  ${props => props.isOverWordLimit && TextAreaErrorStyle};\n  ${props => props.isOverWordLimit && css`\n    border: 2px solid ${colors.palette.danger};\n  `}\n  background-color: ${props => props.readOnly && colors.palette.neutralCool};\n`;\nFreeResponseTextArea.displayName = 'OSFreeResponseTextArea';\n\nconst RevertButton = (props: {\n  disabled: boolean\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button {...props}>\n    Cancel\n  </Button>\n);\n\n\nexport const FreeResponseInput = (props: FreeResponseProps) => {\n  const {\n    availablePoints,\n    cancelHandler,\n    defaultValue,\n    infoRowChildren,\n    isSubmitDisabled,\n    pointsChildren,\n    question,\n    questionNumber,\n    saveHandler,\n    submitBtnLabel,\n    textHasChanged,\n    wordLimit,\n  } = props;\n\n  const isOverWordLimit = countWords(defaultValue) > wordLimit;\n\n  const questionProps = {};\n  if (questionNumber) { questionProps['data-question-number'] = questionNumber; }\n\n  return (\n    <StyledFreeResponse data-test-id=\"student-free-response\">\n      <div className=\"step-card-body\">\n        <SyledQuestionStem {...questionProps}>\n          {question.stem_html &&\n            <QuestionHtml type=\"stem\" html={question.stem_html} hidden={false} />}\n        </SyledQuestionStem>\n        <FreeResponseTextArea\n          {...props}\n          isOverWordLimit={isOverWordLimit}\n          data-test-id=\"free-response-box\"\n          placeholder=\"Enter your response...\"\n          aria-label=\"question response text box\"\n        />\n        <InfoRow hasChildren={!!infoRowChildren}>\n          {infoRowChildren}\n          <div>\n            <span>{countWords(defaultValue)} words</span>\n            {isOverWordLimit && <span className=\"word-limit-error-info\">Maximum {wordLimit} words</span>}\n          </div>\n        </InfoRow>\n      </div>\n      <StepCardFooter>\n        <div className=\"points\">\n          <strong>Points: {availablePoints}</strong>\n          {pointsChildren}\n        </div>\n        <div className=\"controls\">\n          <RevertButton disabled={!textHasChanged} onClick={cancelHandler} />\n          <Button\n            data-test-id=\"submit-answer-btn\"\n            disabled={isSubmitDisabled || isOverWordLimit}\n            onClick={saveHandler}\n          >\n            {submitBtnLabel}\n          </Button>\n        </div>\n      </StepCardFooter>\n    </StyledFreeResponse>\n  );\n}\n\nFreeResponseInput.displayName = 'OSFreeResponse';\n","import { ReactNode } from \"react\";\nimport { breakpoints, colors, mixins } from \"../theme\";\nimport { AvailablePoints, Step } from \"../types\";\nimport styled from \"styled-components\";\nimport cn from \"classnames\";\n\nexport const InnerStepCard = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  min-height: 400px;\n  border-radius: 0.25rem;\n  margin: 0 auto 5rem auto;\n  border: 1px solid ${colors.palette.light};\n  border-radius: 0.25rem;\n  background-color: white;\n\n  ${breakpoints.desktop`\n    max-width: 1000px;\n    min-width: 750px;\n  `}\n`;\n\nexport const OuterStepCard = styled.div`\n  padding: 2rem;\n\n  ${breakpoints.tablet`\n    padding: 0;\n  `}\n`;\n\nconst StepCardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 24px;\n  background: ${colors.card.background};\n  font-size: 1.8rem;\n  line-height: 3rem;\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n\n  div.question-info {\n    font-weight: bold;\n\n    .ox-icon-lock {\n        margin-right: 1rem;\n    }\n  }\n\n  .num-questions, .points, .separator {\n      display: none;\n  }\n\n  .exercise-id, .separator {\n      font-weight: normal;\n  }\n\n  .separator {\n      margin: 0 1rem;\n  }\n\n  .exercise-id {\n      height: 28px; // Fix baseline issue\n  }\n\n  button {\n    color: ${colors.palette.gray};\n  }\n\n  .openstax-exercise-badges {\n      margin: 0;\n      line-height: 2rem;\n      svg {\n          display: block;\n          &:not(.interactive) {\n              margin: 0 0 0 6px !important;\n          }\n      }\n  }\n\n  ${breakpoints.desktop`\n      button.ox-icon-angle-left, button.ox-icon-angle-right {\n          display: none;\n      }\n      .separator {\n          display: inherit;\n      }\n  `}\n\n    /*\n    1. Show the arrows to move to previous and next question.\n    2. Show the number of questions.\n    3. Override box-shadow of icons when turned into a button.\n    */\n    ${breakpoints.tablet`\n        font-size: 1.6rem;\n        line-height: 2.5rem;\n\n        svg.ox-icon {\n            display: inherit;\n            margin: 0;\n        }\n        button.ox-icon-angle-left {\n            margin-right: ${breakpoints.margins.tablet};\n        }\n        button.ox-icon-angle-right {\n            margin-left: ${breakpoints.margins.tablet};\n        }\n        .openstax-exercise-badges svg {\n            display: none;\n        }\n        .num-questions, points {\n            display: inherit;\n        }\n\n        .exercise-id {\n            display: none;\n        }\n\n        button[class^='ox-icon-angle']:hover {\n            box-shadow: none;\n        }\n  `}\n\n  ${breakpoints.mobile`\n      font-size: 1.4rem;\n      line-height: 2rem;\n      padding: 10px 8px;\n\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n      button.ox-icon-angle-left {\n          margin-right: ${breakpoints.margins.mobile};\n      }\n  `}\n`;\nStepCardHeader.displayName = 'StepCardHeader';\n\nconst StepCardQuestion = styled.div<{ unpadded?: boolean }>`\n  .step-card-body {\n    ${mixins.stepCardPadding()}\n  }\n\n    & + div .step-card-body {\n        padding-top: 0;\n    }\n\n    &.exercise-context, &.exercise-stimulus, &.exercise-stem {\n        padding-bottom: 0;\n    }\n\n    ${breakpoints.only.mobile`\n        && .question-feedback {\n            margin-left: 0;\n\n           .arrow { margin-left: 12px; }\n        }\n    `}\n\n    .reading-step & {\n        padding: 0;\n    }\n\n    ${breakpoints.desktop`\n        .video-step &, .interactive-step & {\n            .openstax-exercise-badges {\n              margin-right: 3.8rem;\n            }\n        }\n    `}\n\n    ${breakpoints.mobile`\n        .openstax-exercise-badges svg {\n            margin-right: ${breakpoints.margins.mobile};\n        }\n    `}\n\n    &&& {\n        .openstax-has-html .splash .frame-wrapper { margin-top: 0; }\n    }\n`;\n\ninterface SharedProps {\n  questionNumber: number;\n  numberOfQuestions: number;\n  leftHeaderChildren?: ReactNode;\n  rightHeaderChildren?: ReactNode;\n  headerTitleChildren?: ReactNode;\n}\n\nexport interface StepCardProps extends SharedProps {\n  unpadded: boolean;\n  className?: string;\n  children?: ReactNode;\n  stepType: Step['type'];\n  availablePoints: AvailablePoints;\n  questionId?: string;\n  multipartBadge?: ReactNode;\n  isHomework: boolean;\n}\n\nconst StepCard = ({\n  questionNumber,\n  numberOfQuestions,\n  stepType,\n  isHomework,\n  availablePoints,\n  unpadded, // currently does nothing; may need to restore if this causes tutor stepcard regression\n  className,\n  children,\n  questionId,\n  multipartBadge,\n  leftHeaderChildren,\n  rightHeaderChildren,\n  headerTitleChildren,\n  ...otherProps }: StepCardProps) => {\n  return (\n    <OuterStepCard {...otherProps}>\n      {multipartBadge}\n      <InnerStepCard className={className}>\n        {questionNumber && isHomework && stepType === 'exercise' &&\n          <StepCardHeader>\n            <div>\n              {leftHeaderChildren}\n              <div className=\"question-info\">\n                {headerTitleChildren}\n                <span>Question {questionNumber}</span>\n                <span className=\"num-questions\">&nbsp;/ {numberOfQuestions}</span>\n                <span className=\"separator\">|</span>\n                <span className=\"question-id\">ID: {questionId}</span>\n              </div>\n            </div>\n            <div>\n              <div className=\"points\">{availablePoints} Points</div>\n              {rightHeaderChildren}\n            </div>\n          </StepCardHeader>\n        }\n        <StepCardQuestion unpadded={unpadded}>{children}</StepCardQuestion>\n      </InnerStepCard>\n    </OuterStepCard>\n  )\n};\nStepCard.displayName = 'OSStepCard';\n\nexport interface TaskStepCardProps extends SharedProps {\n  className?: string;\n  children?: ReactNode;\n  step: Step;\n  questionNumber: number;\n  numberOfQuestions: number;\n}\n\nconst TaskStepCard = ({\n  step,\n  questionNumber,\n  numberOfQuestions,\n  children,\n  className,\n  ...otherProps\n}: TaskStepCardProps) =>\n(<StepCard {...otherProps}\n  unpadded={true}\n  questionNumber={questionNumber}\n  numberOfQuestions={numberOfQuestions}\n  stepType={step.type}\n  isHomework={step.task.type === 'homework'}\n  data-task-step-id={step.id}\n  availablePoints={step.available_points}\n  className={cn(`${step.type}-step`, className)}\n  questionId={step.uid}\n>\n  {children}\n</StepCard>);\n\nTaskStepCard.displayName = 'OSTaskStepCard';\n\nexport { StepCard, TaskStepCard };\n","import { AvailablePoints, ID, ExerciseQuestionData, Task } from \"../types\";\nimport Button from \"./Button\";\nimport { Content } from \"./Content\";\nimport { Question } from './Question';\nimport { StepCardFooter } from \"./StepCardFooter\";\n\nexport interface ExerciseQuestionProps {\n  task?: Task;\n  question: ExerciseQuestionData;\n  answer_id_order?: ID[];\n  questionNumber: number;\n  choicesEnabled: boolean;\n  hasMultipleAttempts: boolean;\n  onAnswerChange: () => void;\n  onAnswerSave: () => void;\n  onNextStep: () => void;\n  feedback_html: string;\n  correct_answer_feedback_html: string;\n  is_completed: boolean;\n  correct_answer_id: ID;\n  incorrectAnswerId: ID;\n  answerId?: ID;\n  attempts_remaining: number;\n  published_comments?: string;\n  detailedSolution?: string;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  canUpdateCurrentStep: boolean;\n  attempt_number: number;\n  apiIsPending: boolean;\n  displaySolution: boolean;\n  available_points: AvailablePoints;\n  exercise_uid: string;\n  free_response?: string;\n}\n\nconst AttemptsRemaining = ({ count }: { count: number }) => {\n  return (\n    <div>{count} attempt{count === 1 ? '' : 's'} left</div>\n  );\n}\n\nconst PublishedComments = ({ published_comments }: { published_comments?: string }) => {\n  if (!published_comments) { return null; }\n\n  return (\n    <div>\n      <strong>Feedback:</strong> {published_comments}\n    </div>\n  );\n}\n\nconst SaveButton = (props: {\n  disabled: boolean, isWaiting: boolean, attempt_number: number\n} & React.ComponentPropsWithoutRef<'button'>) => (\n  <Button\n    {...props}\n    waitingText=\"Saving…\"\n    isWaiting={props.isWaiting}\n    data-test-id=\"submit-answer-btn\"\n  >\n    {props.attempt_number == 0 ? 'Submit' : 'Re-submit'}\n  </Button>\n);\n\nconst NextButton = (props: {\n  canUpdateCurrentStep: boolean,\n  onNextStep: ExerciseQuestionProps['onNextStep']\n}) => {\n  return (\n    <Button onClick={props.onNextStep} data-test-id=\"continue-btn\">\n      {props.canUpdateCurrentStep ? 'Continue' : 'Next'}\n    </Button>\n  );\n}\n\nconst FreeResponseReview = ({ free_response }: Pick<ExerciseQuestionProps, \"free_response\">) => {\n  if (!free_response) { return null; }\n  return (\n    <>\n      <div className=\"free-response\">{free_response}</div>\n    </>\n  );\n}\n\nexport const ExerciseQuestion = (props: ExerciseQuestionProps) => {\n  const {\n    question, task, answer_id_order, onAnswerChange, feedback_html, correct_answer_feedback_html,\n    is_completed, correct_answer_id, incorrectAnswerId, choicesEnabled, questionNumber,\n    answerId, hasMultipleAttempts, attempts_remaining, published_comments, detailedSolution,\n    canAnswer, needsSaved, attempt_number, apiIsPending, onAnswerSave, onNextStep, canUpdateCurrentStep,\n    displaySolution, available_points, free_response\n  } = props;\n\n  return (\n    <div data-test-id=\"student-exercise-question\">\n      <Question\n        task={task}\n        question={question}\n        answerIdOrder={answer_id_order}\n        choicesEnabled={choicesEnabled}\n        answer_id={answerId}\n        questionNumber={questionNumber}\n        onChange={onAnswerChange}\n        feedback_html={feedback_html}\n        correct_answer_feedback_html={correct_answer_feedback_html}\n        correct_answer_id={is_completed ? correct_answer_id : null}\n        incorrectAnswerId={incorrectAnswerId}\n        className=\"step-card-body\"\n        hideAnswers={false}\n        displayFormats={false}\n        displaySolution={displaySolution}\n      >\n        <FreeResponseReview free_response={free_response} />\n      </Question>\n      <StepCardFooter className=\"step-card-footer\">\n        <div className=\"points\">\n          <strong>Points: {available_points}</strong>\n          <span className=\"attempts-left\">\n            {hasMultipleAttempts &&\n              attempts_remaining > 0 &&\n              <AttemptsRemaining count={attempts_remaining} />}\n          </span>\n          <PublishedComments published_comments={published_comments} />\n          {detailedSolution && (<div><strong>Detailed solution:</strong> <Content html={detailedSolution} /></div>)}\n        </div>\n        <div className=\"controls\">\n          {canAnswer && needsSaved ?\n            <SaveButton\n              disabled={apiIsPending || !answerId}\n              isWaiting={apiIsPending}\n              attempt_number={attempt_number}\n              onClick={onAnswerSave}\n            /> :\n            <NextButton onNextStep={onNextStep} canUpdateCurrentStep={canUpdateCurrentStep} />}\n        </div>\n      </StepCardFooter>\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport { Content } from './Content';\nimport { TaskStepCard } from './Card';\nimport { AvailablePoints, ExerciseData, ID, Step } from 'src/types';\nimport { ExerciseQuestion } from './ExerciseQuestion';\n\nconst StyledTaskStepCard = styled(TaskStepCard)`\n  font-size: 1.8rem;\n  line-height: 3rem;\n`;\n\nconst Preamble = ({ exercise }: { exercise: ExerciseData }) => {\n  return (\n    <>\n      {exercise.context &&\n        <Content className=\"step-card-body exercise-context\"\n          block html={exercise.context} />}\n\n      {exercise.stimulus_html &&\n        <Content className=\"step-card-body exercise-stimulus\"\n          block html={exercise.stimulus_html} />}\n    </>\n  );\n};\n\nexport interface ExerciseProps {\n  exercise: ExerciseData;\n  step: Step;\n  numberOfQuestions: number;\n  questionNumber: number;\n  canAnswer: boolean;\n  needsSaved: boolean;\n  answer_id_order?: ID[];\n  hasMultipleAttempts: boolean;\n  onAnswerChange: () => void;\n  onAnswerSave: () => void;\n  onNextStep: () => void;\n  canUpdateCurrentStep: boolean;\n  attempt_number: number;\n  apiIsPending: boolean;\n  available_points: AvailablePoints;\n}\n\nexport const Exercise = ({\n  numberOfQuestions, questionNumber, step, exercise, canAnswer, needsSaved, ...props\n}: ExerciseProps) => (\n  <StyledTaskStepCard\n    step={step}\n    questionNumber={questionNumber}\n    numberOfQuestions={numberOfQuestions}\n  >\n    <Preamble exercise={exercise} />\n\n    {exercise.questions.map((q) =>\n      <ExerciseQuestion\n        {...props}\n        {...step}\n        exercise_uid={exercise.uid}\n        key={q.id}\n        question={q}\n        questionNumber={questionNumber}\n        choicesEnabled={canAnswer}\n        canAnswer={canAnswer}\n        needsSaved={needsSaved}\n        canUpdateCurrentStep={canAnswer}\n        displaySolution={true}\n        answerId={step.answer_id}\n      />\n    )}\n  </StyledTaskStepCard>\n);\n"],"names":["ALPHABET","MAX_CORRECTNESS","isAnswerCorrect","answer","correctAnswerId","id","isCorrect","correctness","isAnswerIncorrect","incorrectAnswerId","isAnswerChecked","chosenAnswer","Boolean","find","a","countWords","text","trimmedText","trim","words","match","length","Content","html","component","block","props","_excluded","undefined","React","cloneElement","_jsx","dangerouslySetInnerHTML","__html","SimpleFeedback","children","contentRenderer","className","classnames","Feedback","position","wrapperClasses","_jsxs","Answer","type","iter","disabled","onKeyPress","qid","hasCorrectAnswer","answered_count","show_all_feedback","body","feedback","selectedCount","isChecked","isIncorrect","correctIncorrectIcon","classes","cn","ariaLabel","onChangeAnswer","radioBox","checked","name","onChange","feedback_html","percent","selected_count","Math","round","content_html","_Fragment","htmlFor","onClick","role","displayName","defaultAnswerType","AnswersTable","idCounter","question","hideAnswers","choicesEnabled","correct_answer_id","answer_id","correct_answer_feedback_html","answerIdOrder","instructions","sortedAnswersByIdOrder","idOrder","answers","slice","sort","b","indexOf","questionAnswerProps","answersHtml","map","i","additionalProps","key","answerProps","Object","assign","push","index","forEach","item","spliceIndex","splice","palette","red","danger","darkRed","lightRed","green","lightGreen","darkGreen","paleYellow","teal","blue","lightBlue","neutralLightBlue","tangerine","gray","darkGray","pale","light","white","neutralLightest","neutralCool","neutralBright","neutralLighter","neutralLight","neutralMedium","neutral","neutralThin","neutralDark","neutralDarker","black","orange","colors","color","correct","background","incorrect","hover","label","colorHover","colorSelected","arrowOuterColor","popover","borderColor","card","button","backgroundHover","backgroundActive","freeResponse","layouts","verticalSpacing","horizontalSpacing","horizontalBuffer","bubbleSize","labelSpacing","arrow","width","height","borderWidth","maxWidth","BREAKPOINTS","mobile","tablet","desktop","large","breakpoints","css","only","margins","transitions","mixins","_templateObject5","answerColor","values","answerChecked","answerCorrect","answerIncorrect","answerHover","answerCorrectText","answerCorrectAnswer","resetText","_templateObject10","stepCardPadding","_templateObject11","StyledQuestion","styled","div","Question","exerciseUid","solution","exercise_uid","questionNumber","context","task","hidePreambles","stem_html","collaborator_solutions","formats","stimulus_html","hasIncorrectAnswer","taskIsDeleted","is_deleted","taskIsHomework","hasSolution","displaySolution","s","join","QuestionHtml","hidden","displayFormats","FormatsListing","format","StyledButton","_templateObject","Button","isWaiting","waitingText","otherProps","StepCardFooter","_templateObject2","TextAreaErrorStyle","StyledFreeResponse","SyledQuestionStem","_templateObject3","InfoRow","_templateObject4","hasChildren","FreeResponseTextArea","textarea","isOverWordLimit","readOnly","RevertButton","FreeResponseInput","availablePoints","cancelHandler","defaultValue","infoRowChildren","isSubmitDisabled","pointsChildren","saveHandler","submitBtnLabel","textHasChanged","wordLimit","questionProps","placeholder","InnerStepCard","OuterStepCard","StepCardHeader","StepCardQuestion","StepCard","numberOfQuestions","stepType","isHomework","unpadded","questionId","multipartBadge","leftHeaderChildren","rightHeaderChildren","headerTitleChildren","TaskStepCard","step","available_points","uid","AttemptsRemaining","count","PublishedComments","published_comments","SaveButton","attempt_number","NextButton","onNextStep","canUpdateCurrentStep","FreeResponseReview","free_response","ExerciseQuestion","answer_id_order","onAnswerChange","is_completed","answerId","hasMultipleAttempts","attempts_remaining","detailedSolution","canAnswer","needsSaved","apiIsPending","onAnswerSave","StyledTaskStepCard","Preamble","exercise","Exercise","questions","q","_createElement"],"mappings":"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"}